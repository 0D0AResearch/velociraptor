// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jobs.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"
import _ "www.velocidex.com/golang/velociraptor/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// This is done because signing is done on a group of messages as they arrive
// over the POST, but after decryption and unpacking, messages are queued
// individually and therefore need to retain their authenticated status.
type GrrMessage_AuthorizationState int32

const (
	GrrMessage_UNAUTHENTICATED GrrMessage_AuthorizationState = 0
	GrrMessage_AUTHENTICATED   GrrMessage_AuthorizationState = 1
	// This indicates that clocks are out of sync and this message may be a
	// replay.
	GrrMessage_DESYNCHRONIZED GrrMessage_AuthorizationState = 2
)

var GrrMessage_AuthorizationState_name = map[int32]string{
	0: "UNAUTHENTICATED",
	1: "AUTHENTICATED",
	2: "DESYNCHRONIZED",
}
var GrrMessage_AuthorizationState_value = map[string]int32{
	"UNAUTHENTICATED": 0,
	"AUTHENTICATED":   1,
	"DESYNCHRONIZED":  2,
}

func (x GrrMessage_AuthorizationState) String() string {
	return proto.EnumName(GrrMessage_AuthorizationState_name, int32(x))
}
func (GrrMessage_AuthorizationState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{0, 0}
}

type GrrMessage_Type int32

const (
	GrrMessage_MESSAGE  GrrMessage_Type = 0
	GrrMessage_STATUS   GrrMessage_Type = 1
	GrrMessage_ITERATOR GrrMessage_Type = 2
)

var GrrMessage_Type_name = map[int32]string{
	0: "MESSAGE",
	1: "STATUS",
	2: "ITERATOR",
}
var GrrMessage_Type_value = map[string]int32{
	"MESSAGE":  0,
	"STATUS":   1,
	"ITERATOR": 2,
}

func (x GrrMessage_Type) String() string {
	return proto.EnumName(GrrMessage_Type_name, int32(x))
}
func (GrrMessage_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{0, 1}
}

type GrrMessage_Priority int32

const (
	GrrMessage_LOW_PRIORITY    GrrMessage_Priority = 0
	GrrMessage_MEDIUM_PRIORITY GrrMessage_Priority = 1
	GrrMessage_HIGH_PRIORITY   GrrMessage_Priority = 2
)

var GrrMessage_Priority_name = map[int32]string{
	0: "LOW_PRIORITY",
	1: "MEDIUM_PRIORITY",
	2: "HIGH_PRIORITY",
}
var GrrMessage_Priority_value = map[string]int32{
	"LOW_PRIORITY":    0,
	"MEDIUM_PRIORITY": 1,
	"HIGH_PRIORITY":   2,
}

func (x GrrMessage_Priority) String() string {
	return proto.EnumName(GrrMessage_Priority_name, int32(x))
}
func (GrrMessage_Priority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{0, 2}
}

// Velociraptor specific messages.
type GrrMessage_ClientType int32

const (
	GrrMessage_GRR          GrrMessage_ClientType = 0
	GrrMessage_VELOCIRAPTOR GrrMessage_ClientType = 1
)

var GrrMessage_ClientType_name = map[int32]string{
	0: "GRR",
	1: "VELOCIRAPTOR",
}
var GrrMessage_ClientType_value = map[string]int32{
	"GRR":          0,
	"VELOCIRAPTOR": 1,
}

func (x GrrMessage_ClientType) String() string {
	return proto.EnumName(GrrMessage_ClientType_name, int32(x))
}
func (GrrMessage_ClientType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{0, 3}
}

type Certificate_Type int32

const (
	Certificate_CSR Certificate_Type = 0
	Certificate_CRT Certificate_Type = 1
	Certificate_CA  Certificate_Type = 2
)

var Certificate_Type_name = map[int32]string{
	0: "CSR",
	1: "CRT",
	2: "CA",
}
var Certificate_Type_value = map[string]int32{
	"CSR": 0,
	"CRT": 1,
	"CA":  2,
}

func (x Certificate_Type) String() string {
	return proto.EnumName(Certificate_Type_name, int32(x))
}
func (Certificate_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{1, 0}
}

type GrrStatus_ReturnedStatus int32

const (
	GrrStatus_OK                      GrrStatus_ReturnedStatus = 0
	GrrStatus_IOERROR                 GrrStatus_ReturnedStatus = 1
	GrrStatus_RETRANSMISSION_DETECTED GrrStatus_ReturnedStatus = 2
	GrrStatus_CLIENT_KILLED           GrrStatus_ReturnedStatus = 3
	GrrStatus_NETWORK_LIMIT_EXCEEDED  GrrStatus_ReturnedStatus = 4
	GrrStatus_WORKER_STUCK            GrrStatus_ReturnedStatus = 9
	GrrStatus_GENERIC_ERROR           GrrStatus_ReturnedStatus = 10
)

var GrrStatus_ReturnedStatus_name = map[int32]string{
	0:  "OK",
	1:  "IOERROR",
	2:  "RETRANSMISSION_DETECTED",
	3:  "CLIENT_KILLED",
	4:  "NETWORK_LIMIT_EXCEEDED",
	9:  "WORKER_STUCK",
	10: "GENERIC_ERROR",
}
var GrrStatus_ReturnedStatus_value = map[string]int32{
	"OK":                      0,
	"IOERROR":                 1,
	"RETRANSMISSION_DETECTED": 2,
	"CLIENT_KILLED":           3,
	"NETWORK_LIMIT_EXCEEDED":  4,
	"WORKER_STUCK":            9,
	"GENERIC_ERROR":           10,
}

func (x GrrStatus_ReturnedStatus) String() string {
	return proto.EnumName(GrrStatus_ReturnedStatus_name, int32(x))
}
func (GrrStatus_ReturnedStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{3, 0}
}

type PackedMessageList_CompressionType int32

const (
	PackedMessageList_UNCOMPRESSED PackedMessageList_CompressionType = 0
	// Compressed using the zlib.compress() function.
	PackedMessageList_ZCOMPRESSION PackedMessageList_CompressionType = 1
)

var PackedMessageList_CompressionType_name = map[int32]string{
	0: "UNCOMPRESSED",
	1: "ZCOMPRESSION",
}
var PackedMessageList_CompressionType_value = map[string]int32{
	"UNCOMPRESSED": 0,
	"ZCOMPRESSION": 1,
}

func (x PackedMessageList_CompressionType) String() string {
	return proto.EnumName(PackedMessageList_CompressionType_name, int32(x))
}
func (PackedMessageList_CompressionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{5, 0}
}

type CipherProperties_HMACType int32

const (
	// Older clients use a HMAC only on the encrypted message.
	CipherProperties_SIMPLE_HMAC CipherProperties_HMACType = 0
	// Newer clients also include the encrypted cipher and API version in the
	// hmac.
	CipherProperties_FULL_HMAC CipherProperties_HMACType = 1
)

var CipherProperties_HMACType_name = map[int32]string{
	0: "SIMPLE_HMAC",
	1: "FULL_HMAC",
}
var CipherProperties_HMACType_value = map[string]int32{
	"SIMPLE_HMAC": 0,
	"FULL_HMAC":   1,
}

func (x CipherProperties_HMACType) String() string {
	return proto.EnumName(CipherProperties_HMACType_name, int32(x))
}
func (CipherProperties_HMACType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{6, 0}
}

// This status code applies for the entire communication.
type ClientCommunication_Status int32

const (
	ClientCommunication_UNSET        ClientCommunication_Status = 0
	ClientCommunication_OK           ClientCommunication_Status = 200
	ClientCommunication_BAD_REQUEST  ClientCommunication_Status = 400
	ClientCommunication_CIPHER_ERROR ClientCommunication_Status = 406
)

var ClientCommunication_Status_name = map[int32]string{
	0:   "UNSET",
	200: "OK",
	400: "BAD_REQUEST",
	406: "CIPHER_ERROR",
}
var ClientCommunication_Status_value = map[string]int32{
	"UNSET":        0,
	"OK":           200,
	"BAD_REQUEST":  400,
	"CIPHER_ERROR": 406,
}

func (x ClientCommunication_Status) String() string {
	return proto.EnumName(ClientCommunication_Status_name, int32(x))
}
func (ClientCommunication_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{8, 0}
}

// This message is sent between the client and the server.
// Next field: 24
type GrrMessage struct {
	SessionId  string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	RequestId  uint64 `protobuf:"varint,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ResponseId uint64 `protobuf:"varint,3,opt,name=response_id,json=responseId,proto3" json:"response_id,omitempty"`
	Name       string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// This field contains an encoded rdfvalue.
	Args      []byte                        `protobuf:"bytes,5,opt,name=args,proto3" json:"args,omitempty"`
	Source    string                        `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	AuthState GrrMessage_AuthorizationState `protobuf:"varint,7,opt,name=auth_state,json=authState,proto3,enum=proto.GrrMessage_AuthorizationState" json:"auth_state,omitempty"`
	// The final response to a request carries this type which indicates it is a
	// status message.
	Type            GrrMessage_Type     `protobuf:"varint,8,opt,name=type,proto3,enum=proto.GrrMessage_Type" json:"type,omitempty"`
	Priority        GrrMessage_Priority `protobuf:"varint,9,opt,name=priority,proto3,enum=proto.GrrMessage_Priority" json:"priority,omitempty"`
	Ttl             uint32              `protobuf:"varint,10,opt,name=ttl,proto3" json:"ttl,omitempty"`
	RequireFastpoll bool                `protobuf:"varint,11,opt,name=require_fastpoll,json=requireFastpoll,proto3" json:"require_fastpoll,omitempty"`
	CpuLimit        float32             `protobuf:"fixed32,12,opt,name=cpu_limit,json=cpuLimit,proto3" json:"cpu_limit,omitempty"`
	ArgsAge         uint64              `protobuf:"varint,13,opt,name=args_age,json=argsAge,proto3" json:"args_age,omitempty"`
	// The rdfvalue class of the args.
	ArgsRdfName string `protobuf:"bytes,14,opt,name=args_rdf_name,json=argsRdfName,proto3" json:"args_rdf_name,omitempty"`
	// The id of this message in the scheduler.
	TaskId uint64 `protobuf:"varint,15,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// The ttl used in the task scheduler.
	TaskTtl int32  `protobuf:"varint,16,opt,name=task_ttl,json=taskTtl,proto3" json:"task_ttl,omitempty"`
	Queue   string `protobuf:"bytes,17,opt,name=queue,proto3" json:"queue,omitempty"`
	Eta     uint64 `protobuf:"varint,18,opt,name=eta,proto3" json:"eta,omitempty"`
	// Human readable info about the last process leasing this message.
	LastLease         string `protobuf:"bytes,19,opt,name=last_lease,json=lastLease,proto3" json:"last_lease,omitempty"`
	NetworkBytesLimit uint64 `protobuf:"varint,21,opt,name=network_bytes_limit,json=networkBytesLimit,proto3" json:"network_bytes_limit,omitempty"`
	Timestamp         uint64 `protobuf:"varint,22,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// This is only set by the Velociraptor client to indicate special
	// processing by the Velociraptor server.
	ClientType GrrMessage_ClientType `protobuf:"varint,6600,opt,name=client_type,json=clientType,proto3,enum=proto.GrrMessage_ClientType" json:"client_type,omitempty"`
	// Supercedes the args parameter.
	Payload              *any.Any `protobuf:"bytes,23,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrrMessage) Reset()         { *m = GrrMessage{} }
func (m *GrrMessage) String() string { return proto.CompactTextString(m) }
func (*GrrMessage) ProtoMessage()    {}
func (*GrrMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{0}
}
func (m *GrrMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrrMessage.Unmarshal(m, b)
}
func (m *GrrMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrrMessage.Marshal(b, m, deterministic)
}
func (dst *GrrMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrrMessage.Merge(dst, src)
}
func (m *GrrMessage) XXX_Size() int {
	return xxx_messageInfo_GrrMessage.Size(m)
}
func (m *GrrMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_GrrMessage.DiscardUnknown(m)
}

var xxx_messageInfo_GrrMessage proto.InternalMessageInfo

func (m *GrrMessage) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *GrrMessage) GetRequestId() uint64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *GrrMessage) GetResponseId() uint64 {
	if m != nil {
		return m.ResponseId
	}
	return 0
}

func (m *GrrMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GrrMessage) GetArgs() []byte {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *GrrMessage) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *GrrMessage) GetAuthState() GrrMessage_AuthorizationState {
	if m != nil {
		return m.AuthState
	}
	return GrrMessage_UNAUTHENTICATED
}

func (m *GrrMessage) GetType() GrrMessage_Type {
	if m != nil {
		return m.Type
	}
	return GrrMessage_MESSAGE
}

func (m *GrrMessage) GetPriority() GrrMessage_Priority {
	if m != nil {
		return m.Priority
	}
	return GrrMessage_LOW_PRIORITY
}

func (m *GrrMessage) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *GrrMessage) GetRequireFastpoll() bool {
	if m != nil {
		return m.RequireFastpoll
	}
	return false
}

func (m *GrrMessage) GetCpuLimit() float32 {
	if m != nil {
		return m.CpuLimit
	}
	return 0
}

func (m *GrrMessage) GetArgsAge() uint64 {
	if m != nil {
		return m.ArgsAge
	}
	return 0
}

func (m *GrrMessage) GetArgsRdfName() string {
	if m != nil {
		return m.ArgsRdfName
	}
	return ""
}

func (m *GrrMessage) GetTaskId() uint64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *GrrMessage) GetTaskTtl() int32 {
	if m != nil {
		return m.TaskTtl
	}
	return 0
}

func (m *GrrMessage) GetQueue() string {
	if m != nil {
		return m.Queue
	}
	return ""
}

func (m *GrrMessage) GetEta() uint64 {
	if m != nil {
		return m.Eta
	}
	return 0
}

func (m *GrrMessage) GetLastLease() string {
	if m != nil {
		return m.LastLease
	}
	return ""
}

func (m *GrrMessage) GetNetworkBytesLimit() uint64 {
	if m != nil {
		return m.NetworkBytesLimit
	}
	return 0
}

func (m *GrrMessage) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GrrMessage) GetClientType() GrrMessage_ClientType {
	if m != nil {
		return m.ClientType
	}
	return GrrMessage_GRR
}

func (m *GrrMessage) GetPayload() *any.Any {
	if m != nil {
		return m.Payload
	}
	return nil
}

// Certificates are exchanged with this.
type Certificate struct {
	Type                 Certificate_Type `protobuf:"varint,1,opt,name=type,proto3,enum=proto.Certificate_Type" json:"type,omitempty"`
	Pem                  []byte           `protobuf:"bytes,2,opt,name=pem,proto3" json:"pem,omitempty"`
	Cn                   string           `protobuf:"bytes,3,opt,name=cn,proto3" json:"cn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Certificate) Reset()         { *m = Certificate{} }
func (m *Certificate) String() string { return proto.CompactTextString(m) }
func (*Certificate) ProtoMessage()    {}
func (*Certificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{1}
}
func (m *Certificate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Certificate.Unmarshal(m, b)
}
func (m *Certificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Certificate.Marshal(b, m, deterministic)
}
func (dst *Certificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Certificate.Merge(dst, src)
}
func (m *Certificate) XXX_Size() int {
	return xxx_messageInfo_Certificate.Size(m)
}
func (m *Certificate) XXX_DiscardUnknown() {
	xxx_messageInfo_Certificate.DiscardUnknown(m)
}

var xxx_messageInfo_Certificate proto.InternalMessageInfo

func (m *Certificate) GetType() Certificate_Type {
	if m != nil {
		return m.Type
	}
	return Certificate_CSR
}

func (m *Certificate) GetPem() []byte {
	if m != nil {
		return m.Pem
	}
	return nil
}

func (m *Certificate) GetCn() string {
	if m != nil {
		return m.Cn
	}
	return ""
}

type CpuSeconds struct {
	UserCpuTime          float32  `protobuf:"fixed32,1,opt,name=user_cpu_time,json=userCpuTime,proto3" json:"user_cpu_time,omitempty"`
	SystemCpuTime        float32  `protobuf:"fixed32,2,opt,name=system_cpu_time,json=systemCpuTime,proto3" json:"system_cpu_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CpuSeconds) Reset()         { *m = CpuSeconds{} }
func (m *CpuSeconds) String() string { return proto.CompactTextString(m) }
func (*CpuSeconds) ProtoMessage()    {}
func (*CpuSeconds) Descriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{2}
}
func (m *CpuSeconds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CpuSeconds.Unmarshal(m, b)
}
func (m *CpuSeconds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CpuSeconds.Marshal(b, m, deterministic)
}
func (dst *CpuSeconds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CpuSeconds.Merge(dst, src)
}
func (m *CpuSeconds) XXX_Size() int {
	return xxx_messageInfo_CpuSeconds.Size(m)
}
func (m *CpuSeconds) XXX_DiscardUnknown() {
	xxx_messageInfo_CpuSeconds.DiscardUnknown(m)
}

var xxx_messageInfo_CpuSeconds proto.InternalMessageInfo

func (m *CpuSeconds) GetUserCpuTime() float32 {
	if m != nil {
		return m.UserCpuTime
	}
	return 0
}

func (m *CpuSeconds) GetSystemCpuTime() float32 {
	if m != nil {
		return m.SystemCpuTime
	}
	return 0
}

// This is a status response that is sent for each complete
// transaction. It is always the last message in the transaction.
type GrrStatus struct {
	Status               GrrStatus_ReturnedStatus `protobuf:"varint,1,opt,name=status,proto3,enum=proto.GrrStatus_ReturnedStatus" json:"status,omitempty"`
	ErrorMessage         string                   `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Backtrace            string                   `protobuf:"bytes,3,opt,name=backtrace,proto3" json:"backtrace,omitempty"`
	CpuTimeUsed          *CpuSeconds              `protobuf:"bytes,4,opt,name=cpu_time_used,json=cpuTimeUsed,proto3" json:"cpu_time_used,omitempty"`
	ChildSessionId       string                   `protobuf:"bytes,5,opt,name=child_session_id,json=childSessionId,proto3" json:"child_session_id,omitempty"`
	NetworkBytesSent     uint64                   `protobuf:"varint,6,opt,name=network_bytes_sent,json=networkBytesSent,proto3" json:"network_bytes_sent,omitempty"`
	NannyStatus          string                   `protobuf:"bytes,7,opt,name=nanny_status,json=nannyStatus,proto3" json:"nanny_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GrrStatus) Reset()         { *m = GrrStatus{} }
func (m *GrrStatus) String() string { return proto.CompactTextString(m) }
func (*GrrStatus) ProtoMessage()    {}
func (*GrrStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{3}
}
func (m *GrrStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrrStatus.Unmarshal(m, b)
}
func (m *GrrStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrrStatus.Marshal(b, m, deterministic)
}
func (dst *GrrStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrrStatus.Merge(dst, src)
}
func (m *GrrStatus) XXX_Size() int {
	return xxx_messageInfo_GrrStatus.Size(m)
}
func (m *GrrStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_GrrStatus.DiscardUnknown(m)
}

var xxx_messageInfo_GrrStatus proto.InternalMessageInfo

func (m *GrrStatus) GetStatus() GrrStatus_ReturnedStatus {
	if m != nil {
		return m.Status
	}
	return GrrStatus_OK
}

func (m *GrrStatus) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *GrrStatus) GetBacktrace() string {
	if m != nil {
		return m.Backtrace
	}
	return ""
}

func (m *GrrStatus) GetCpuTimeUsed() *CpuSeconds {
	if m != nil {
		return m.CpuTimeUsed
	}
	return nil
}

func (m *GrrStatus) GetChildSessionId() string {
	if m != nil {
		return m.ChildSessionId
	}
	return ""
}

func (m *GrrStatus) GetNetworkBytesSent() uint64 {
	if m != nil {
		return m.NetworkBytesSent
	}
	return 0
}

func (m *GrrStatus) GetNannyStatus() string {
	if m != nil {
		return m.NannyStatus
	}
	return ""
}

// This is a list of messages
type MessageList struct {
	Job                  []*GrrMessage `protobuf:"bytes,1,rep,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MessageList) Reset()         { *m = MessageList{} }
func (m *MessageList) String() string { return proto.CompactTextString(m) }
func (*MessageList) ProtoMessage()    {}
func (*MessageList) Descriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{4}
}
func (m *MessageList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageList.Unmarshal(m, b)
}
func (m *MessageList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageList.Marshal(b, m, deterministic)
}
func (dst *MessageList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageList.Merge(dst, src)
}
func (m *MessageList) XXX_Size() int {
	return xxx_messageInfo_MessageList.Size(m)
}
func (m *MessageList) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageList.DiscardUnknown(m)
}

var xxx_messageInfo_MessageList proto.InternalMessageInfo

func (m *MessageList) GetJob() []*GrrMessage {
	if m != nil {
		return m.Job
	}
	return nil
}

// This is the protobuf which is transmitted on the wire
type PackedMessageList struct {
	// This is a serialized MessageList for signing
	MessageList []byte `protobuf:"bytes,1,opt,name=message_list,json=messageList,proto3" json:"message_list,omitempty"`
	Source      string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	// How the message_list element is compressed
	Compression          PackedMessageList_CompressionType `protobuf:"varint,4,opt,name=compression,proto3,enum=proto.PackedMessageList_CompressionType" json:"compression,omitempty"`
	Timestamp            uint64                            `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *PackedMessageList) Reset()         { *m = PackedMessageList{} }
func (m *PackedMessageList) String() string { return proto.CompactTextString(m) }
func (*PackedMessageList) ProtoMessage()    {}
func (*PackedMessageList) Descriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{5}
}
func (m *PackedMessageList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackedMessageList.Unmarshal(m, b)
}
func (m *PackedMessageList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackedMessageList.Marshal(b, m, deterministic)
}
func (dst *PackedMessageList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackedMessageList.Merge(dst, src)
}
func (m *PackedMessageList) XXX_Size() int {
	return xxx_messageInfo_PackedMessageList.Size(m)
}
func (m *PackedMessageList) XXX_DiscardUnknown() {
	xxx_messageInfo_PackedMessageList.DiscardUnknown(m)
}

var xxx_messageInfo_PackedMessageList proto.InternalMessageInfo

func (m *PackedMessageList) GetMessageList() []byte {
	if m != nil {
		return m.MessageList
	}
	return nil
}

func (m *PackedMessageList) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *PackedMessageList) GetCompression() PackedMessageList_CompressionType {
	if m != nil {
		return m.Compression
	}
	return PackedMessageList_UNCOMPRESSED
}

func (m *PackedMessageList) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type CipherProperties struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key  []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// This IV is used to encrypt the cipher metadata block. Note: Both the
	// CipherProperties() and the CipherMetadata() protobufs do not change for all
	// messages in this session.
	MetadataIv []byte `protobuf:"bytes,3,opt,name=metadata_iv,json=metadataIv,proto3" json:"metadata_iv,omitempty"`
	// The key used for the hmac.
	HmacKey []byte `protobuf:"bytes,5,opt,name=hmac_key,json=hmacKey,proto3" json:"hmac_key,omitempty"`
	// The API version of the cipher.
	HmacType             CipherProperties_HMACType `protobuf:"varint,6,opt,name=hmac_type,json=hmacType,proto3,enum=proto.CipherProperties_HMACType" json:"hmac_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CipherProperties) Reset()         { *m = CipherProperties{} }
func (m *CipherProperties) String() string { return proto.CompactTextString(m) }
func (*CipherProperties) ProtoMessage()    {}
func (*CipherProperties) Descriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{6}
}
func (m *CipherProperties) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CipherProperties.Unmarshal(m, b)
}
func (m *CipherProperties) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CipherProperties.Marshal(b, m, deterministic)
}
func (dst *CipherProperties) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CipherProperties.Merge(dst, src)
}
func (m *CipherProperties) XXX_Size() int {
	return xxx_messageInfo_CipherProperties.Size(m)
}
func (m *CipherProperties) XXX_DiscardUnknown() {
	xxx_messageInfo_CipherProperties.DiscardUnknown(m)
}

var xxx_messageInfo_CipherProperties proto.InternalMessageInfo

func (m *CipherProperties) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CipherProperties) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *CipherProperties) GetMetadataIv() []byte {
	if m != nil {
		return m.MetadataIv
	}
	return nil
}

func (m *CipherProperties) GetHmacKey() []byte {
	if m != nil {
		return m.HmacKey
	}
	return nil
}

func (m *CipherProperties) GetHmacType() CipherProperties_HMACType {
	if m != nil {
		return m.HmacType
	}
	return CipherProperties_SIMPLE_HMAC
}

type CipherMetadata struct {
	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// The signature of the encrypted cipher block.
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CipherMetadata) Reset()         { *m = CipherMetadata{} }
func (m *CipherMetadata) String() string { return proto.CompactTextString(m) }
func (*CipherMetadata) ProtoMessage()    {}
func (*CipherMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{7}
}
func (m *CipherMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CipherMetadata.Unmarshal(m, b)
}
func (m *CipherMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CipherMetadata.Marshal(b, m, deterministic)
}
func (dst *CipherMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CipherMetadata.Merge(dst, src)
}
func (m *CipherMetadata) XXX_Size() int {
	return xxx_messageInfo_CipherMetadata.Size(m)
}
func (m *CipherMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_CipherMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_CipherMetadata proto.InternalMessageInfo

func (m *CipherMetadata) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *CipherMetadata) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// Next field: 11
type ClientCommunication struct {
	// This message is a serialized SignedMessageList() protobuf, encrypted using
	// the session key (Encrypted inside field 2) and the per-packet IV (field 8).
	Encrypted []byte `protobuf:"bytes,1,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	// This is a CipherProperties() protobuf encrypted with the public key of the
	// receiver. Contains the session key and iv, as well as hmac key. This IV
	// does not change for the duration of the session. It is used to decrypt the
	// CipherMetadata() (field 9).
	EncryptedCipher []byte `protobuf:"bytes,2,opt,name=encrypted_cipher,json=encryptedCipher,proto3" json:"encrypted_cipher,omitempty"`
	// A serialized CipherMetadata() protobuf, encrypted with the session
	// key. Contains the RSA signature of the digest of the serialized
	// CipherProperties() above, signed with the sender's private key.
	EncryptedCipherMetadata []byte `protobuf:"bytes,9,opt,name=encrypted_cipher_metadata,json=encryptedCipherMetadata,proto3" json:"encrypted_cipher_metadata,omitempty"`
	// This iv is used to encrypt the encrypted field (No. 1). This IV changes for
	// each packet.
	PacketIv []byte `protobuf:"bytes,8,opt,name=packet_iv,json=packetIv,proto3" json:"packet_iv,omitempty"`
	// The number of messages waiting on the input queue. The client
	// fills this in so the server can limit the number of messages
	// issued to the client as a means of throttling it.
	QueueSize  uint32                     `protobuf:"varint,4,opt,name=queue_size,json=queueSize,proto3" json:"queue_size,omitempty"`
	Status     ClientCommunication_Status `protobuf:"varint,5,opt,name=status,proto3,enum=proto.ClientCommunication_Status" json:"status,omitempty"`
	ApiVersion uint32                     `protobuf:"varint,6,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// This is the SIMPLE_HMAC. It covers the "encrypted" field only.
	Hmac []byte `protobuf:"bytes,7,opt,name=hmac,proto3" json:"hmac,omitempty"`
	// This is the FULL_HMAC. It coverts:
	// 1) the "encrypted" field,
	// 2) The "encrypted_cipher" field.
	// 3) The encrypted_cipher_metadata field
	// 4) The packet iv
	// 5) the api_version.
	FullHmac             []byte   `protobuf:"bytes,10,opt,name=full_hmac,json=fullHmac,proto3" json:"full_hmac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientCommunication) Reset()         { *m = ClientCommunication{} }
func (m *ClientCommunication) String() string { return proto.CompactTextString(m) }
func (*ClientCommunication) ProtoMessage()    {}
func (*ClientCommunication) Descriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{8}
}
func (m *ClientCommunication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientCommunication.Unmarshal(m, b)
}
func (m *ClientCommunication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientCommunication.Marshal(b, m, deterministic)
}
func (dst *ClientCommunication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientCommunication.Merge(dst, src)
}
func (m *ClientCommunication) XXX_Size() int {
	return xxx_messageInfo_ClientCommunication.Size(m)
}
func (m *ClientCommunication) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientCommunication.DiscardUnknown(m)
}

var xxx_messageInfo_ClientCommunication proto.InternalMessageInfo

func (m *ClientCommunication) GetEncrypted() []byte {
	if m != nil {
		return m.Encrypted
	}
	return nil
}

func (m *ClientCommunication) GetEncryptedCipher() []byte {
	if m != nil {
		return m.EncryptedCipher
	}
	return nil
}

func (m *ClientCommunication) GetEncryptedCipherMetadata() []byte {
	if m != nil {
		return m.EncryptedCipherMetadata
	}
	return nil
}

func (m *ClientCommunication) GetPacketIv() []byte {
	if m != nil {
		return m.PacketIv
	}
	return nil
}

func (m *ClientCommunication) GetQueueSize() uint32 {
	if m != nil {
		return m.QueueSize
	}
	return 0
}

func (m *ClientCommunication) GetStatus() ClientCommunication_Status {
	if m != nil {
		return m.Status
	}
	return ClientCommunication_UNSET
}

func (m *ClientCommunication) GetApiVersion() uint32 {
	if m != nil {
		return m.ApiVersion
	}
	return 0
}

func (m *ClientCommunication) GetHmac() []byte {
	if m != nil {
		return m.Hmac
	}
	return nil
}

func (m *ClientCommunication) GetFullHmac() []byte {
	if m != nil {
		return m.FullHmac
	}
	return nil
}

type ClientResources struct {
	ClientId             string      `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	SessionId            string      `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	CpuUsage             *CpuSeconds `protobuf:"bytes,3,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	NetworkBytesSent     uint64      `protobuf:"varint,4,opt,name=network_bytes_sent,json=networkBytesSent,proto3" json:"network_bytes_sent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ClientResources) Reset()         { *m = ClientResources{} }
func (m *ClientResources) String() string { return proto.CompactTextString(m) }
func (*ClientResources) ProtoMessage()    {}
func (*ClientResources) Descriptor() ([]byte, []int) {
	return fileDescriptor_jobs_89cdbf55bbc0f123, []int{9}
}
func (m *ClientResources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientResources.Unmarshal(m, b)
}
func (m *ClientResources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientResources.Marshal(b, m, deterministic)
}
func (dst *ClientResources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientResources.Merge(dst, src)
}
func (m *ClientResources) XXX_Size() int {
	return xxx_messageInfo_ClientResources.Size(m)
}
func (m *ClientResources) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientResources.DiscardUnknown(m)
}

var xxx_messageInfo_ClientResources proto.InternalMessageInfo

func (m *ClientResources) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *ClientResources) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *ClientResources) GetCpuUsage() *CpuSeconds {
	if m != nil {
		return m.CpuUsage
	}
	return nil
}

func (m *ClientResources) GetNetworkBytesSent() uint64 {
	if m != nil {
		return m.NetworkBytesSent
	}
	return 0
}

func init() {
	proto.RegisterType((*GrrMessage)(nil), "proto.GrrMessage")
	proto.RegisterType((*Certificate)(nil), "proto.Certificate")
	proto.RegisterType((*CpuSeconds)(nil), "proto.CpuSeconds")
	proto.RegisterType((*GrrStatus)(nil), "proto.GrrStatus")
	proto.RegisterType((*MessageList)(nil), "proto.MessageList")
	proto.RegisterType((*PackedMessageList)(nil), "proto.PackedMessageList")
	proto.RegisterType((*CipherProperties)(nil), "proto.CipherProperties")
	proto.RegisterType((*CipherMetadata)(nil), "proto.CipherMetadata")
	proto.RegisterType((*ClientCommunication)(nil), "proto.ClientCommunication")
	proto.RegisterType((*ClientResources)(nil), "proto.ClientResources")
	proto.RegisterEnum("proto.GrrMessage_AuthorizationState", GrrMessage_AuthorizationState_name, GrrMessage_AuthorizationState_value)
	proto.RegisterEnum("proto.GrrMessage_Type", GrrMessage_Type_name, GrrMessage_Type_value)
	proto.RegisterEnum("proto.GrrMessage_Priority", GrrMessage_Priority_name, GrrMessage_Priority_value)
	proto.RegisterEnum("proto.GrrMessage_ClientType", GrrMessage_ClientType_name, GrrMessage_ClientType_value)
	proto.RegisterEnum("proto.Certificate_Type", Certificate_Type_name, Certificate_Type_value)
	proto.RegisterEnum("proto.GrrStatus_ReturnedStatus", GrrStatus_ReturnedStatus_name, GrrStatus_ReturnedStatus_value)
	proto.RegisterEnum("proto.PackedMessageList_CompressionType", PackedMessageList_CompressionType_name, PackedMessageList_CompressionType_value)
	proto.RegisterEnum("proto.CipherProperties_HMACType", CipherProperties_HMACType_name, CipherProperties_HMACType_value)
	proto.RegisterEnum("proto.ClientCommunication_Status", ClientCommunication_Status_name, ClientCommunication_Status_value)
}

func init() { proto.RegisterFile("jobs.proto", fileDescriptor_jobs_89cdbf55bbc0f123) }

var fileDescriptor_jobs_89cdbf55bbc0f123 = []byte{
	// 2558 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x58, 0xcb, 0x92, 0xdb, 0xc6,
	0xd5, 0x16, 0xc8, 0xb9, 0x90, 0xcd, 0xb9, 0x50, 0xad, 0x5f, 0x1e, 0x4a, 0x96, 0xca, 0x6d, 0xfa,
	0xaf, 0x32, 0x6d, 0xcb, 0x90, 0x34, 0xbe, 0x48, 0x76, 0xc5, 0x95, 0x70, 0x48, 0x68, 0x06, 0xd1,
	0x0c, 0x67, 0xd2, 0x04, 0xe5, 0xd8, 0x15, 0x1b, 0x69, 0x02, 0x4d, 0x12, 0x1e, 0x10, 0x80, 0xbb,
	0x1b, 0x43, 0x51, 0x8b, 0x3c, 0x41, 0x52, 0x95, 0x95, 0x93, 0x45, 0x2a, 0x9b, 0xe4, 0x05, 0xf2,
	0x00, 0xd9, 0x65, 0xe1, 0x6d, 0xaa, 0xf2, 0x04, 0xc9, 0x53, 0xa4, 0xca, 0x8b, 0x54, 0x1f, 0x00,
	0x24, 0x47, 0x63, 0x7b, 0x45, 0xe0, 0xf4, 0xb9, 0xf5, 0x39, 0xdf, 0xb9, 0x80, 0x08, 0x7d, 0x15,
	0x0f, 0xa5, 0x99, 0x88, 0x58, 0xc5, 0x78, 0x1d, 0x7e, 0x6e, 0xdf, 0x1a, 0xc7, 0xf1, 0x38, 0xe4,
	0xf7, 0xe1, 0x6d, 0x98, 0x8e, 0xee, 0xb3, 0x68, 0x9e, 0x71, 0xdc, 0xfe, 0x78, 0x36, 0x9b, 0x99,
	0x17, 0x3c, 0x8c, 0xbd, 0xc0, 0xe7, 0xcf, 0x4d, 0x2f, 0x9e, 0xde, 0x1f, 0xc7, 0x21, 0x8b, 0xc6,
	0xf7, 0x33, 0xa2, 0x60, 0x89, 0x8a, 0x45, 0x26, 0x79, 0x5f, 0xf2, 0x29, 0x8b, 0x54, 0xe0, 0x65,
	0xb2, 0xcd, 0xbf, 0xdd, 0x40, 0xe8, 0x50, 0x88, 0x13, 0x2e, 0x25, 0x1b, 0x73, 0x1c, 0x21, 0x24,
	0xb9, 0x94, 0x41, 0x1c, 0xb9, 0x81, 0xdf, 0x30, 0x88, 0xd1, 0xaa, 0x1e, 0x9c, 0xfe, 0xfb, 0xbb,
	0xff, 0xfc, 0xc3, 0xb0, 0xd1, 0xf6, 0x93, 0x30, 0x9e, 0xf5, 0xb3, 0x53, 0xbb, 0x8b, 0x1f, 0x3b,
	0x13, 0x4e, 0x72, 0x66, 0x12, 0xf8, 0x24, 0x1e, 0x11, 0x35, 0xe1, 0x64, 0x14, 0xc6, 0x33, 0xa2,
	0x26, 0x4c, 0x11, 0x35, 0x09, 0x24, 0x99, 0x66, 0x8a, 0xc9, 0x90, 0x87, 0x71, 0x34, 0x96, 0x44,
	0xc5, 0x26, 0xad, 0xe6, 0x52, 0xb6, 0x8f, 0x53, 0x84, 0x04, 0xff, 0x3a, 0xe5, 0x52, 0x69, 0x7b,
	0x25, 0x62, 0xb4, 0xd6, 0x0e, 0x9e, 0x81, 0xbd, 0x33, 0xdc, 0xd3, 0x06, 0x0a, 0xf9, 0x40, 0x92,
	0x20, 0x22, 0x82, 0xcb, 0x24, 0x8e, 0x24, 0x27, 0x2a, 0xce, 0xd4, 0xe7, 0xc2, 0x24, 0x4a, 0xa7,
	0x43, 0x2e, 0x48, 0x2b, 0x7f, 0xd7, 0xcc, 0x9e, 0xe0, 0x53, 0x1e, 0x29, 0x32, 0x12, 0xf1, 0x94,
	0x3c, 0x7c, 0xcb, 0xa4, 0xd5, 0xfc, 0xd0, 0xf6, 0xf1, 0x17, 0xa8, 0x56, 0xa8, 0xd2, 0x76, 0xcb,
	0x60, 0xf7, 0x27, 0x60, 0xf7, 0x43, 0xfc, 0x3e, 0xcd, 0x8f, 0x24, 0x19, 0xc5, 0x82, 0x70, 0xe6,
	0x4d, 0x16, 0x76, 0x98, 0xe0, 0x84, 0x85, 0x32, 0xce, 0x0d, 0x72, 0x3f, 0x57, 0x6f, 0x52, 0x54,
	0x28, 0xb4, 0x7d, 0xfc, 0x3b, 0x03, 0xad, 0x45, 0x6c, 0xca, 0x1b, 0x6b, 0x10, 0xc0, 0x39, 0x28,
	0x96, 0xf8, 0x6b, 0x47, 0xbb, 0x1c, 0x48, 0x88, 0x93, 0x3e, 0x2f, 0x62, 0xe6, 0x85, 0x81, 0xf6,
	0x94, 0x79, 0x4a, 0xc7, 0x12, 0x82, 0x37, 0x0b, 0xc2, 0x90, 0x0c, 0x39, 0xe1, 0xcf, 0xb9, 0x97,
	0x2a, 0xee, 0x9b, 0xc4, 0x56, 0x5a, 0x54, 0x72, 0x45, 0x86, 0xf3, 0x65, 0xa4, 0x59, 0xe4, 0x6b,
	0x72, 0xc1, 0x56, 0x9c, 0x65, 0x1a, 0x4d, 0x0a, 0x6e, 0x60, 0x8c, 0xd6, 0x98, 0x18, 0xcb, 0xc6,
	0x3a, 0x31, 0x5a, 0x5b, 0x14, 0x9e, 0x71, 0x88, 0x36, 0x64, 0x9c, 0x0a, 0x8f, 0x37, 0x36, 0xc0,
	0x49, 0x07, 0x9c, 0xec, 0xa1, 0x0d, 0xda, 0x7d, 0x32, 0xa0, 0x3d, 0xdc, 0xed, 0x64, 0x4e, 0x81,
	0x9f, 0xb3, 0x09, 0x17, 0x1c, 0x14, 0x17, 0xf9, 0xf0, 0x34, 0x19, 0xee, 0xde, 0x7a, 0x12, 0x84,
	0x21, 0xf7, 0x75, 0x7a, 0x0a, 0xc7, 0x44, 0x1c, 0x29, 0x1e, 0xf9, 0x6f, 0x99, 0x34, 0xb7, 0x81,
	0x3b, 0x08, 0xb1, 0x54, 0x4d, 0x5c, 0xa9, 0x98, 0xe2, 0x8d, 0x4d, 0x62, 0xb4, 0x76, 0xf6, 0xff,
	0x3f, 0x83, 0xa0, 0xb9, 0x84, 0x9f, 0xd9, 0x4e, 0xd5, 0x24, 0x16, 0xc1, 0x0b, 0xa6, 0x03, 0xd1,
	0xd7, 0xbc, 0xb4, 0xaa, 0xe5, 0xe0, 0x11, 0xbf, 0x8d, 0xd6, 0xd4, 0x3c, 0xe1, 0x8d, 0x0a, 0x88,
	0xbf, 0x72, 0x55, 0xdc, 0x99, 0x27, 0x9c, 0x02, 0x0f, 0xfe, 0xb3, 0x81, 0x2a, 0x89, 0x08, 0x62,
	0x11, 0xa8, 0x79, 0xa3, 0x0a, 0x02, 0xb7, 0xaf, 0x0a, 0x9c, 0xe5, 0x1c, 0x07, 0x23, 0xb8, 0xfd,
	0xaf, 0xf1, 0x97, 0x1a, 0x73, 0x85, 0x5c, 0x96, 0x9e, 0x15, 0x10, 0xbf, 0x4b, 0x58, 0x18, 0xc6,
	0x33, 0x49, 0x26, 0xc1, 0x78, 0xc2, 0xc5, 0x92, 0x31, 0x67, 0xd0, 0xf0, 0x26, 0x21, 0x67, 0x49,
	0x86, 0xcf, 0x3c, 0x12, 0x5a, 0xcd, 0xd7, 0x29, 0x4f, 0xb9, 0x34, 0xe9, 0xc2, 0x27, 0x1c, 0xa1,
	0xb2, 0x52, 0x61, 0x03, 0x11, 0xa3, 0xb5, 0x7d, 0xf0, 0x2b, 0x30, 0xff, 0x0c, 0x3b, 0x4e, 0x30,
	0x05, 0x70, 0x87, 0xc1, 0x85, 0x36, 0x07, 0xd8, 0x53, 0x9a, 0xc6, 0x16, 0x10, 0x04, 0xd4, 0x2b,
	0xc1, 0x22, 0x39, 0x0d, 0x94, 0x4e, 0x39, 0xb8, 0xe8, 0xf3, 0x02, 0xef, 0x69, 0xa4, 0x82, 0x90,
	0x04, 0x8a, 0xf0, 0xe7, 0x49, 0x20, 0xb4, 0x51, 0x6d, 0x08, 0xbf, 0x40, 0x75, 0xad, 0x21, 0x10,
	0xdc, 0x1d, 0x31, 0xa9, 0x92, 0x38, 0x0c, 0x1b, 0x35, 0x62, 0xb4, 0x2a, 0x45, 0x7d, 0xe3, 0x43,
	0x3b, 0xbf, 0xae, 0x46, 0xa8, 0x48, 0xf9, 0xbd, 0x55, 0x6c, 0x02, 0x1e, 0x79, 0xa4, 0xb8, 0x20,
	0x5a, 0x9c, 0x68, 0x79, 0x32, 0x8d, 0x7d, 0x4e, 0xd8, 0x48, 0x41, 0x28, 0x62, 0x4f, 0x57, 0x75,
	0x34, 0x36, 0xe9, 0x6e, 0x6e, 0xe8, 0x49, 0x6e, 0x07, 0x7f, 0x81, 0xaa, 0x5e, 0x92, 0xba, 0x61,
	0x30, 0x0d, 0x54, 0x63, 0x8b, 0x18, 0xad, 0xd2, 0xc1, 0xcf, 0xc0, 0xe8, 0xc7, 0xf8, 0xf1, 0x09,
	0x7b, 0x1e, 0x4c, 0xd3, 0x69, 0x51, 0xc1, 0xf1, 0x88, 0x74, 0xce, 0x06, 0x44, 0x72, 0x2f, 0x8e,
	0x7c, 0x88, 0xe7, 0x90, 0x93, 0x54, 0x16, 0xc8, 0x0e, 0x64, 0x5e, 0x25, 0x26, 0xad, 0x78, 0x49,
	0x7a, 0xac, 0x35, 0xe2, 0x13, 0x54, 0xd1, 0x90, 0x76, 0xd9, 0x98, 0x37, 0xb6, 0xa1, 0x94, 0xf7,
	0x41, 0xfb, 0x3d, 0x54, 0xa3, 0xdd, 0x27, 0x5d, 0xa6, 0xb8, 0x0e, 0x21, 0xbe, 0xab, 0x73, 0xab,
	0xd3, 0x98, 0x57, 0x9d, 0x96, 0x21, 0xc2, 0x1f, 0x5d, 0xb0, 0x30, 0xe5, 0x26, 0xdd, 0xd4, 0xef,
	0xed, 0x31, 0xc7, 0x4d, 0xb4, 0x0d, 0xea, 0x84, 0x3f, 0x72, 0xa1, 0x8a, 0x77, 0x74, 0x81, 0xd0,
	0x9a, 0x26, 0x52, 0x7f, 0xd4, 0xd3, 0x15, 0xb5, 0x87, 0x36, 0x15, 0x93, 0xe7, 0xba, 0x79, 0xec,
	0x6a, 0x8b, 0x74, 0x43, 0xbf, 0xda, 0x3e, 0xbe, 0x85, 0x2a, 0x70, 0xa0, 0x73, 0x5b, 0x27, 0x46,
	0x6b, 0x9d, 0x02, 0xa3, 0xa3, 0x42, 0x7c, 0x82, 0xd6, 0x01, 0x06, 0x8d, 0xeb, 0x50, 0x70, 0x8f,
	0xc0, 0xc7, 0x87, 0x8b, 0x82, 0x7b, 0x13, 0xfa, 0xa9, 0x37, 0xe1, 0x7e, 0x1a, 0x72, 0x91, 0x21,
	0xe6, 0x32, 0xfc, 0xa0, 0x07, 0x9a, 0x34, 0xd3, 0x82, 0x7d, 0x54, 0xe6, 0x8a, 0x35, 0x30, 0x5c,
	0x98, 0x82, 0xb2, 0xe3, 0xcb, 0x17, 0xfe, 0x44, 0x6b, 0x04, 0xf4, 0xcc, 0x26, 0x3c, 0xba, 0xac,
	0x2b, 0xef, 0x2f, 0x5e, 0xac, 0xb1, 0x75, 0xc1, 0x82, 0x90, 0x0d, 0x43, 0x0e, 0xfd, 0x2e, 0xe4,
	0x2c, 0x4b, 0xa3, 0x56, 0x8f, 0xef, 0x22, 0x14, 0x32, 0xa9, 0x5c, 0x4d, 0xe5, 0x8d, 0x1b, 0x10,
	0x89, 0xaa, 0xa6, 0x1c, 0x6b, 0x02, 0xfe, 0x57, 0x09, 0xdd, 0x88, 0xb8, 0x9a, 0xc5, 0xe2, 0xdc,
	0x1d, 0xce, 0x15, 0x97, 0x79, 0x92, 0x6f, 0x82, 0x57, 0x7f, 0x29, 0x81, 0x5b, 0x7f, 0x2a, 0xe1,
	0xdf, 0x96, 0xae, 0xe6, 0x39, 0x97, 0x23, 0x20, 0x97, 0x67, 0x5a, 0xf2, 0x48, 0xdd, 0x23, 0x0f,
	0x1f, 0x1c, 0x12, 0x9f, 0x8f, 0x58, 0x1a, 0x2a, 0x93, 0xb4, 0xb5, 0xa3, 0xc0, 0xe2, 0x4d, 0x98,
	0x18, 0x73, 0x9f, 0xb0, 0x31, 0x0b, 0x22, 0xa9, 0x96, 0x4d, 0xb0, 0x98, 0x42, 0x76, 0x97, 0x78,
	0x71, 0x1a, 0x29, 0xa2, 0xe2, 0x19, 0x13, 0x7e, 0xd6, 0x68, 0xc1, 0x21, 0x32, 0x4c, 0x15, 0x89,
	0xa3, 0x70, 0x4e, 0xfc, 0x54, 0x04, 0xd1, 0x98, 0x38, 0xba, 0x80, 0x46, 0x5c, 0x1c, 0xa4, 0xa3,
	0x11, 0x17, 0x45, 0x53, 0xce, 0x78, 0x79, 0x34, 0x8a, 0x85, 0xa7, 0x7b, 0xae, 0x93, 0x85, 0x8c,
	0x45, 0x92, 0xcc, 0x74, 0xcf, 0x8b, 0xc8, 0x30, 0x8c, 0xbd, 0xf3, 0x51, 0x10, 0x72, 0xa2, 0x72,
	0x0d, 0x12, 0x74, 0x4b, 0xa5, 0x03, 0xea, 0xc5, 0xd3, 0x69, 0x1a, 0x05, 0x1e, 0x53, 0x45, 0x5d,
	0x2c, 0xb5, 0x42, 0xdd, 0x32, 0x9d, 0x5f, 0x73, 0xbf, 0xf6, 0xf0, 0xc1, 0xa3, 0xf7, 0x1e, 0xbd,
	0xff, 0xf0, 0xf1, 0xfe, 0xfb, 0x0f, 0xe8, 0xf5, 0x3c, 0x10, 0x07, 0xfa, 0x92, 0x19, 0xa2, 0xbf,
	0x44, 0x55, 0x9d, 0x37, 0xa9, 0xd8, 0x34, 0x69, 0xbc, 0x02, 0xb1, 0xcc, 0x0b, 0xe6, 0x72, 0x86,
	0xdf, 0x69, 0x47, 0x84, 0x2c, 0x38, 0xbf, 0x2f, 0xcd, 0x4c, 0x12, 0xa9, 0x62, 0xc1, 0x7d, 0x93,
	0x2e, 0x55, 0xe2, 0x19, 0xaa, 0x65, 0x75, 0xed, 0x42, 0x43, 0xfd, 0xf6, 0x3d, 0x68, 0x90, 0x77,
	0xae, 0x36, 0xc8, 0x6c, 0x08, 0xe8, 0xbe, 0x5a, 0xe0, 0x15, 0xdf, 0x07, 0x54, 0xcd, 0x13, 0xa8,
	0xa3, 0xbc, 0x3b, 0xc0, 0xc8, 0x1a, 0xf3, 0x88, 0x0b, 0xb6, 0xe8, 0x48, 0xb9, 0x0b, 0x26, 0x45,
	0xde, 0x42, 0x09, 0xee, 0xa3, 0xcd, 0x84, 0xcd, 0xc3, 0x98, 0xf9, 0x8d, 0x3d, 0x62, 0xb4, 0x6a,
	0xfb, 0xff, 0x67, 0x66, 0x7b, 0x8d, 0x59, 0xec, 0x35, 0x66, 0x3b, 0x9a, 0x1f, 0xbc, 0x01, 0xb6,
	0xee, 0xe2, 0x57, 0xa1, 0x1d, 0x67, 0x02, 0x2f, 0x77, 0x63, 0x5a, 0x68, 0x6a, 0x9e, 0x21, 0x7c,
	0x75, 0x70, 0xe0, 0x1b, 0x68, 0x77, 0xd0, 0x6b, 0x0f, 0x9c, 0x23, 0xab, 0xe7, 0xd8, 0x9d, 0xb6,
	0x63, 0x75, 0xeb, 0xd7, 0xf0, 0x75, 0xb4, 0x7d, 0x99, 0x64, 0x60, 0x8c, 0x76, 0xba, 0x56, 0xff,
	0xb3, 0x5e, 0xe7, 0x88, 0x9e, 0xf6, 0xec, 0xcf, 0xad, 0x6e, 0xbd, 0xd4, 0x7c, 0x17, 0xad, 0x81,
	0xbb, 0x35, 0xb4, 0x79, 0x62, 0xf5, 0xfb, 0xed, 0x43, 0xab, 0x7e, 0x0d, 0x23, 0xb4, 0xd1, 0x77,
	0xda, 0xce, 0xa0, 0x5f, 0x37, 0xf0, 0x16, 0xaa, 0xd8, 0x8e, 0x45, 0xdb, 0xce, 0x29, 0xad, 0x97,
	0x9a, 0x5d, 0x54, 0x29, 0x26, 0x09, 0xae, 0xa3, 0xad, 0xe3, 0xd3, 0x4f, 0xdd, 0x33, 0x6a, 0x9f,
	0x52, 0xdb, 0xf9, 0xac, 0x7e, 0x4d, 0x3b, 0x72, 0x62, 0x75, 0xed, 0xc1, 0xc9, 0x92, 0x68, 0x68,
	0x47, 0x8e, 0xec, 0xc3, 0xa3, 0x25, 0xa9, 0xd4, 0x7c, 0x13, 0xa1, 0x65, 0xb8, 0xf1, 0x26, 0x2a,
	0x1f, 0x52, 0x5a, 0xbf, 0xa6, 0x15, 0x3e, 0xb3, 0x8e, 0x4f, 0x3b, 0x36, 0x6d, 0x9f, 0x69, 0x73,
	0x46, 0xf3, 0x37, 0xa8, 0xd6, 0xe1, 0x42, 0x05, 0x23, 0x00, 0x1a, 0x7e, 0x27, 0x1f, 0x8b, 0x06,
	0x24, 0x71, 0x2f, 0x4f, 0xe2, 0x0a, 0xc7, 0xea, 0x5c, 0xac, 0xa3, 0x72, 0xc2, 0xa7, 0xb0, 0x69,
	0x6d, 0x51, 0xfd, 0x88, 0x77, 0x50, 0xc9, 0x8b, 0x60, 0x05, 0xaa, 0xd2, 0x92, 0x17, 0x35, 0x49,
	0x7e, 0xf7, 0x4d, 0x54, 0xee, 0xf4, 0xb5, 0x03, 0xfa, 0x81, 0x3a, 0x75, 0x03, 0x6f, 0xa0, 0x52,
	0xa7, 0x5d, 0x2f, 0x35, 0xff, 0x68, 0x20, 0xd4, 0x49, 0xd2, 0x7e, 0xd6, 0xa3, 0x71, 0x1b, 0x6d,
	0xa7, 0x92, 0x0b, 0x57, 0xb7, 0x78, 0x0d, 0x31, 0x70, 0xa4, 0x74, 0x70, 0x17, 0x72, 0xb8, 0xd7,
	0xbc, 0x39, 0x90, 0x5c, 0x10, 0x2f, 0x49, 0x17, 0x4d, 0x5d, 0xb7, 0x73, 0x5a, 0xd3, 0x32, 0x9d,
	0x24, 0xd5, 0x13, 0x0f, 0x1f, 0xa2, 0x5d, 0x39, 0x97, 0x8a, 0x4f, 0x97, 0x4a, 0x4a, 0xa0, 0xe4,
	0x35, 0x50, 0x72, 0xab, 0xb9, 0xd7, 0x87, 0xe3, 0xab, 0x6a, 0xb6, 0x33, 0xb9, 0x5c, 0x51, 0xf3,
	0xbb, 0x32, 0xaa, 0x1e, 0x0a, 0xa1, 0x11, 0x90, 0x4a, 0xfc, 0x08, 0x6d, 0x48, 0x78, 0xca, 0x63,
	0xf3, 0xda, 0x12, 0xe0, 0x19, 0x87, 0x49, 0xb9, 0x4a, 0x45, 0xc4, 0xfd, 0xec, 0x95, 0xe6, 0xec,
	0xf8, 0x0d, 0xb4, 0xcd, 0x85, 0x88, 0x85, 0x9b, 0x63, 0x0d, 0xbc, 0xa9, 0xd2, 0x2d, 0x20, 0x16,
	0xbb, 0xf2, 0x1d, 0x54, 0x1d, 0x32, 0xef, 0x5c, 0x09, 0xe6, 0xf1, 0x3c, 0x7e, 0x4b, 0x02, 0xfe,
	0x00, 0x6d, 0x17, 0x77, 0x71, 0xb5, 0xa7, 0xb0, 0x0b, 0xd6, 0xf6, 0xaf, 0x17, 0xe9, 0x59, 0xc4,
	0x8f, 0xd6, 0xbc, 0xcc, 0xf9, 0x81, 0xe4, 0x3e, 0xa6, 0xa8, 0xee, 0x4d, 0x82, 0xd0, 0x77, 0x57,
	0xd6, 0xf0, 0x75, 0x98, 0x17, 0x2d, 0x08, 0x45, 0x13, 0x55, 0x97, 0x2b, 0xf8, 0x4d, 0x5d, 0x1e,
	0x03, 0xda, 0xd3, 0xa5, 0xc1, 0x88, 0x4c, 0x87, 0xba, 0x1b, 0x9a, 0x74, 0x07, 0x34, 0xf4, 0x17,
	0x4b, 0xf6, 0x3d, 0x84, 0x2f, 0xf7, 0x68, 0xdd, 0x65, 0x61, 0xed, 0x5b, 0xa3, 0xf5, 0xd5, 0xe6,
	0xd3, 0xe7, 0x91, 0xc2, 0xaf, 0xa3, 0xad, 0x88, 0x45, 0xd1, 0xdc, 0xcd, 0x43, 0xb7, 0x99, 0x4d,
	0x3f, 0xa0, 0x65, 0x61, 0x6a, 0x7e, 0x63, 0xa0, 0x9d, 0xcb, 0x91, 0xd3, 0xd8, 0x38, 0x7d, 0x5a,
	0xbf, 0xa6, 0x2b, 0xc6, 0x3e, 0xb5, 0x28, 0xd5, 0x40, 0xc5, 0xaf, 0xa2, 0x3d, 0x6a, 0x39, 0xb4,
	0xdd, 0xeb, 0x9f, 0xd8, 0xfd, 0xbe, 0x7d, 0xda, 0x73, 0xbb, 0x96, 0x63, 0x75, 0x74, 0xdd, 0x95,
	0x74, 0x05, 0x74, 0x8e, 0x6d, 0xab, 0xe7, 0xb8, 0x4f, 0xed, 0xe3, 0x63, 0xab, 0x5b, 0x2f, 0xe3,
	0xdb, 0xe8, 0x95, 0x9e, 0xe5, 0x7c, 0x7a, 0x4a, 0x9f, 0xba, 0xc7, 0xf6, 0x89, 0xed, 0xb8, 0xd6,
	0x2f, 0x3b, 0x96, 0xd5, 0xb5, 0xba, 0xf5, 0x35, 0x5d, 0x06, 0xfa, 0xc0, 0xa2, 0x6e, 0xdf, 0x19,
	0x74, 0x9e, 0xd6, 0xab, 0x5a, 0xc1, 0xa1, 0xd5, 0xb3, 0xa8, 0xdd, 0x71, 0x33, 0x83, 0xa8, 0xb9,
	0x8f, 0x6a, 0x79, 0x76, 0x8e, 0x03, 0xa9, 0xf0, 0x1b, 0xa8, 0xfc, 0x55, 0x3c, 0x6c, 0x18, 0xa4,
	0xbc, 0x12, 0xf9, 0x65, 0x77, 0xa3, 0xfa, 0xb4, 0xf9, 0xdf, 0x12, 0xba, 0x7e, 0xc6, 0xbc, 0x73,
	0xee, 0xaf, 0x8a, 0xbe, 0x8e, 0xb6, 0xf2, 0xdc, 0xbb, 0x61, 0x20, 0x15, 0x00, 0x68, 0x8b, 0xd6,
	0xa6, 0x2b, 0x2c, 0x67, 0x8b, 0x0d, 0x1a, 0x92, 0x7f, 0xf0, 0x18, 0x12, 0xb4, 0xbf, 0x18, 0xe8,
	0x2d, 0x18, 0xe8, 0xc0, 0xb1, 0x58, 0xa0, 0x57, 0x5a, 0xf3, 0x62, 0x83, 0x5e, 0x6e, 0xc9, 0x3f,
	0x47, 0x35, 0x2f, 0x9e, 0x26, 0x22, 0xcb, 0x1c, 0x20, 0x66, 0x67, 0xbf, 0x95, 0xfb, 0x7d, 0xc5,
	0x47, 0xb3, 0xb3, 0xe4, 0x85, 0x0a, 0x5f, 0x15, 0xc6, 0xe1, 0xea, 0x08, 0x81, 0x5c, 0x1f, 0xf4,
	0xc0, 0xc1, 0xa3, 0xcb, 0x23, 0xe4, 0x23, 0x67, 0xb9, 0xe4, 0x49, 0xae, 0xeb, 0x2a, 0x50, 0x72,
	0x65, 0xa6, 0xa8, 0x98, 0x24, 0x82, 0x5f, 0xe8, 0x63, 0xc1, 0x93, 0x90, 0xcd, 0x09, 0x53, 0x8a,
	0x79, 0xe7, 0x72, 0x75, 0xa0, 0x34, 0x3f, 0x40, 0xbb, 0x2f, 0x79, 0xa3, 0x13, 0x36, 0xe8, 0x75,
	0x4e, 0x4f, 0xce, 0xa8, 0xd5, 0xef, 0x43, 0xf3, 0xad, 0xa3, 0xad, 0xcf, 0x0b, 0x82, 0x7d, 0xda,
	0xab, 0x1b, 0xcd, 0xbf, 0x96, 0x50, 0xbd, 0x13, 0x24, 0x13, 0x2e, 0xce, 0x44, 0x9c, 0xe8, 0x8e,
	0xc5, 0xa5, 0xfe, 0x5a, 0x81, 0xb5, 0x0b, 0xbe, 0x3e, 0xf3, 0x2f, 0x98, 0x37, 0x51, 0xf9, 0x9c,
	0xcf, 0xb3, 0xb6, 0x75, 0x70, 0x13, 0xee, 0xb1, 0x8b, 0xb6, 0xad, 0xc8, 0x13, 0xf3, 0x44, 0xb7,
	0xfc, 0xa7, 0x7c, 0x4e, 0x35, 0x07, 0xfe, 0x10, 0xd5, 0xa6, 0x5c, 0x31, 0x9f, 0x29, 0xe6, 0x06,
	0x17, 0x90, 0x99, 0x1f, 0x14, 0x40, 0x05, 0xa7, 0x7d, 0x81, 0x1f, 0xa0, 0xca, 0x64, 0xca, 0x3c,
	0x57, 0x5b, 0x59, 0xff, 0x31, 0xa1, 0x4d, 0xcd, 0xf6, 0x94, 0xcf, 0xf1, 0x27, 0xa8, 0x0a, 0x12,
	0xd0, 0x7b, 0x37, 0x20, 0x55, 0xa4, 0x28, 0xee, 0x97, 0xae, 0x64, 0x1e, 0x9d, 0xb4, 0x3b, 0x90,
	0x22, 0x30, 0xa2, 0x9f, 0x9a, 0x6f, 0xa3, 0x4a, 0x41, 0xc5, 0xbb, 0xa8, 0xd6, 0xb7, 0x4f, 0xce,
	0x8e, 0x2d, 0x57, 0x93, 0xea, 0xd7, 0xf0, 0x36, 0xaa, 0x3e, 0x19, 0x1c, 0x1f, 0x67, 0xaf, 0x46,
	0xf3, 0x0f, 0x06, 0xda, 0xc9, 0x74, 0x9e, 0xe4, 0x1e, 0xe3, 0xf1, 0x02, 0x7c, 0x97, 0x3f, 0xd2,
	0x0b, 0xf0, 0xfd, 0x14, 0xd2, 0x1a, 0x4f, 0xa7, 0x71, 0x94, 0x7d, 0xc2, 0x01, 0xf6, 0x3c, 0x50,
	0x42, 0xe4, 0x24, 0x4e, 0x43, 0x7f, 0xb1, 0x59, 0xab, 0xf8, 0xd2, 0xe2, 0x32, 0x0b, 0xd4, 0x64,
	0x89, 0xc9, 0x3b, 0xa8, 0x2a, 0x83, 0x71, 0xc4, 0x54, 0x2a, 0x78, 0x3e, 0x36, 0x96, 0x84, 0xe6,
	0xdf, 0xcb, 0xe8, 0x46, 0x36, 0xb4, 0x3a, 0x0b, 0x0d, 0x1a, 0x7d, 0x77, 0x50, 0x95, 0x67, 0x61,
	0xe3, 0x7e, 0x5e, 0x3b, 0x4b, 0x02, 0x7e, 0x0b, 0xd5, 0x17, 0x2f, 0x6e, 0xe6, 0x53, 0xae, 0x7a,
	0x77, 0x41, 0xcf, 0xee, 0x8b, 0x3f, 0x46, 0xb7, 0x5e, 0x66, 0x75, 0x8b, 0xb4, 0xc1, 0x77, 0xdd,
	0x16, 0xdd, 0x7b, 0x49, 0x66, 0x11, 0xa3, 0x7d, 0x54, 0x4d, 0x74, 0xd1, 0x28, 0x8d, 0x84, 0xca,
	0x8f, 0x25, 0xb5, 0x92, 0xf1, 0xd9, 0x17, 0x7a, 0xdf, 0x85, 0xf5, 0xda, 0x95, 0xc1, 0x8b, 0xec,
	0xfb, 0x7d, 0x9b, 0x56, 0x81, 0xd2, 0x0f, 0x5e, 0x70, 0xfc, 0xd1, 0x62, 0xa2, 0xac, 0x43, 0xc6,
	0x5f, 0x2f, 0x32, 0x7e, 0x35, 0x06, 0xe6, 0x4b, 0x33, 0xe5, 0x35, 0x54, 0x63, 0x49, 0xe0, 0x5e,
	0x70, 0x01, 0xc5, 0xbd, 0x01, 0xaa, 0x11, 0x4b, 0x82, 0x67, 0x19, 0x45, 0xe3, 0x5e, 0xa3, 0x03,
	0x1a, 0xee, 0x16, 0x85, 0x67, 0xfc, 0x2a, 0xaa, 0x8e, 0xd2, 0x30, 0x74, 0xe1, 0x00, 0xc1, 0x41,
	0x45, 0x13, 0x8e, 0xa6, 0xcc, 0x6b, 0xb6, 0xd1, 0x46, 0xde, 0x7d, 0xab, 0x68, 0x7d, 0xd0, 0xeb,
	0x5b, 0x0e, 0x4c, 0x6b, 0xdd, 0x88, 0xbf, 0x35, 0x70, 0x1d, 0xd5, 0x0e, 0xda, 0x5d, 0x97, 0x5a,
	0xbf, 0x18, 0x58, 0x7d, 0xa7, 0xfe, 0xfb, 0x32, 0xbe, 0x8e, 0xb6, 0x3a, 0xf6, 0xd9, 0x91, 0x45,
	0xf3, 0x7e, 0xf9, 0x4d, 0xb9, 0xf9, 0x4f, 0x03, 0xed, 0x66, 0xbe, 0x53, 0x9e, 0x25, 0x5c, 0x62,
	0x13, 0x55, 0xf3, 0xe5, 0x70, 0xf1, 0x17, 0xd0, 0x75, 0x08, 0x5b, 0x0d, 0x55, 0x33, 0xde, 0x01,
	0xed, 0xd1, 0x4a, 0xc6, 0x63, 0xfb, 0xf8, 0xc1, 0xa5, 0xff, 0x8c, 0x4a, 0x97, 0x05, 0x16, 0xc3,
	0x6a, 0xf5, 0x5f, 0x1f, 0x33, 0xfb, 0x1e, 0x4c, 0x61, 0xb4, 0x96, 0x7f, 0x68, 0x2e, 0xea, 0x0f,
	0xbc, 0x01, 0x4c, 0xda, 0xef, 0x1f, 0x60, 0x6b, 0xdf, 0x3f, 0xc0, 0x86, 0x1b, 0xa0, 0xe9, 0xbd,
	0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xa6, 0xa7, 0xed, 0x4a, 0x45, 0x13, 0x00, 0x00,
}
