// Code generated by protoc-gen-go. DO NOT EDIT.
// source: artifact.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "www.velocidex.com/golang/velociraptor/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ArtifactParameter struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Default              string   `protobuf:"bytes,2,opt,name=default,proto3" json:"default,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArtifactParameter) Reset()         { *m = ArtifactParameter{} }
func (m *ArtifactParameter) String() string { return proto.CompactTextString(m) }
func (*ArtifactParameter) ProtoMessage()    {}
func (*ArtifactParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_artifact_63a0c4984e4c8cf3, []int{0}
}
func (m *ArtifactParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactParameter.Unmarshal(m, b)
}
func (m *ArtifactParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactParameter.Marshal(b, m, deterministic)
}
func (dst *ArtifactParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactParameter.Merge(dst, src)
}
func (m *ArtifactParameter) XXX_Size() int {
	return xxx_messageInfo_ArtifactParameter.Size(m)
}
func (m *ArtifactParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactParameter.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactParameter proto.InternalMessageInfo

func (m *ArtifactParameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ArtifactParameter) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *ArtifactParameter) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ArtifactSource struct {
	Precondition         string   `protobuf:"bytes,1,opt,name=precondition,proto3" json:"precondition,omitempty"`
	Queries              []string `protobuf:"bytes,2,rep,name=queries,proto3" json:"queries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArtifactSource) Reset()         { *m = ArtifactSource{} }
func (m *ArtifactSource) String() string { return proto.CompactTextString(m) }
func (*ArtifactSource) ProtoMessage()    {}
func (*ArtifactSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_artifact_63a0c4984e4c8cf3, []int{1}
}
func (m *ArtifactSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactSource.Unmarshal(m, b)
}
func (m *ArtifactSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactSource.Marshal(b, m, deterministic)
}
func (dst *ArtifactSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactSource.Merge(dst, src)
}
func (m *ArtifactSource) XXX_Size() int {
	return xxx_messageInfo_ArtifactSource.Size(m)
}
func (m *ArtifactSource) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactSource.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactSource proto.InternalMessageInfo

func (m *ArtifactSource) GetPrecondition() string {
	if m != nil {
		return m.Precondition
	}
	return ""
}

func (m *ArtifactSource) GetQueries() []string {
	if m != nil {
		return m.Queries
	}
	return nil
}

type Artifact struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Reference            string               `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	Parameters           []*ArtifactParameter `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	Sources              []*ArtifactSource    `protobuf:"bytes,4,rep,name=sources,proto3" json:"sources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_artifact_63a0c4984e4c8cf3, []int{2}
}
func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifact.Unmarshal(m, b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
}
func (dst *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(dst, src)
}
func (m *Artifact) XXX_Size() int {
	return xxx_messageInfo_Artifact.Size(m)
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Artifact) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Artifact) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *Artifact) GetParameters() []*ArtifactParameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Artifact) GetSources() []*ArtifactSource {
	if m != nil {
		return m.Sources
	}
	return nil
}

func init() {
	proto.RegisterType((*ArtifactParameter)(nil), "proto.ArtifactParameter")
	proto.RegisterType((*ArtifactSource)(nil), "proto.ArtifactSource")
	proto.RegisterType((*Artifact)(nil), "proto.Artifact")
}

func init() { proto.RegisterFile("artifact.proto", fileDescriptor_artifact_63a0c4984e4c8cf3) }

var fileDescriptor_artifact_63a0c4984e4c8cf3 = []byte{
	// 792 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xcd, 0x8a, 0x24, 0x45,
	0x10, 0xa6, 0x66, 0x76, 0x1c, 0xa7, 0x56, 0x16, 0x4c, 0x10, 0x0a, 0x0f, 0x12, 0xce, 0x82, 0xce,
	0xc8, 0x9a, 0x0d, 0xeb, 0xad, 0x11, 0xa1, 0xdb, 0x15, 0x44, 0x96, 0x9d, 0x99, 0x9e, 0xc1, 0x85,
	0xbd, 0x45, 0x67, 0x45, 0x75, 0x25, 0x9b, 0x95, 0x59, 0x9b, 0x3f, 0x53, 0x5d, 0x5e, 0x7c, 0x07,
	0xc1, 0x93, 0x9e, 0x7c, 0x03, 0xdf, 0x41, 0x7c, 0x04, 0x41, 0x4f, 0xa2, 0xaf, 0xe1, 0x41, 0x32,
	0xab, 0x6b, 0xba, 0x5b, 0x0f, 0x7b, 0xea, 0xae, 0xc8, 0xcc, 0xef, 0xcb, 0xf8, 0xe2, 0xfb, 0x32,
	0x7f, 0x80, 0xd6, 0xcb, 0x0a, 0x85, 0xe7, 0xad, 0x35, 0xde, 0xb0, 0xa3, 0xf4, 0xf3, 0xee, 0xb4,
	0xeb, 0x3a, 0x7e, 0x4b, 0xca, 0x08, 0x59, 0xd2, 0x9a, 0x0b, 0xd3, 0x4c, 0x56, 0x46, 0xa1, 0x5e,
	0x4d, 0x86, 0xa2, 0xc5, 0xd6, 0x1b, 0x3b, 0x49, 0x9b, 0x27, 0x8e, 0x1a, 0xd4, 0x5e, 0x8a, 0x01,
	0xe2, 0xf4, 0xd7, 0x83, 0xfc, 0xed, 0xd9, 0x06, 0xf5, 0x12, 0x2d, 0x36, 0xe4, 0xc9, 0x32, 0x96,
	0xdf, 0xd3, 0xd8, 0x50, 0x91, 0x41, 0x76, 0x76, 0xb2, 0x48, 0xff, 0x59, 0x91, 0x1f, 0x97, 0x54,
	0x61, 0x50, 0xbe, 0x38, 0x48, 0xe5, 0xf1, 0x93, 0x41, 0x7e, 0xbf, 0x24, 0x27, 0xac, 0x6c, 0xbd,
	0x34, 0xba, 0x38, 0x4c, 0xab, 0xbb, 0xa5, 0xe9, 0x9f, 0xd9, 0x1f, 0xff, 0xfc, 0xfd, 0x4b, 0xf6,
	0x7b, 0x96, 0xff, 0x96, 0x8d, 0x6c, 0x0e, 0x1a, 0xec, 0x01, 0x85, 0xa0, 0xd6, 0x43, 0x3b, 0x52,
	0x3b, 0xe8, 0x6a, 0x29, 0x6a, 0x40, 0x4b, 0x80, 0x65, 0x49, 0x25, 0x78, 0x03, 0xbe, 0x26, 0x70,
	0xc2, 0xb4, 0x04, 0xad, 0x95, 0xc6, 0xc6, 0x12, 0xad, 0x49, 0x84, 0x88, 0xcd, 0xe1, 0xd9, 0xc5,
	0xcd, 0x17, 0x53, 0x40, 0xa5, 0x76, 0x51, 0xe2, 0x79, 0xe7, 0xad, 0xd4, 0x2b, 0x07, 0x1f, 0x83,
	0xac, 0xa0, 0x37, 0x01, 0x34, 0x51, 0x09, 0xce, 0x34, 0xe4, 0x6b, 0xa9, 0x57, 0x40, 0xca, 0x51,
	0xc2, 0x7e, 0x15, 0xc8, 0xf6, 0x20, 0x50, 0x43, 0xd0, 0x2d, 0x8a, 0x97, 0x40, 0x7c, 0xc5, 0xa1,
	0xb2, 0xa6, 0x81, 0xaf, 0xae, 0x2f, 0x9e, 0x41, 0x70, 0x71, 0x7b, 0xdc, 0x19, 0x3f, 0x2f, 0xd1,
	0x3a, 0x3a, 0x3b, 0x87, 0xaf, 0xaf, 0x9e, 0x42, 0x15, 0xb4, 0x48, 0xb7, 0x38, 0xfd, 0xe1, 0x20,
	0x7f, 0x30, 0xb6, 0x76, 0x6d, 0x82, 0x15, 0xc4, 0xea, 0xfc, 0xad, 0xd6, 0x92, 0x30, 0xba, 0x94,
	0x49, 0x98, 0xa4, 0xe6, 0xfc, 0xc9, 0x5f, 0x51, 0x8a, 0xcf, 0xd8, 0xa7, 0xb3, 0x84, 0x40, 0xeb,
	0xd6, 0x92, 0x73, 0xd2, 0xe8, 0xd8, 0xd6, 0x92, 0x80, 0x6e, 0x51, 0x05, 0xf4, 0x54, 0x6e, 0x9b,
	0x1d, 0xf9, 0xa5, 0x03, 0x97, 0xa0, 0xf9, 0x62, 0x0f, 0x99, 0xf9, 0xfc, 0x38, 0xf6, 0x20, 0xc9,
	0x15, 0x07, 0x70, 0x78, 0x76, 0x32, 0x7f, 0x91, 0x48, 0x6e, 0xd8, 0xe2, 0x6a, 0x28, 0x83, 0xaf,
	0xd1, 0x43, 0x27, 0x95, 0x02, 0x1b, 0x34, 0x48, 0x0d, 0xc6, 0x96, 0x64, 0x39, 0x5c, 0x68, 0xd5,
	0x83, 0x09, 0xbe, 0x0d, 0x7e, 0x68, 0x38, 0x76, 0xa9, 0xd0, 0xf9, 0x8d, 0x28, 0xe9, 0xc8, 0x92,
	0x40, 0x18, 0xa5, 0x48, 0x78, 0x2a, 0xf9, 0x62, 0xa4, 0x9a, 0x9e, 0xa7, 0xa1, 0x3e, 0xcc, 0xdf,
	0x7f, 0x5e, 0x93, 0x1d, 0x94, 0x1c, 0x0d, 0x0a, 0x2b, 0xf2, 0x0e, 0xa4, 0x77, 0x50, 0xa2, 0x47,
	0x7e, 0xfa, 0xd3, 0x51, 0xfe, 0xe6, 0xa8, 0x0e, 0xfb, 0x39, 0xdb, 0xb5, 0xd7, 0xfc, 0xc7, 0x2c,
	0x5d, 0xf6, 0xfb, 0x8c, 0x7d, 0x97, 0xdd, 0xd4, 0x04, 0x71, 0x09, 0x4c, 0xb5, 0x87, 0xc7, 0xe1,
	0xba, 0x36, 0x41, 0x95, 0xf1, 0x2a, 0x41, 0xcb, 0x57, 0x81, 0x00, 0x75, 0x99, 0x1c, 0x24, 0x8c,
	0xf6, 0x28, 0x35, 0x94, 0xc6, 0x3b, 0x0e, 0x33, 0x08, 0x8e, 0xaa, 0xa0, 0xc0, 0x89, 0x9a, 0x1a,
	0x02, 0xe9, 0x92, 0xac, 0x96, 0xf0, 0x25, 0x08, 0xf4, 0xb4, 0x32, 0x49, 0x8e, 0x4e, 0xfa, 0x3a,
	0x9e, 0x18, 0x26, 0xfd, 0x54, 0xea, 0xb0, 0xe6, 0x73, 0x6b, 0x3a, 0x47, 0xd6, 0xf1, 0xcf, 0x6b,
	0x6b, 0x1a, 0xfa, 0x52, 0x3a, 0x6f, 0x6c, 0xbf, 0x71, 0xff, 0xd5, 0xbe, 0xc7, 0x53, 0x02, 0xe6,
	0x93, 0x74, 0xf1, 0x73, 0xf6, 0xe1, 0xf3, 0xa8, 0xee, 0x5e, 0xff, 0x91, 0xd7, 0xf6, 0x69, 0x6c,
	0x66, 0x14, 0x8f, 0xef, 0x85, 0x82, 0x3d, 0xc9, 0x4f, 0x2c, 0x55, 0x64, 0x49, 0x0b, 0x2a, 0x8e,
	0x12, 0xe0, 0x07, 0x09, 0x10, 0xd8, 0x7b, 0x33, 0xb8, 0x5b, 0x82, 0x2a, 0x9a, 0x20, 0xce, 0xfe,
	0x4e, 0x8c, 0xc5, 0xf6, 0x20, 0x53, 0x79, 0xbe, 0xb5, 0x7d, 0x71, 0x08, 0x87, 0x67, 0xf7, 0x1f,
	0x17, 0x43, 0xb8, 0xf9, 0xff, 0x82, 0x3d, 0x7f, 0x9c, 0x08, 0x1e, 0xb1, 0x8f, 0x2e, 0xb7, 0x51,
	0x19, 0x6c, 0xd7, 0x5a, 0x73, 0x2b, 0x77, 0xf2, 0xb6, 0x25, 0xdb, 0xc1, 0x67, 0x2f, 0xf2, 0xe3,
	0xc1, 0x81, 0xae, 0xb8, 0x97, 0xa8, 0xde, 0xf9, 0x0f, 0xd5, 0x60, 0xfd, 0xf9, 0x79, 0xe2, 0x79,
	0xc8, 0x5e, 0x6f, 0x8d, 0xc5, 0x08, 0x38, 0xfd, 0x36, 0xd9, 0xa9, 0xcf, 0xbb, 0x99, 0xde, 0x6e,
	0xee, 0x2c, 0xb6, 0x0e, 0x30, 0x45, 0x65, 0x70, 0xa4, 0xd4, 0x60, 0x29, 0x38, 0x5c, 0x2a, 0x7a,
	0x04, 0xa5, 0x11, 0xa1, 0x21, 0x1d, 0xd3, 0xd2, 0x61, 0xcf, 0xb7, 0x6f, 0x4b, 0x7a, 0x3f, 0x94,
	0x02, 0x5c, 0x9a, 0xe0, 0xc7, 0x01, 0x6c, 0x52, 0x14, 0xdf, 0x04, 0x6d, 0x3c, 0xa0, 0x46, 0xd5,
	0x7f, 0xb3, 0x89, 0x76, 0xc3, 0x97, 0x6f, 0xa4, 0x56, 0x3e, 0xf9, 0x37, 0x00, 0x00, 0xff, 0xff,
	0xf1, 0x37, 0xab, 0x2e, 0x67, 0x05, 0x00, 0x00,
}
