syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "www.velocidex.com/golang/velociraptor/flows/proto/flows.proto";

// Files within the same directory must be imported relatively.
import "clients.proto";

package proto;

message StartFlowRequest {
    string client_id = 1;

    // Interrogate: This flow is designed to gather information about the host.
    VInterrogateArgs interrogate = 2;
}

message StartFlowResponse {
    string flow_id = 1;
    string error = 2;
}

message FieldDescriptor {
    string friendly_name = 1;
    string name = 2;
    bool repeated_ = 3 [json_name="repeated"];
    string type = 4;
    string doc = 5;
}


message TypeDescriptor {
    string doc = 1;
    repeated FieldDescriptor fields = 2;
    string name = 3;
    string kind = 4;
}

message Types {
    repeated TypeDescriptor items = 1;
}


service API {
    rpc LaunchFlow(StartFlowRequest) returns (StartFlowResponse) {
        option (google.api.http) = {
            post: "/api/v1/LaunchFlow",
            body: "*"
        };
    }

    rpc ListClients(SearchClientsRequest) returns (SearchClientsResponse) {
        option (google.api.http) = {
            get: "/api/v1/SearchClients",
        };
    }

    rpc GetClient(GetClientRequest) returns (ApiClient) {
        option (google.api.http) = {
            get: "/api/v1/GetClient",
        };
    }

    rpc DescribeTypes(google.protobuf.Empty) returns (Types) {
        option (google.api.http) = {
            get: "/api/v1/DescribeTypes",
        };
    }
}