// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import proto1 "www.velocidex.com/golang/velociraptor/flows/proto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StartFlowRequest struct {
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// Interrogate: This flow is designed to gather information about the host.
	Interrogate          *proto1.VInterrogateArgs `protobuf:"bytes,2,opt,name=interrogate,proto3" json:"interrogate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *StartFlowRequest) Reset()         { *m = StartFlowRequest{} }
func (m *StartFlowRequest) String() string { return proto.CompactTextString(m) }
func (*StartFlowRequest) ProtoMessage()    {}
func (*StartFlowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2b69cc8486e16726, []int{0}
}
func (m *StartFlowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartFlowRequest.Unmarshal(m, b)
}
func (m *StartFlowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartFlowRequest.Marshal(b, m, deterministic)
}
func (dst *StartFlowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartFlowRequest.Merge(dst, src)
}
func (m *StartFlowRequest) XXX_Size() int {
	return xxx_messageInfo_StartFlowRequest.Size(m)
}
func (m *StartFlowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartFlowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartFlowRequest proto.InternalMessageInfo

func (m *StartFlowRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *StartFlowRequest) GetInterrogate() *proto1.VInterrogateArgs {
	if m != nil {
		return m.Interrogate
	}
	return nil
}

type StartFlowResponse struct {
	FlowId               string   `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartFlowResponse) Reset()         { *m = StartFlowResponse{} }
func (m *StartFlowResponse) String() string { return proto.CompactTextString(m) }
func (*StartFlowResponse) ProtoMessage()    {}
func (*StartFlowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2b69cc8486e16726, []int{1}
}
func (m *StartFlowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartFlowResponse.Unmarshal(m, b)
}
func (m *StartFlowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartFlowResponse.Marshal(b, m, deterministic)
}
func (dst *StartFlowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartFlowResponse.Merge(dst, src)
}
func (m *StartFlowResponse) XXX_Size() int {
	return xxx_messageInfo_StartFlowResponse.Size(m)
}
func (m *StartFlowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartFlowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartFlowResponse proto.InternalMessageInfo

func (m *StartFlowResponse) GetFlowId() string {
	if m != nil {
		return m.FlowId
	}
	return ""
}

func (m *StartFlowResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type FieldDescriptor struct {
	FriendlyName         string   `protobuf:"bytes,1,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Repeated_            bool     `protobuf:"varint,3,opt,name=repeated_,json=repeated,proto3" json:"repeated_,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Doc                  string   `protobuf:"bytes,5,opt,name=doc,proto3" json:"doc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldDescriptor) Reset()         { *m = FieldDescriptor{} }
func (m *FieldDescriptor) String() string { return proto.CompactTextString(m) }
func (*FieldDescriptor) ProtoMessage()    {}
func (*FieldDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2b69cc8486e16726, []int{2}
}
func (m *FieldDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldDescriptor.Unmarshal(m, b)
}
func (m *FieldDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldDescriptor.Marshal(b, m, deterministic)
}
func (dst *FieldDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldDescriptor.Merge(dst, src)
}
func (m *FieldDescriptor) XXX_Size() int {
	return xxx_messageInfo_FieldDescriptor.Size(m)
}
func (m *FieldDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_FieldDescriptor proto.InternalMessageInfo

func (m *FieldDescriptor) GetFriendlyName() string {
	if m != nil {
		return m.FriendlyName
	}
	return ""
}

func (m *FieldDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FieldDescriptor) GetRepeated_() bool {
	if m != nil {
		return m.Repeated_
	}
	return false
}

func (m *FieldDescriptor) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *FieldDescriptor) GetDoc() string {
	if m != nil {
		return m.Doc
	}
	return ""
}

type TypeDescriptor struct {
	Doc                  string             `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	Fields               []*FieldDescriptor `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	Name                 string             `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Kind                 string             `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TypeDescriptor) Reset()         { *m = TypeDescriptor{} }
func (m *TypeDescriptor) String() string { return proto.CompactTextString(m) }
func (*TypeDescriptor) ProtoMessage()    {}
func (*TypeDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2b69cc8486e16726, []int{3}
}
func (m *TypeDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypeDescriptor.Unmarshal(m, b)
}
func (m *TypeDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypeDescriptor.Marshal(b, m, deterministic)
}
func (dst *TypeDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypeDescriptor.Merge(dst, src)
}
func (m *TypeDescriptor) XXX_Size() int {
	return xxx_messageInfo_TypeDescriptor.Size(m)
}
func (m *TypeDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_TypeDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_TypeDescriptor proto.InternalMessageInfo

func (m *TypeDescriptor) GetDoc() string {
	if m != nil {
		return m.Doc
	}
	return ""
}

func (m *TypeDescriptor) GetFields() []*FieldDescriptor {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *TypeDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TypeDescriptor) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

type Types struct {
	Items                []*TypeDescriptor `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Types) Reset()         { *m = Types{} }
func (m *Types) String() string { return proto.CompactTextString(m) }
func (*Types) ProtoMessage()    {}
func (*Types) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2b69cc8486e16726, []int{4}
}
func (m *Types) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Types.Unmarshal(m, b)
}
func (m *Types) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Types.Marshal(b, m, deterministic)
}
func (dst *Types) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Types.Merge(dst, src)
}
func (m *Types) XXX_Size() int {
	return xxx_messageInfo_Types.Size(m)
}
func (m *Types) XXX_DiscardUnknown() {
	xxx_messageInfo_Types.DiscardUnknown(m)
}

var xxx_messageInfo_Types proto.InternalMessageInfo

func (m *Types) GetItems() []*TypeDescriptor {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*StartFlowRequest)(nil), "proto.StartFlowRequest")
	proto.RegisterType((*StartFlowResponse)(nil), "proto.StartFlowResponse")
	proto.RegisterType((*FieldDescriptor)(nil), "proto.FieldDescriptor")
	proto.RegisterType((*TypeDescriptor)(nil), "proto.TypeDescriptor")
	proto.RegisterType((*Types)(nil), "proto.Types")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// APIClient is the client API for API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIClient interface {
	LaunchFlow(ctx context.Context, in *StartFlowRequest, opts ...grpc.CallOption) (*StartFlowResponse, error)
	ListClients(ctx context.Context, in *SearchClientsRequest, opts ...grpc.CallOption) (*SearchClientsResponse, error)
	GetClient(ctx context.Context, in *GetClientRequest, opts ...grpc.CallOption) (*ApiClient, error)
	DescribeTypes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Types, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) LaunchFlow(ctx context.Context, in *StartFlowRequest, opts ...grpc.CallOption) (*StartFlowResponse, error) {
	out := new(StartFlowResponse)
	err := c.cc.Invoke(ctx, "/proto.API/LaunchFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) ListClients(ctx context.Context, in *SearchClientsRequest, opts ...grpc.CallOption) (*SearchClientsResponse, error) {
	out := new(SearchClientsResponse)
	err := c.cc.Invoke(ctx, "/proto.API/ListClients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetClient(ctx context.Context, in *GetClientRequest, opts ...grpc.CallOption) (*ApiClient, error) {
	out := new(ApiClient)
	err := c.cc.Invoke(ctx, "/proto.API/GetClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) DescribeTypes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Types, error) {
	out := new(Types)
	err := c.cc.Invoke(ctx, "/proto.API/DescribeTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APIServer is the server API for API service.
type APIServer interface {
	LaunchFlow(context.Context, *StartFlowRequest) (*StartFlowResponse, error)
	ListClients(context.Context, *SearchClientsRequest) (*SearchClientsResponse, error)
	GetClient(context.Context, *GetClientRequest) (*ApiClient, error)
	DescribeTypes(context.Context, *empty.Empty) (*Types, error)
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_LaunchFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).LaunchFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/LaunchFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).LaunchFlow(ctx, req.(*StartFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_ListClients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchClientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).ListClients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/ListClients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).ListClients(ctx, req.(*SearchClientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/GetClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetClient(ctx, req.(*GetClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_DescribeTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).DescribeTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/DescribeTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).DescribeTypes(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LaunchFlow",
			Handler:    _API_LaunchFlow_Handler,
		},
		{
			MethodName: "ListClients",
			Handler:    _API_ListClients_Handler,
		},
		{
			MethodName: "GetClient",
			Handler:    _API_GetClient_Handler,
		},
		{
			MethodName: "DescribeTypes",
			Handler:    _API_DescribeTypes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_api_2b69cc8486e16726) }

var fileDescriptor_api_2b69cc8486e16726 = []byte{
	// 551 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x55, 0xda, 0x75, 0xb4, 0xb7, 0x2b, 0x74, 0x86, 0xad, 0xa1, 0x1d, 0x52, 0x15, 0x5e, 0x2a,
	0x90, 0x12, 0x51, 0x78, 0x01, 0x89, 0x87, 0xf2, 0x31, 0x54, 0x69, 0x42, 0x10, 0x26, 0x1e, 0xa9,
	0xdc, 0xe4, 0x36, 0x33, 0xa4, 0x71, 0xb0, 0xdd, 0x95, 0xf2, 0xc8, 0x3b, 0x4f, 0xfc, 0x34, 0xfe,
	0x02, 0xff, 0x81, 0x57, 0xe4, 0xd8, 0xe9, 0xc7, 0xc6, 0x53, 0xae, 0xef, 0x39, 0x3e, 0xe7, 0xf8,
	0xc6, 0x86, 0x06, 0xcd, 0x99, 0x9f, 0x0b, 0xae, 0x38, 0xa9, 0x15, 0x9f, 0xee, 0x49, 0xc2, 0x79,
	0x92, 0x62, 0x40, 0x73, 0x16, 0xd0, 0x2c, 0xe3, 0x8a, 0x2a, 0xc6, 0x33, 0x69, 0x48, 0xdd, 0x9e,
	0x45, 0x8b, 0xd5, 0x74, 0x31, 0x0b, 0x70, 0x9e, 0xab, 0x95, 0x05, 0x9f, 0x2f, 0x97, 0x4b, 0xff,
	0x12, 0x53, 0x1e, 0xb1, 0x18, 0xbf, 0xf9, 0x11, 0x9f, 0x07, 0x09, 0x4f, 0x69, 0x96, 0x04, 0xa6,
	0x29, 0x68, 0xae, 0xb8, 0x08, 0x66, 0x29, 0x5f, 0x4a, 0xa3, 0x60, 0x6a, 0xbb, 0xbd, 0x15, 0xa5,
	0x0c, 0x33, 0x65, 0x97, 0xde, 0x67, 0x68, 0x7f, 0x50, 0x54, 0xa8, 0xd3, 0x94, 0x2f, 0x43, 0xfc,
	0xba, 0x40, 0xa9, 0x48, 0x0f, 0x1a, 0x86, 0x34, 0x61, 0xb1, 0xeb, 0xf4, 0x9d, 0x41, 0x23, 0xac,
	0x9b, 0xc6, 0x38, 0x26, 0x4f, 0xa1, 0xc9, 0x32, 0x85, 0x42, 0xf0, 0x84, 0x2a, 0x74, 0x2b, 0x7d,
	0x67, 0xd0, 0x1c, 0x76, 0x8c, 0x9a, 0xff, 0x71, 0xbc, 0x81, 0x46, 0x22, 0x91, 0xe1, 0x36, 0xd7,
	0x7b, 0x01, 0x87, 0x5b, 0x5e, 0x32, 0xe7, 0x99, 0x44, 0xd2, 0x81, 0x1b, 0x3a, 0xde, 0xc6, 0x6a,
	0x5f, 0x2f, 0xc7, 0x31, 0xb9, 0x03, 0x35, 0xbd, 0x53, 0x14, 0x16, 0x8d, 0xd0, 0x2c, 0xbc, 0x9f,
	0x0e, 0xdc, 0x3a, 0x65, 0x98, 0xc6, 0xaf, 0x50, 0x46, 0x82, 0xe9, 0xa3, 0x92, 0xfb, 0xd0, 0x9a,
	0x09, 0x86, 0x59, 0x9c, 0xae, 0x26, 0x19, 0x9d, 0xa3, 0x15, 0x3a, 0x28, 0x9b, 0x6f, 0xe9, 0x1c,
	0x09, 0x81, 0xbd, 0x02, 0x33, 0x6a, 0x45, 0xad, 0x0f, 0x2a, 0x30, 0x47, 0xaa, 0x30, 0x9e, 0xb8,
	0xd5, 0xbe, 0x33, 0xa8, 0x87, 0xf5, 0xb2, 0xa1, 0x37, 0xa8, 0x55, 0x8e, 0xee, 0x9e, 0xd9, 0xa0,
	0x6b, 0xd2, 0x86, 0x6a, 0xcc, 0x23, 0xb7, 0x56, 0xb4, 0x74, 0xe9, 0x7d, 0x87, 0x9b, 0xe7, 0xab,
	0x1c, 0xb7, 0xd2, 0x58, 0x8e, 0xb3, 0xe6, 0x10, 0x1f, 0xf6, 0x67, 0x3a, 0xb2, 0x74, 0x2b, 0xfd,
	0xea, 0xa0, 0x39, 0x3c, 0xb6, 0xd3, 0xba, 0x72, 0x8e, 0xd0, 0xb2, 0xd6, 0x51, 0xab, 0x5b, 0x51,
	0x09, 0xec, 0x7d, 0x61, 0x59, 0x5c, 0xa6, 0xd1, 0xb5, 0xf7, 0x04, 0x6a, 0xda, 0x5b, 0x92, 0x87,
	0x50, 0x63, 0x0a, 0xe7, 0xd2, 0x75, 0x0a, 0xfd, 0x23, 0xab, 0xbf, 0x1b, 0x2c, 0x34, 0x9c, 0xe1,
	0xdf, 0x0a, 0x54, 0x47, 0xef, 0xc6, 0xe4, 0x13, 0xc0, 0x19, 0x5d, 0x64, 0xd1, 0x85, 0xfe, 0x1d,
	0xa4, 0xfc, 0x83, 0x57, 0x2f, 0x43, 0xd7, 0xbd, 0x0e, 0x98, 0x3f, 0xe7, 0xdd, 0xfb, 0xf1, 0xfb,
	0xcf, 0xaf, 0x4a, 0xc7, 0x23, 0xc5, 0x2d, 0xbe, 0x7c, 0x14, 0x6c, 0xe4, 0x9e, 0x39, 0x0f, 0x48,
	0x02, 0xcd, 0x33, 0x26, 0xd5, 0x4b, 0x73, 0xdd, 0x48, 0xaf, 0xd4, 0x41, 0x2a, 0xa2, 0x0b, 0xdb,
	0x2d, 0x4d, 0x4e, 0xfe, 0x0f, 0xee, 0x1a, 0x91, 0xa3, 0xd2, 0x68, 0x87, 0x46, 0xde, 0x43, 0xe3,
	0x0d, 0x5a, 0x9f, 0xf5, 0x39, 0xd6, 0x9d, 0xd2, 0xa2, 0x6d, 0x81, 0x51, 0xce, 0x0c, 0xe0, 0xdd,
	0x2d, 0x64, 0x6f, 0x93, 0xc3, 0x52, 0x76, 0xa3, 0x72, 0x0e, 0x2d, 0x33, 0xb8, 0x29, 0x9a, 0x09,
	0x1f, 0xfb, 0xe6, 0x49, 0xfa, 0xe5, 0x93, 0xf4, 0x5f, 0xeb, 0x27, 0xd9, 0x3d, 0xd8, 0x1a, 0xb5,
	0xbc, 0x1e, 0x74, 0x47, 0x64, 0xba, 0x5f, 0x70, 0x1f, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x36,
	0x31, 0x76, 0xde, 0x0f, 0x04, 0x00, 0x00,
}
