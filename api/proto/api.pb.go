// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import proto2 "www.velocidex.com/golang/velociraptor/actions/proto"
import proto1 "www.velocidex.com/golang/velociraptor/flows/proto"
import _ "www.velocidex.com/golang/velociraptor/proto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GUISettings_UIMode int32

const (
	GUISettings_BASIC    GUISettings_UIMode = 0
	GUISettings_ADVANCED GUISettings_UIMode = 1
	GUISettings_DEBUG    GUISettings_UIMode = 2
)

var GUISettings_UIMode_name = map[int32]string{
	0: "BASIC",
	1: "ADVANCED",
	2: "DEBUG",
}
var GUISettings_UIMode_value = map[string]int32{
	"BASIC":    0,
	"ADVANCED": 1,
	"DEBUG":    2,
}

func (x GUISettings_UIMode) String() string {
	return proto.EnumName(GUISettings_UIMode_name, int32(x))
}
func (GUISettings_UIMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_412e68c3e8d354ef, []int{6, 0}
}

type ApiGrrUser_UserType int32

const (
	ApiGrrUser_USER_TYPE_NONE     ApiGrrUser_UserType = 0
	ApiGrrUser_USER_TYPE_STANDARD ApiGrrUser_UserType = 1
	ApiGrrUser_USER_TYPE_ADMIN    ApiGrrUser_UserType = 2
)

var ApiGrrUser_UserType_name = map[int32]string{
	0: "USER_TYPE_NONE",
	1: "USER_TYPE_STANDARD",
	2: "USER_TYPE_ADMIN",
}
var ApiGrrUser_UserType_value = map[string]int32{
	"USER_TYPE_NONE":     0,
	"USER_TYPE_STANDARD": 1,
	"USER_TYPE_ADMIN":    2,
}

func (x ApiGrrUser_UserType) String() string {
	return proto.EnumName(ApiGrrUser_UserType_name, int32(x))
}
func (ApiGrrUser_UserType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_412e68c3e8d354ef, []int{8, 0}
}

type StartFlowResponse struct {
	FlowId               string                 `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	RunnerArgs           *proto1.FlowRunnerArgs `protobuf:"bytes,2,opt,name=runner_args,json=runnerArgs,proto3" json:"runner_args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *StartFlowResponse) Reset()         { *m = StartFlowResponse{} }
func (m *StartFlowResponse) String() string { return proto.CompactTextString(m) }
func (*StartFlowResponse) ProtoMessage()    {}
func (*StartFlowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_412e68c3e8d354ef, []int{0}
}
func (m *StartFlowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartFlowResponse.Unmarshal(m, b)
}
func (m *StartFlowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartFlowResponse.Marshal(b, m, deterministic)
}
func (dst *StartFlowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartFlowResponse.Merge(dst, src)
}
func (m *StartFlowResponse) XXX_Size() int {
	return xxx_messageInfo_StartFlowResponse.Size(m)
}
func (m *StartFlowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartFlowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartFlowResponse proto.InternalMessageInfo

func (m *StartFlowResponse) GetFlowId() string {
	if m != nil {
		return m.FlowId
	}
	return ""
}

func (m *StartFlowResponse) GetRunnerArgs() *proto1.FlowRunnerArgs {
	if m != nil {
		return m.RunnerArgs
	}
	return nil
}

type FieldDescriptor struct {
	FriendlyName         string   `protobuf:"bytes,1,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Repeated             bool     `protobuf:"varint,3,opt,name=repeated,proto3" json:"repeated,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Doc                  string   `protobuf:"bytes,5,opt,name=doc,proto3" json:"doc,omitempty"`
	Labels               []string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty"`
	Default              string   `protobuf:"bytes,7,opt,name=default,proto3" json:"default,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldDescriptor) Reset()         { *m = FieldDescriptor{} }
func (m *FieldDescriptor) String() string { return proto.CompactTextString(m) }
func (*FieldDescriptor) ProtoMessage()    {}
func (*FieldDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_412e68c3e8d354ef, []int{1}
}
func (m *FieldDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldDescriptor.Unmarshal(m, b)
}
func (m *FieldDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldDescriptor.Marshal(b, m, deterministic)
}
func (dst *FieldDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldDescriptor.Merge(dst, src)
}
func (m *FieldDescriptor) XXX_Size() int {
	return xxx_messageInfo_FieldDescriptor.Size(m)
}
func (m *FieldDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_FieldDescriptor proto.InternalMessageInfo

func (m *FieldDescriptor) GetFriendlyName() string {
	if m != nil {
		return m.FriendlyName
	}
	return ""
}

func (m *FieldDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FieldDescriptor) GetRepeated() bool {
	if m != nil {
		return m.Repeated
	}
	return false
}

func (m *FieldDescriptor) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *FieldDescriptor) GetDoc() string {
	if m != nil {
		return m.Doc
	}
	return ""
}

func (m *FieldDescriptor) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *FieldDescriptor) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

type TypeDescriptor struct {
	Doc                  string             `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	Fields               []*FieldDescriptor `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	Name                 string             `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Kind                 string             `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TypeDescriptor) Reset()         { *m = TypeDescriptor{} }
func (m *TypeDescriptor) String() string { return proto.CompactTextString(m) }
func (*TypeDescriptor) ProtoMessage()    {}
func (*TypeDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_412e68c3e8d354ef, []int{2}
}
func (m *TypeDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypeDescriptor.Unmarshal(m, b)
}
func (m *TypeDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypeDescriptor.Marshal(b, m, deterministic)
}
func (dst *TypeDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypeDescriptor.Merge(dst, src)
}
func (m *TypeDescriptor) XXX_Size() int {
	return xxx_messageInfo_TypeDescriptor.Size(m)
}
func (m *TypeDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_TypeDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_TypeDescriptor proto.InternalMessageInfo

func (m *TypeDescriptor) GetDoc() string {
	if m != nil {
		return m.Doc
	}
	return ""
}

func (m *TypeDescriptor) GetFields() []*FieldDescriptor {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *TypeDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TypeDescriptor) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

type Types struct {
	Items                []*TypeDescriptor `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Types) Reset()         { *m = Types{} }
func (m *Types) String() string { return proto.CompactTextString(m) }
func (*Types) ProtoMessage()    {}
func (*Types) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_412e68c3e8d354ef, []int{3}
}
func (m *Types) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Types.Unmarshal(m, b)
}
func (m *Types) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Types.Marshal(b, m, deterministic)
}
func (dst *Types) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Types.Merge(dst, src)
}
func (m *Types) XXX_Size() int {
	return xxx_messageInfo_Types.Size(m)
}
func (m *Types) XXX_DiscardUnknown() {
	xxx_messageInfo_Types.DiscardUnknown(m)
}

var xxx_messageInfo_Types proto.InternalMessageInfo

func (m *Types) GetItems() []*TypeDescriptor {
	if m != nil {
		return m.Items
	}
	return nil
}

type Approval struct {
	Reason               string   `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Approval) Reset()         { *m = Approval{} }
func (m *Approval) String() string { return proto.CompactTextString(m) }
func (*Approval) ProtoMessage()    {}
func (*Approval) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_412e68c3e8d354ef, []int{4}
}
func (m *Approval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Approval.Unmarshal(m, b)
}
func (m *Approval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Approval.Marshal(b, m, deterministic)
}
func (dst *Approval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Approval.Merge(dst, src)
}
func (m *Approval) XXX_Size() int {
	return xxx_messageInfo_Approval.Size(m)
}
func (m *Approval) XXX_DiscardUnknown() {
	xxx_messageInfo_Approval.DiscardUnknown(m)
}

var xxx_messageInfo_Approval proto.InternalMessageInfo

func (m *Approval) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type ApprovalList struct {
	Items                []*Approval `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ApprovalList) Reset()         { *m = ApprovalList{} }
func (m *ApprovalList) String() string { return proto.CompactTextString(m) }
func (*ApprovalList) ProtoMessage()    {}
func (*ApprovalList) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_412e68c3e8d354ef, []int{5}
}
func (m *ApprovalList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApprovalList.Unmarshal(m, b)
}
func (m *ApprovalList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApprovalList.Marshal(b, m, deterministic)
}
func (dst *ApprovalList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApprovalList.Merge(dst, src)
}
func (m *ApprovalList) XXX_Size() int {
	return xxx_messageInfo_ApprovalList.Size(m)
}
func (m *ApprovalList) XXX_DiscardUnknown() {
	xxx_messageInfo_ApprovalList.DiscardUnknown(m)
}

var xxx_messageInfo_ApprovalList proto.InternalMessageInfo

func (m *ApprovalList) GetItems() []*Approval {
	if m != nil {
		return m.Items
	}
	return nil
}

// Next field: 4
type GUISettings struct {
	Mode                 GUISettings_UIMode `protobuf:"varint,1,opt,name=mode,proto3,enum=proto.GUISettings_UIMode" json:"mode,omitempty"`
	CanaryMode           bool               `protobuf:"varint,3,opt,name=canary_mode,json=canaryMode,proto3" json:"canary_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GUISettings) Reset()         { *m = GUISettings{} }
func (m *GUISettings) String() string { return proto.CompactTextString(m) }
func (*GUISettings) ProtoMessage()    {}
func (*GUISettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_412e68c3e8d354ef, []int{6}
}
func (m *GUISettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GUISettings.Unmarshal(m, b)
}
func (m *GUISettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GUISettings.Marshal(b, m, deterministic)
}
func (dst *GUISettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GUISettings.Merge(dst, src)
}
func (m *GUISettings) XXX_Size() int {
	return xxx_messageInfo_GUISettings.Size(m)
}
func (m *GUISettings) XXX_DiscardUnknown() {
	xxx_messageInfo_GUISettings.DiscardUnknown(m)
}

var xxx_messageInfo_GUISettings proto.InternalMessageInfo

func (m *GUISettings) GetMode() GUISettings_UIMode {
	if m != nil {
		return m.Mode
	}
	return GUISettings_BASIC
}

func (m *GUISettings) GetCanaryMode() bool {
	if m != nil {
		return m.CanaryMode
	}
	return false
}

// These traits are used by the AdminUI Angular app to disable certain UI
// elements.
type ApiGrrUserInterfaceTraits struct {
	CronJobsNavItemEnabled                bool     `protobuf:"varint,1,opt,name=cron_jobs_nav_item_enabled,json=cronJobsNavItemEnabled,proto3" json:"cron_jobs_nav_item_enabled,omitempty"`
	CreateCronJobActionEnabled            bool     `protobuf:"varint,2,opt,name=create_cron_job_action_enabled,json=createCronJobActionEnabled,proto3" json:"create_cron_job_action_enabled,omitempty"`
	HuntManagerNavItemEnabled             bool     `protobuf:"varint,3,opt,name=hunt_manager_nav_item_enabled,json=huntManagerNavItemEnabled,proto3" json:"hunt_manager_nav_item_enabled,omitempty"`
	CreateHuntActionEnabled               bool     `protobuf:"varint,4,opt,name=create_hunt_action_enabled,json=createHuntActionEnabled,proto3" json:"create_hunt_action_enabled,omitempty"`
	ShowStatisticsNavItemEnabled          bool     `protobuf:"varint,5,opt,name=show_statistics_nav_item_enabled,json=showStatisticsNavItemEnabled,proto3" json:"show_statistics_nav_item_enabled,omitempty"`
	ServerLoadNavItemEnabled              bool     `protobuf:"varint,7,opt,name=server_load_nav_item_enabled,json=serverLoadNavItemEnabled,proto3" json:"server_load_nav_item_enabled,omitempty"`
	ManageBinariesNavItemEnabled          bool     `protobuf:"varint,9,opt,name=manage_binaries_nav_item_enabled,json=manageBinariesNavItemEnabled,proto3" json:"manage_binaries_nav_item_enabled,omitempty"`
	UploadBinaryActionEnabled             bool     `protobuf:"varint,10,opt,name=upload_binary_action_enabled,json=uploadBinaryActionEnabled,proto3" json:"upload_binary_action_enabled,omitempty"`
	SettingsNavItemEnabled                bool     `protobuf:"varint,11,opt,name=settings_nav_item_enabled,json=settingsNavItemEnabled,proto3" json:"settings_nav_item_enabled,omitempty"`
	ArtifactManagerNavItemEnabled         bool     `protobuf:"varint,12,opt,name=artifact_manager_nav_item_enabled,json=artifactManagerNavItemEnabled,proto3" json:"artifact_manager_nav_item_enabled,omitempty"`
	UploadArtifactActionEnabled           bool     `protobuf:"varint,13,opt,name=upload_artifact_action_enabled,json=uploadArtifactActionEnabled,proto3" json:"upload_artifact_action_enabled,omitempty"`
	SearchClientsActionEnabled            bool     `protobuf:"varint,14,opt,name=search_clients_action_enabled,json=searchClientsActionEnabled,proto3" json:"search_clients_action_enabled,omitempty"`
	BrowseVirtualFileSystemNavItemEnabled bool     `protobuf:"varint,15,opt,name=browse_virtual_file_system_nav_item_enabled,json=browseVirtualFileSystemNavItemEnabled,proto3" json:"browse_virtual_file_system_nav_item_enabled,omitempty"`
	StartClientFlowNavItemEnabled         bool     `protobuf:"varint,16,opt,name=start_client_flow_nav_item_enabled,json=startClientFlowNavItemEnabled,proto3" json:"start_client_flow_nav_item_enabled,omitempty"`
	ManageClientFlowsNavItemEnabled       bool     `protobuf:"varint,17,opt,name=manage_client_flows_nav_item_enabled,json=manageClientFlowsNavItemEnabled,proto3" json:"manage_client_flows_nav_item_enabled,omitempty"`
	ModifyClientLabelsActionEnabled       bool     `protobuf:"varint,18,opt,name=modify_client_labels_action_enabled,json=modifyClientLabelsActionEnabled,proto3" json:"modify_client_labels_action_enabled,omitempty"`
	XXX_NoUnkeyedLiteral                  struct{} `json:"-"`
	XXX_unrecognized                      []byte   `json:"-"`
	XXX_sizecache                         int32    `json:"-"`
}

func (m *ApiGrrUserInterfaceTraits) Reset()         { *m = ApiGrrUserInterfaceTraits{} }
func (m *ApiGrrUserInterfaceTraits) String() string { return proto.CompactTextString(m) }
func (*ApiGrrUserInterfaceTraits) ProtoMessage()    {}
func (*ApiGrrUserInterfaceTraits) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_412e68c3e8d354ef, []int{7}
}
func (m *ApiGrrUserInterfaceTraits) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApiGrrUserInterfaceTraits.Unmarshal(m, b)
}
func (m *ApiGrrUserInterfaceTraits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApiGrrUserInterfaceTraits.Marshal(b, m, deterministic)
}
func (dst *ApiGrrUserInterfaceTraits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiGrrUserInterfaceTraits.Merge(dst, src)
}
func (m *ApiGrrUserInterfaceTraits) XXX_Size() int {
	return xxx_messageInfo_ApiGrrUserInterfaceTraits.Size(m)
}
func (m *ApiGrrUserInterfaceTraits) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiGrrUserInterfaceTraits.DiscardUnknown(m)
}

var xxx_messageInfo_ApiGrrUserInterfaceTraits proto.InternalMessageInfo

func (m *ApiGrrUserInterfaceTraits) GetCronJobsNavItemEnabled() bool {
	if m != nil {
		return m.CronJobsNavItemEnabled
	}
	return false
}

func (m *ApiGrrUserInterfaceTraits) GetCreateCronJobActionEnabled() bool {
	if m != nil {
		return m.CreateCronJobActionEnabled
	}
	return false
}

func (m *ApiGrrUserInterfaceTraits) GetHuntManagerNavItemEnabled() bool {
	if m != nil {
		return m.HuntManagerNavItemEnabled
	}
	return false
}

func (m *ApiGrrUserInterfaceTraits) GetCreateHuntActionEnabled() bool {
	if m != nil {
		return m.CreateHuntActionEnabled
	}
	return false
}

func (m *ApiGrrUserInterfaceTraits) GetShowStatisticsNavItemEnabled() bool {
	if m != nil {
		return m.ShowStatisticsNavItemEnabled
	}
	return false
}

func (m *ApiGrrUserInterfaceTraits) GetServerLoadNavItemEnabled() bool {
	if m != nil {
		return m.ServerLoadNavItemEnabled
	}
	return false
}

func (m *ApiGrrUserInterfaceTraits) GetManageBinariesNavItemEnabled() bool {
	if m != nil {
		return m.ManageBinariesNavItemEnabled
	}
	return false
}

func (m *ApiGrrUserInterfaceTraits) GetUploadBinaryActionEnabled() bool {
	if m != nil {
		return m.UploadBinaryActionEnabled
	}
	return false
}

func (m *ApiGrrUserInterfaceTraits) GetSettingsNavItemEnabled() bool {
	if m != nil {
		return m.SettingsNavItemEnabled
	}
	return false
}

func (m *ApiGrrUserInterfaceTraits) GetArtifactManagerNavItemEnabled() bool {
	if m != nil {
		return m.ArtifactManagerNavItemEnabled
	}
	return false
}

func (m *ApiGrrUserInterfaceTraits) GetUploadArtifactActionEnabled() bool {
	if m != nil {
		return m.UploadArtifactActionEnabled
	}
	return false
}

func (m *ApiGrrUserInterfaceTraits) GetSearchClientsActionEnabled() bool {
	if m != nil {
		return m.SearchClientsActionEnabled
	}
	return false
}

func (m *ApiGrrUserInterfaceTraits) GetBrowseVirtualFileSystemNavItemEnabled() bool {
	if m != nil {
		return m.BrowseVirtualFileSystemNavItemEnabled
	}
	return false
}

func (m *ApiGrrUserInterfaceTraits) GetStartClientFlowNavItemEnabled() bool {
	if m != nil {
		return m.StartClientFlowNavItemEnabled
	}
	return false
}

func (m *ApiGrrUserInterfaceTraits) GetManageClientFlowsNavItemEnabled() bool {
	if m != nil {
		return m.ManageClientFlowsNavItemEnabled
	}
	return false
}

func (m *ApiGrrUserInterfaceTraits) GetModifyClientLabelsActionEnabled() bool {
	if m != nil {
		return m.ModifyClientLabelsActionEnabled
	}
	return false
}

type ApiGrrUser struct {
	Username             string                     `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Settings             *GUISettings               `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	InterfaceTraits      *ApiGrrUserInterfaceTraits `protobuf:"bytes,3,opt,name=interface_traits,json=interfaceTraits,proto3" json:"interface_traits,omitempty"`
	UserType             ApiGrrUser_UserType        `protobuf:"varint,4,opt,name=user_type,json=userType,proto3,enum=proto.ApiGrrUser_UserType" json:"user_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ApiGrrUser) Reset()         { *m = ApiGrrUser{} }
func (m *ApiGrrUser) String() string { return proto.CompactTextString(m) }
func (*ApiGrrUser) ProtoMessage()    {}
func (*ApiGrrUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_412e68c3e8d354ef, []int{8}
}
func (m *ApiGrrUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApiGrrUser.Unmarshal(m, b)
}
func (m *ApiGrrUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApiGrrUser.Marshal(b, m, deterministic)
}
func (dst *ApiGrrUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiGrrUser.Merge(dst, src)
}
func (m *ApiGrrUser) XXX_Size() int {
	return xxx_messageInfo_ApiGrrUser.Size(m)
}
func (m *ApiGrrUser) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiGrrUser.DiscardUnknown(m)
}

var xxx_messageInfo_ApiGrrUser proto.InternalMessageInfo

func (m *ApiGrrUser) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ApiGrrUser) GetSettings() *GUISettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *ApiGrrUser) GetInterfaceTraits() *ApiGrrUserInterfaceTraits {
	if m != nil {
		return m.InterfaceTraits
	}
	return nil
}

func (m *ApiGrrUser) GetUserType() ApiGrrUser_UserType {
	if m != nil {
		return m.UserType
	}
	return ApiGrrUser_USER_TYPE_NONE
}

type VFSRefreshDirectoryRequest struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	VfsPath              string   `protobuf:"bytes,2,opt,name=vfs_path,json=vfsPath,proto3" json:"vfs_path,omitempty"`
	Depth                uint64   `protobuf:"varint,3,opt,name=depth,proto3" json:"depth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VFSRefreshDirectoryRequest) Reset()         { *m = VFSRefreshDirectoryRequest{} }
func (m *VFSRefreshDirectoryRequest) String() string { return proto.CompactTextString(m) }
func (*VFSRefreshDirectoryRequest) ProtoMessage()    {}
func (*VFSRefreshDirectoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_412e68c3e8d354ef, []int{9}
}
func (m *VFSRefreshDirectoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VFSRefreshDirectoryRequest.Unmarshal(m, b)
}
func (m *VFSRefreshDirectoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VFSRefreshDirectoryRequest.Marshal(b, m, deterministic)
}
func (dst *VFSRefreshDirectoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VFSRefreshDirectoryRequest.Merge(dst, src)
}
func (m *VFSRefreshDirectoryRequest) XXX_Size() int {
	return xxx_messageInfo_VFSRefreshDirectoryRequest.Size(m)
}
func (m *VFSRefreshDirectoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VFSRefreshDirectoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VFSRefreshDirectoryRequest proto.InternalMessageInfo

func (m *VFSRefreshDirectoryRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *VFSRefreshDirectoryRequest) GetVfsPath() string {
	if m != nil {
		return m.VfsPath
	}
	return ""
}

func (m *VFSRefreshDirectoryRequest) GetDepth() uint64 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func init() {
	proto.RegisterType((*StartFlowResponse)(nil), "proto.StartFlowResponse")
	proto.RegisterType((*FieldDescriptor)(nil), "proto.FieldDescriptor")
	proto.RegisterType((*TypeDescriptor)(nil), "proto.TypeDescriptor")
	proto.RegisterType((*Types)(nil), "proto.Types")
	proto.RegisterType((*Approval)(nil), "proto.Approval")
	proto.RegisterType((*ApprovalList)(nil), "proto.ApprovalList")
	proto.RegisterType((*GUISettings)(nil), "proto.GUISettings")
	proto.RegisterType((*ApiGrrUserInterfaceTraits)(nil), "proto.ApiGrrUserInterfaceTraits")
	proto.RegisterType((*ApiGrrUser)(nil), "proto.ApiGrrUser")
	proto.RegisterType((*VFSRefreshDirectoryRequest)(nil), "proto.VFSRefreshDirectoryRequest")
	proto.RegisterEnum("proto.GUISettings_UIMode", GUISettings_UIMode_name, GUISettings_UIMode_value)
	proto.RegisterEnum("proto.ApiGrrUser_UserType", ApiGrrUser_UserType_name, ApiGrrUser_UserType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// APIClient is the client API for API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIClient interface {
	LaunchFlow(ctx context.Context, in *proto1.FlowRunnerArgs, opts ...grpc.CallOption) (*StartFlowResponse, error)
	ListClients(ctx context.Context, in *SearchClientsRequest, opts ...grpc.CallOption) (*SearchClientsResponse, error)
	GetClient(ctx context.Context, in *GetClientRequest, opts ...grpc.CallOption) (*ApiClient, error)
	GetClientFlows(ctx context.Context, in *ApiFlowRequest, opts ...grpc.CallOption) (*ApiFlowResponse, error)
	GetClientApprovalForUser(ctx context.Context, in *GetClientRequest, opts ...grpc.CallOption) (*ApprovalList, error)
	GetUserUITraits(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ApiGrrUser, error)
	// VFS
	VFSListDirectory(ctx context.Context, in *proto1.VFSListRequest, opts ...grpc.CallOption) (*proto2.VQLResponse, error)
	VFSRefreshDirectory(ctx context.Context, in *VFSRefreshDirectoryRequest, opts ...grpc.CallOption) (*StartFlowResponse, error)
	// Flows
	GetFlowDetails(ctx context.Context, in *ApiFlowRequest, opts ...grpc.CallOption) (*ApiFlow, error)
	GetFlowRequests(ctx context.Context, in *ApiFlowRequest, opts ...grpc.CallOption) (*ApiFlowRequestDetails, error)
	GetFlowResults(ctx context.Context, in *ApiFlowRequest, opts ...grpc.CallOption) (*ApiFlowResultDetails, error)
	GetFlowLogs(ctx context.Context, in *ApiFlowRequest, opts ...grpc.CallOption) (*ApiFlowLogDetails, error)
	GetFlowDescriptors(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*FlowDescriptors, error)
	DescribeTypes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Types, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) LaunchFlow(ctx context.Context, in *proto1.FlowRunnerArgs, opts ...grpc.CallOption) (*StartFlowResponse, error) {
	out := new(StartFlowResponse)
	err := c.cc.Invoke(ctx, "/proto.API/LaunchFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) ListClients(ctx context.Context, in *SearchClientsRequest, opts ...grpc.CallOption) (*SearchClientsResponse, error) {
	out := new(SearchClientsResponse)
	err := c.cc.Invoke(ctx, "/proto.API/ListClients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetClient(ctx context.Context, in *GetClientRequest, opts ...grpc.CallOption) (*ApiClient, error) {
	out := new(ApiClient)
	err := c.cc.Invoke(ctx, "/proto.API/GetClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetClientFlows(ctx context.Context, in *ApiFlowRequest, opts ...grpc.CallOption) (*ApiFlowResponse, error) {
	out := new(ApiFlowResponse)
	err := c.cc.Invoke(ctx, "/proto.API/GetClientFlows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetClientApprovalForUser(ctx context.Context, in *GetClientRequest, opts ...grpc.CallOption) (*ApprovalList, error) {
	out := new(ApprovalList)
	err := c.cc.Invoke(ctx, "/proto.API/GetClientApprovalForUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetUserUITraits(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ApiGrrUser, error) {
	out := new(ApiGrrUser)
	err := c.cc.Invoke(ctx, "/proto.API/GetUserUITraits", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) VFSListDirectory(ctx context.Context, in *proto1.VFSListRequest, opts ...grpc.CallOption) (*proto2.VQLResponse, error) {
	out := new(proto2.VQLResponse)
	err := c.cc.Invoke(ctx, "/proto.API/VFSListDirectory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) VFSRefreshDirectory(ctx context.Context, in *VFSRefreshDirectoryRequest, opts ...grpc.CallOption) (*StartFlowResponse, error) {
	out := new(StartFlowResponse)
	err := c.cc.Invoke(ctx, "/proto.API/VFSRefreshDirectory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetFlowDetails(ctx context.Context, in *ApiFlowRequest, opts ...grpc.CallOption) (*ApiFlow, error) {
	out := new(ApiFlow)
	err := c.cc.Invoke(ctx, "/proto.API/GetFlowDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetFlowRequests(ctx context.Context, in *ApiFlowRequest, opts ...grpc.CallOption) (*ApiFlowRequestDetails, error) {
	out := new(ApiFlowRequestDetails)
	err := c.cc.Invoke(ctx, "/proto.API/GetFlowRequests", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetFlowResults(ctx context.Context, in *ApiFlowRequest, opts ...grpc.CallOption) (*ApiFlowResultDetails, error) {
	out := new(ApiFlowResultDetails)
	err := c.cc.Invoke(ctx, "/proto.API/GetFlowResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetFlowLogs(ctx context.Context, in *ApiFlowRequest, opts ...grpc.CallOption) (*ApiFlowLogDetails, error) {
	out := new(ApiFlowLogDetails)
	err := c.cc.Invoke(ctx, "/proto.API/GetFlowLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetFlowDescriptors(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*FlowDescriptors, error) {
	out := new(FlowDescriptors)
	err := c.cc.Invoke(ctx, "/proto.API/GetFlowDescriptors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) DescribeTypes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Types, error) {
	out := new(Types)
	err := c.cc.Invoke(ctx, "/proto.API/DescribeTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APIServer is the server API for API service.
type APIServer interface {
	LaunchFlow(context.Context, *proto1.FlowRunnerArgs) (*StartFlowResponse, error)
	ListClients(context.Context, *SearchClientsRequest) (*SearchClientsResponse, error)
	GetClient(context.Context, *GetClientRequest) (*ApiClient, error)
	GetClientFlows(context.Context, *ApiFlowRequest) (*ApiFlowResponse, error)
	GetClientApprovalForUser(context.Context, *GetClientRequest) (*ApprovalList, error)
	GetUserUITraits(context.Context, *empty.Empty) (*ApiGrrUser, error)
	// VFS
	VFSListDirectory(context.Context, *proto1.VFSListRequest) (*proto2.VQLResponse, error)
	VFSRefreshDirectory(context.Context, *VFSRefreshDirectoryRequest) (*StartFlowResponse, error)
	// Flows
	GetFlowDetails(context.Context, *ApiFlowRequest) (*ApiFlow, error)
	GetFlowRequests(context.Context, *ApiFlowRequest) (*ApiFlowRequestDetails, error)
	GetFlowResults(context.Context, *ApiFlowRequest) (*ApiFlowResultDetails, error)
	GetFlowLogs(context.Context, *ApiFlowRequest) (*ApiFlowLogDetails, error)
	GetFlowDescriptors(context.Context, *empty.Empty) (*FlowDescriptors, error)
	DescribeTypes(context.Context, *empty.Empty) (*Types, error)
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_LaunchFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto1.FlowRunnerArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).LaunchFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/LaunchFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).LaunchFlow(ctx, req.(*proto1.FlowRunnerArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_ListClients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchClientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).ListClients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/ListClients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).ListClients(ctx, req.(*SearchClientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/GetClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetClient(ctx, req.(*GetClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetClientFlows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetClientFlows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/GetClientFlows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetClientFlows(ctx, req.(*ApiFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetClientApprovalForUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetClientApprovalForUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/GetClientApprovalForUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetClientApprovalForUser(ctx, req.(*GetClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetUserUITraits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetUserUITraits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/GetUserUITraits",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetUserUITraits(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_VFSListDirectory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto1.VFSListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).VFSListDirectory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/VFSListDirectory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).VFSListDirectory(ctx, req.(*proto1.VFSListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_VFSRefreshDirectory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VFSRefreshDirectoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).VFSRefreshDirectory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/VFSRefreshDirectory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).VFSRefreshDirectory(ctx, req.(*VFSRefreshDirectoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetFlowDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetFlowDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/GetFlowDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetFlowDetails(ctx, req.(*ApiFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetFlowRequests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetFlowRequests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/GetFlowRequests",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetFlowRequests(ctx, req.(*ApiFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetFlowResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetFlowResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/GetFlowResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetFlowResults(ctx, req.(*ApiFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetFlowLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetFlowLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/GetFlowLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetFlowLogs(ctx, req.(*ApiFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetFlowDescriptors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetFlowDescriptors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/GetFlowDescriptors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetFlowDescriptors(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_DescribeTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).DescribeTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/DescribeTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).DescribeTypes(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LaunchFlow",
			Handler:    _API_LaunchFlow_Handler,
		},
		{
			MethodName: "ListClients",
			Handler:    _API_ListClients_Handler,
		},
		{
			MethodName: "GetClient",
			Handler:    _API_GetClient_Handler,
		},
		{
			MethodName: "GetClientFlows",
			Handler:    _API_GetClientFlows_Handler,
		},
		{
			MethodName: "GetClientApprovalForUser",
			Handler:    _API_GetClientApprovalForUser_Handler,
		},
		{
			MethodName: "GetUserUITraits",
			Handler:    _API_GetUserUITraits_Handler,
		},
		{
			MethodName: "VFSListDirectory",
			Handler:    _API_VFSListDirectory_Handler,
		},
		{
			MethodName: "VFSRefreshDirectory",
			Handler:    _API_VFSRefreshDirectory_Handler,
		},
		{
			MethodName: "GetFlowDetails",
			Handler:    _API_GetFlowDetails_Handler,
		},
		{
			MethodName: "GetFlowRequests",
			Handler:    _API_GetFlowRequests_Handler,
		},
		{
			MethodName: "GetFlowResults",
			Handler:    _API_GetFlowResults_Handler,
		},
		{
			MethodName: "GetFlowLogs",
			Handler:    _API_GetFlowLogs_Handler,
		},
		{
			MethodName: "GetFlowDescriptors",
			Handler:    _API_GetFlowDescriptors_Handler,
		},
		{
			MethodName: "DescribeTypes",
			Handler:    _API_DescribeTypes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_api_412e68c3e8d354ef) }

var fileDescriptor_api_412e68c3e8d354ef = []byte{
	// 1869 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x58, 0xcf, 0x73, 0xdb, 0xc6,
	0xf5, 0x0f, 0xf5, 0x93, 0x7a, 0x94, 0x25, 0x7a, 0xfd, 0xb5, 0x44, 0x51, 0x92, 0x0d, 0x23, 0xf2,
	0xd7, 0xaa, 0xa3, 0x01, 0x1b, 0x35, 0x89, 0x13, 0xa7, 0x69, 0x4a, 0x8a, 0xa2, 0xcc, 0x46, 0x56,
	0x5d, 0x50, 0xd2, 0x24, 0x99, 0x76, 0x30, 0x4b, 0x60, 0x49, 0xa2, 0x01, 0x01, 0x7a, 0x77, 0x49,
	0x85, 0xf5, 0xf8, 0x92, 0x99, 0xf6, 0xd8, 0x4b, 0x7b, 0xe9, 0x5f, 0xd1, 0x43, 0xef, 0x3d, 0xf5,
	0x3f, 0xe8, 0xad, 0x87, 0x1e, 0xda, 0xfe, 0x19, 0x39, 0x74, 0x76, 0x17, 0x0b, 0x81, 0xa0, 0x98,
	0xc6, 0x17, 0x09, 0x78, 0xfb, 0x79, 0x9f, 0xcf, 0x7b, 0x6f, 0x77, 0xdf, 0x2e, 0x08, 0x2b, 0x78,
	0xe0, 0x5b, 0x03, 0x1a, 0xf1, 0x08, 0x2d, 0xca, 0x7f, 0xe5, 0x4f, 0xae, 0xae, 0xae, 0xac, 0x11,
	0x09, 0x22, 0xd7, 0xf7, 0xc8, 0xd7, 0x96, 0x1b, 0xf5, 0x2b, 0xdd, 0x28, 0xc0, 0x61, 0xb7, 0xa2,
	0x8c, 0x14, 0x0f, 0x78, 0x44, 0x2b, 0x9d, 0x20, 0xba, 0x62, 0x15, 0xe9, 0xa2, 0x9e, 0x15, 0x4b,
	0xf9, 0xe3, 0x37, 0x77, 0x1f, 0x75, 0xb4, 0xf3, 0xd3, 0xef, 0xe7, 0xac, 0xdc, 0x18, 0xe9, 0xe3,
	0x90, 0xfb, 0xae, 0xf5, 0x46, 0x71, 0x63, 0x97, 0xfb, 0x51, 0x98, 0x48, 0xbf, 0x0c, 0x62, 0xf7,
	0x9d, 0x6e, 0x14, 0x75, 0x03, 0x52, 0xc1, 0x03, 0xbf, 0x82, 0xc3, 0x30, 0xe2, 0x58, 0xe2, 0xe2,
	0xd1, 0xed, 0x78, 0x54, 0xbe, 0xb5, 0x87, 0x9d, 0x0a, 0xe9, 0x0f, 0xf8, 0x38, 0x1e, 0xbc, 0xe5,
	0x06, 0x3e, 0x09, 0xb9, 0xc6, 0x16, 0x52, 0xe5, 0x30, 0x3d, 0xb8, 0xdd, 0xe2, 0x98, 0xf2, 0x46,
	0x10, 0x5d, 0xd9, 0x84, 0x0d, 0xa2, 0x90, 0x11, 0xb4, 0x09, 0xcb, 0x02, 0xe3, 0xf8, 0x5e, 0x29,
	0x67, 0xe4, 0xf6, 0x57, 0xec, 0x25, 0xf1, 0xda, 0xf4, 0xd0, 0x07, 0x50, 0xa0, 0xc3, 0x30, 0x24,
	0xd4, 0xc1, 0xb4, 0xcb, 0x4a, 0x73, 0x46, 0x6e, 0xbf, 0x70, 0x78, 0x57, 0x51, 0x59, 0x92, 0x42,
	0x8e, 0x56, 0x69, 0x97, 0xd9, 0x40, 0x93, 0x67, 0xf3, 0xaf, 0x39, 0x58, 0x6f, 0xf8, 0x24, 0xf0,
	0xea, 0x84, 0xb9, 0xd4, 0x17, 0x89, 0xa2, 0xb7, 0xe1, 0x56, 0x87, 0xfa, 0x24, 0xf4, 0x82, 0xb1,
	0x13, 0xe2, 0x3e, 0x89, 0xa5, 0x56, 0xb5, 0xf1, 0x0c, 0xf7, 0x09, 0x42, 0xb0, 0x20, 0xc7, 0xe6,
	0xe4, 0x98, 0x7c, 0x46, 0x65, 0xc8, 0x53, 0x32, 0x20, 0x98, 0x13, 0xaf, 0x34, 0x6f, 0xe4, 0xf6,
	0xf3, 0x76, 0xf2, 0x2e, 0xf0, 0x7c, 0x3c, 0x20, 0xa5, 0x05, 0x85, 0x17, 0xcf, 0xa8, 0x08, 0xf3,
	0x5e, 0xe4, 0x96, 0x16, 0xa5, 0x49, 0x3c, 0xa2, 0x0d, 0x58, 0x0a, 0x70, 0x9b, 0x04, 0xac, 0xb4,
	0x64, 0xcc, 0x8b, 0xf4, 0xd4, 0x1b, 0x2a, 0xc1, 0xb2, 0x47, 0x3a, 0x78, 0x18, 0xf0, 0xd2, 0xb2,
	0x44, 0xeb, 0x57, 0xf3, 0x37, 0xb0, 0x76, 0x3e, 0x1e, 0x90, 0x54, 0xf8, 0x31, 0x6b, 0xee, 0x9a,
	0xd5, 0x82, 0xa5, 0x8e, 0xc8, 0x51, 0xd4, 0x65, 0x7e, 0xbf, 0x70, 0xb8, 0xa1, 0xeb, 0x32, 0x99,
	0xb8, 0x1d, 0xa3, 0x92, 0xdc, 0xe6, 0x53, 0xb9, 0x21, 0x58, 0xf8, 0xca, 0x0f, 0x3d, 0x1d, 0xbf,
	0x78, 0x36, 0xdf, 0x83, 0x45, 0xa1, 0xcd, 0xd0, 0x3b, 0xb0, 0xe8, 0x73, 0xd2, 0x67, 0xa5, 0x9c,
	0xe4, 0xd7, 0x75, 0x9f, 0x0c, 0xcc, 0x56, 0x18, 0xd3, 0x84, 0x7c, 0x75, 0x30, 0xa0, 0xd1, 0x08,
	0x07, 0x22, 0x5f, 0x4a, 0x30, 0x8b, 0x42, 0x3d, 0x9d, 0xea, 0xcd, 0x7c, 0x1f, 0x56, 0x35, 0xe6,
	0xd4, 0x67, 0x1c, 0x3d, 0x9c, 0x14, 0x58, 0x8f, 0x05, 0x34, 0x46, 0x53, 0xff, 0x7e, 0x0e, 0x0a,
	0x27, 0x17, 0xcd, 0x16, 0xe1, 0xdc, 0x0f, 0xbb, 0x0c, 0x7d, 0x06, 0x0b, 0xfd, 0xc8, 0x53, 0x13,
	0xb8, 0x76, 0xb8, 0x15, 0x7b, 0xa5, 0x10, 0xd6, 0x45, 0xf3, 0x79, 0xe4, 0x91, 0xda, 0xce, 0xbf,
	0xbe, 0xfd, 0xf7, 0xdf, 0x72, 0x1b, 0xe8, 0xff, 0x2e, 0x18, 0xa1, 0x86, 0x1f, 0x72, 0x42, 0x3b,
	0xd8, 0x25, 0x86, 0xf0, 0xb6, 0x6c, 0x49, 0x82, 0x3e, 0x87, 0x82, 0x8b, 0x43, 0x4c, 0xc7, 0x8e,
	0xe4, 0x94, 0x13, 0x5c, 0x7b, 0x22, 0x1d, 0xdf, 0x45, 0x95, 0x66, 0xc7, 0xe0, 0x74, 0x48, 0x0e,
	0x0c, 0xd6, 0x8b, 0xae, 0x8c, 0x0e, 0xc1, 0x7c, 0x48, 0x09, 0x33, 0x78, 0x0f, 0x73, 0x03, 0x53,
	0x62, 0xb4, 0x89, 0x1f, 0x76, 0x0d, 0x49, 0xe0, 0x13, 0xcf, 0xb2, 0x41, 0x71, 0x09, 0x75, 0xf3,
	0x00, 0x96, 0x54, 0x1c, 0x68, 0x05, 0x16, 0x6b, 0xd5, 0x56, 0xf3, 0xa8, 0xf8, 0x16, 0x5a, 0x85,
	0x7c, 0xb5, 0x7e, 0x59, 0x3d, 0x3b, 0x3a, 0xae, 0x17, 0x73, 0x62, 0xa0, 0x7e, 0x5c, 0xbb, 0x38,
	0x29, 0xce, 0x3d, 0x7d, 0xfc, 0x0f, 0x21, 0xb9, 0x07, 0xa6, 0x8c, 0xf5, 0xe4, 0xa2, 0x69, 0xb0,
	0x38, 0x1b, 0x03, 0x87, 0x9e, 0x31, 0xa0, 0xa4, 0x43, 0x28, 0x09, 0x5d, 0xc2, 0x2c, 0xf3, 0xdb,
	0x3c, 0x6c, 0x55, 0x07, 0xfe, 0x09, 0xa5, 0x02, 0xdc, 0xd4, 0x79, 0x9d, 0x53, 0xec, 0x73, 0x86,
	0x9e, 0x42, 0xd9, 0xa5, 0x51, 0xe8, 0xfc, 0x3a, 0x6a, 0x33, 0x27, 0xc4, 0x23, 0x47, 0x54, 0xd1,
	0x21, 0x21, 0x6e, 0x07, 0x44, 0x6d, 0xb0, 0xbc, 0xbd, 0x21, 0x10, 0x3f, 0x8b, 0xda, 0xec, 0x0c,
	0x8f, 0x9a, 0x9c, 0xf4, 0x8f, 0xd5, 0x28, 0xaa, 0xc1, 0x3d, 0x97, 0x8a, 0xa5, 0xed, 0x68, 0x0a,
	0x47, 0x35, 0x88, 0xc4, 0x7f, 0x4e, 0xfa, 0x97, 0x15, 0xea, 0x48, 0xb1, 0x54, 0x25, 0x44, 0x73,
	0xfc, 0x14, 0x76, 0x7b, 0xc3, 0x90, 0x3b, 0x7d, 0x1c, 0xe2, 0x2e, 0xa1, 0xd3, 0x21, 0xa8, 0x4d,
	0xb4, 0x25, 0x40, 0xcf, 0x15, 0x26, 0x13, 0xc5, 0xc7, 0x10, 0xf3, 0x3b, 0x92, 0x28, 0x13, 0xc1,
	0x82, 0x74, 0xdf, 0x54, 0x88, 0x67, 0xc3, 0x90, 0x4f, 0xca, 0x37, 0x40, 0x4e, 0x96, 0xc3, 0x44,
	0xc7, 0x62, 0xdc, 0x77, 0x6f, 0x28, 0xc2, 0xa2, 0xa4, 0xd8, 0x11, 0xb8, 0x56, 0x02, 0xcb, 0x04,
	0xf1, 0x13, 0xd8, 0x61, 0x84, 0x8e, 0x08, 0x75, 0x82, 0x08, 0x7b, 0xd3, 0x1c, 0xcb, 0x92, 0xa3,
	0xa4, 0x30, 0xa7, 0x11, 0xf6, 0x32, 0xfe, 0x0d, 0x30, 0x54, 0x05, 0x9c, 0xb6, 0x2f, 0x97, 0xc7,
	0x0d, 0x71, 0xac, 0xa8, 0x38, 0x14, 0xae, 0x16, 0xc3, 0x32, 0x3c, 0x9f, 0xc2, 0xce, 0x70, 0x20,
	0x43, 0x90, 0x3c, 0xe3, 0x6c, 0x39, 0x40, 0x55, 0x53, 0x61, 0x24, 0xc7, 0x78, 0xb2, 0x20, 0x1f,
	0xc1, 0x96, 0x5e, 0x4a, 0xd3, 0x11, 0x14, 0xd4, 0x72, 0xd0, 0x80, 0x8c, 0xf6, 0x33, 0x78, 0x80,
	0x29, 0xf7, 0x3b, 0xd8, 0xfd, 0x8e, 0xe9, 0x5c, 0x95, 0x14, 0xbb, 0x1a, 0x78, 0xf3, 0x94, 0x1e,
	0xc1, 0xbd, 0x38, 0x8b, 0x84, 0x30, 0x93, 0xc7, 0x2d, 0x49, 0xb3, 0xad, 0x50, 0xd5, 0x18, 0x34,
	0x99, 0x49, 0x15, 0x76, 0x19, 0xc1, 0xd4, 0xed, 0x39, 0xf1, 0x09, 0x93, 0xe5, 0x58, 0x53, 0x8b,
	0x53, 0x81, 0x8e, 0x14, 0x66, 0x92, 0xe2, 0x4b, 0x78, 0xa7, 0x4d, 0xa3, 0x2b, 0x46, 0x9c, 0x91,
	0x4f, 0xf9, 0x10, 0x07, 0x4e, 0xc7, 0x0f, 0x88, 0xc3, 0xc6, 0x4c, 0xa4, 0x34, 0x95, 0xdb, 0xba,
	0x24, 0x7c, 0xa8, 0x5c, 0x2e, 0x95, 0x47, 0xc3, 0x0f, 0x48, 0x4b, 0xe2, 0x33, 0x39, 0x36, 0xc1,
	0x64, 0xe2, 0x6c, 0x8b, 0xa3, 0x73, 0xe4, 0x99, 0x36, 0x45, 0x59, 0x54, 0xe5, 0x92, 0x48, 0x15,
	0xa2, 0x38, 0xc8, 0x32, 0x54, 0xcf, 0x61, 0x2f, 0x5e, 0x3c, 0x29, 0xae, 0x1b, 0xa6, 0xef, 0xb6,
	0x24, 0xbb, 0xaf, 0xb0, 0xd7, 0x6c, 0xd9, 0x79, 0x3c, 0x85, 0xb7, 0xfb, 0x91, 0xe7, 0x77, 0xc6,
	0x9a, 0x4e, 0x1d, 0x40, 0xd9, 0xf2, 0xa1, 0x98, 0x4d, 0x42, 0x15, 0xdb, 0xa9, 0x04, 0x4e, 0xd4,
	0xd0, 0xfc, 0xf3, 0x3c, 0xc0, 0x75, 0xfb, 0x41, 0x1f, 0x41, 0x7e, 0xc8, 0x08, 0xbd, 0x3e, 0x53,
	0x6b, 0xbb, 0xb2, 0x7d, 0x6e, 0xa2, 0xbb, 0xe7, 0x3d, 0x62, 0x08, 0xbb, 0x11, 0x75, 0x0c, 0xde,
	0x23, 0x86, 0xc0, 0x59, 0x76, 0x02, 0x47, 0x4d, 0xc8, 0xeb, 0x95, 0x17, 0x1f, 0xee, 0x68, 0xba,
	0x9b, 0xd7, 0xb6, 0x24, 0xdd, 0x1d, 0x74, 0x5b, 0xb6, 0xc6, 0x54, 0x67, 0xb4, 0xec, 0xc4, 0x1d,
	0xfd, 0x31, 0x07, 0xc5, 0xa4, 0xc3, 0x3b, 0x5c, 0xb6, 0x42, 0xd9, 0x69, 0x0a, 0x87, 0x46, 0x72,
	0xae, 0xcc, 0x68, 0x99, 0xb5, 0x13, 0xa9, 0x50, 0x45, 0x9f, 0x8a, 0xc1, 0x47, 0x2c, 0x75, 0x54,
	0x28, 0x22, 0x63, 0xff, 0x4a, 0x74, 0x7c, 0xde, 0x23, 0x63, 0xd1, 0xec, 0x65, 0x47, 0x76, 0x71,
	0xf8, 0x88, 0x1b, 0x5e, 0x64, 0xf8, 0xa1, 0xcc, 0xed, 0xa2, 0xf9, 0x03, 0xcb, 0x5e, 0xf7, 0x33,
	0xcd, 0xf8, 0x09, 0xac, 0x88, 0x6c, 0x9d, 0xe4, 0x96, 0xb0, 0x76, 0x58, 0x9e, 0x0a, 0xc7, 0x12,
	0x7f, 0xc4, 0xb1, 0xaa, 0x4a, 0x23, 0x9e, 0xcc, 0xcf, 0x20, 0xaf, 0xad, 0x08, 0xc1, 0xda, 0x45,
	0xeb, 0xd8, 0x76, 0xce, 0xbf, 0x78, 0x71, 0xec, 0x9c, 0xfd, 0xfc, 0xec, 0xb8, 0xf8, 0x16, 0xda,
	0x00, 0x74, 0x6d, 0x6b, 0x9d, 0x57, 0xcf, 0xea, 0x55, 0x5b, 0x1c, 0x29, 0x77, 0x60, 0xfd, 0xda,
	0x5e, 0xad, 0x3f, 0x6f, 0x9e, 0x15, 0xe7, 0xcc, 0x7f, 0xe6, 0xa0, 0x7c, 0xd9, 0x68, 0xd9, 0xa4,
	0x43, 0x09, 0xeb, 0xd5, 0x7d, 0x4a, 0x5c, 0x1e, 0xd1, 0xb1, 0x4d, 0x5e, 0x0e, 0x09, 0xe3, 0xa8,
	0x06, 0x2b, 0xf1, 0xba, 0xd0, 0x37, 0xb0, 0xda, 0x43, 0x59, 0x91, 0xfb, 0xb0, 0x64, 0xd7, 0x1b,
	0x17, 0xf6, 0x19, 0x42, 0x62, 0x2a, 0x15, 0xc8, 0xe0, 0x91, 0x11, 0xf8, 0x8c, 0x97, 0x73, 0x73,
	0x76, 0x5e, 0x99, 0x9a, 0xe2, 0xe4, 0xc8, 0x8f, 0x3a, 0xcc, 0x19, 0x60, 0xde, 0x53, 0xb7, 0xa7,
	0xda, 0x23, 0x49, 0xf1, 0x00, 0xdd, 0x17, 0xae, 0x97, 0x8d, 0x96, 0xf1, 0x02, 0xf3, 0x9e, 0x76,
	0x36, 0xc4, 0xb6, 0x13, 0x85, 0x36, 0x2c, 0x7b, 0x79, 0xd4, 0x61, 0x62, 0x0c, 0x7d, 0x08, 0x8b,
	0x1e, 0x19, 0xf0, 0x9e, 0x9c, 0xb7, 0x85, 0x9a, 0x29, 0x09, 0x76, 0x50, 0xb9, 0x2e, 0x8c, 0x62,
	0x0d, 0x79, 0x3a, 0x72, 0x83, 0xaa, 0x54, 0x6c, 0xe5, 0x70, 0xf8, 0x97, 0x55, 0x98, 0xaf, 0xbe,
	0x68, 0xa2, 0x5f, 0x02, 0x9c, 0xe2, 0x61, 0xe8, 0xf6, 0xc4, 0x2e, 0x40, 0x37, 0xdf, 0x14, 0xcb,
	0xa5, 0xd8, 0x3c, 0x75, 0x11, 0x35, 0x77, 0xbf, 0xf9, 0xfb, 0x7f, 0xfe, 0x30, 0xb7, 0x69, 0x22,
	0x79, 0xed, 0x1d, 0xbd, 0x5b, 0xb9, 0x26, 0x7b, 0x9a, 0x7b, 0x8c, 0xba, 0x50, 0x10, 0xf7, 0x96,
	0xb8, 0xb1, 0xa0, 0x6d, 0xcd, 0x93, 0x6e, 0x37, 0x71, 0x4d, 0xcb, 0x3b, 0x37, 0x0f, 0x4e, 0x0a,
	0xa1, 0xbb, 0x5a, 0x68, 0x02, 0x86, 0xbe, 0x80, 0x95, 0x13, 0x12, 0xeb, 0xa0, 0x4d, 0xbd, 0x25,
	0xb4, 0x45, 0x4b, 0x14, 0xaf, 0x17, 0x92, 0x1a, 0x30, 0x1f, 0x48, 0xda, 0x6d, 0xb4, 0xa5, 0x69,
	0x13, 0x9f, 0xca, 0xab, 0x97, 0x43, 0x42, 0xc7, 0xaf, 0xd1, 0x9f, 0x72, 0xb0, 0x96, 0x58, 0x65,
	0xaf, 0x48, 0xca, 0x54, 0x1d, 0xf8, 0xaa, 0x1a, 0x8a, 0x7e, 0x23, 0x6b, 0x8e, 0x63, 0xff, 0x5c,
	0x8a, 0xd8, 0xc8, 0x9c, 0x12, 0x91, 0x74, 0x95, 0x57, 0xc9, 0x5a, 0x7a, 0xfd, 0xe5, 0x41, 0xed,
	0x31, 0x2c, 0x3c, 0x3b, 0xae, 0xd6, 0xbf, 0x0f, 0x1a, 0x85, 0x50, 0x4a, 0x46, 0xf5, 0x25, 0xb0,
	0x11, 0xa9, 0x2e, 0x33, 0xb3, 0x0a, 0x77, 0x32, 0xb7, 0x46, 0x31, 0x43, 0xe6, 0x9e, 0x8c, 0xf1,
	0x1e, 0xda, 0x49, 0xa9, 0x6a, 0x00, 0x4b, 0x6a, 0xf1, 0x2b, 0x58, 0x3f, 0x21, 0x5c, 0xd0, 0x5f,
	0x34, 0xe3, 0xfd, 0xba, 0x61, 0xa9, 0x2f, 0x1b, 0x4b, 0x7f, 0xd9, 0x58, 0xc7, 0xe2, 0xcb, 0xa6,
	0x7c, 0x7b, 0x6a, 0xd3, 0x9a, 0xf7, 0xa5, 0xc6, 0x16, 0xda, 0x4c, 0x69, 0x4c, 0x70, 0x7d, 0x05,
	0xc5, 0xcb, 0x46, 0x4b, 0xc4, 0x93, 0xec, 0xb8, 0xa4, 0xd6, 0xf1, 0x80, 0x4e, 0x42, 0xb7, 0xbd,
	0xcb, 0x5f, 0x9c, 0x26, 0x75, 0x3e, 0x90, 0xfc, 0xff, 0x8f, 0xf6, 0x34, 0x7f, 0x96, 0x6c, 0xa2,
	0x76, 0xbf, 0xcb, 0xc1, 0x9d, 0x1b, 0xb6, 0x38, 0x7a, 0x70, 0x2d, 0x38, 0x63, 0xfb, 0x7f, 0xc7,
	0x7e, 0x38, 0x94, 0x21, 0x1c, 0x98, 0x8f, 0x52, 0x21, 0x64, 0x59, 0xd2, 0x51, 0x88, 0x4d, 0xe2,
	0xca, 0xf5, 0x25, 0x68, 0xea, 0x84, 0x63, 0x3f, 0x98, 0xb9, 0xbe, 0xd6, 0x26, 0xcd, 0xe6, 0x63,
	0x29, 0xb6, 0x37, 0xb1, 0x52, 0x52, 0x34, 0x13, 0xd9, 0xfe, 0x36, 0x27, 0xa7, 0x2e, 0x45, 0x37,
	0x53, 0x66, 0xe7, 0x46, 0x73, 0x4c, 0x6a, 0x7e, 0x22, 0x45, 0x9f, 0xa0, 0xf7, 0xff, 0xb7, 0x68,
	0xe5, 0x55, 0xfc, 0x91, 0xfa, 0xba, 0x42, 0xb5, 0xe6, 0x37, 0xb9, 0x24, 0x5b, 0x9b, 0xb0, 0x61,
	0x30, 0x3b, 0x8c, 0xed, 0xa9, 0xdd, 0x34, 0x0c, 0x92, 0x28, 0x7e, 0x2c, 0xa3, 0xf8, 0x00, 0xbd,
	0xf7, 0x86, 0x51, 0x28, 0xc5, 0xaf, 0xa1, 0x10, 0xe3, 0x4f, 0xa3, 0xee, 0xcc, 0x00, 0x4a, 0x93,
	0xe6, 0xd3, 0xa8, 0xab, 0xd5, 0x3f, 0x94, 0xea, 0x87, 0xe8, 0x87, 0x6f, 0xa4, 0x1e, 0x44, 0x5d,
	0xd4, 0x05, 0x94, 0x60, 0xf5, 0x07, 0xe1, 0xec, 0x3d, 0xb4, 0x91, 0x6a, 0xc7, 0x29, 0xfc, 0x74,
	0xd7, 0x52, 0x3f, 0x86, 0x78, 0x29, 0xca, 0x73, 0xb8, 0xa5, 0x3c, 0xda, 0x44, 0x7d, 0x9b, 0xce,
	0xd2, 0x58, 0x4d, 0x7d, 0xa4, 0xb2, 0xe9, 0x36, 0x3b, 0x41, 0xd2, 0x5e, 0x92, 0xd8, 0x1f, 0xfd,
	0x37, 0x00, 0x00, 0xff, 0xff, 0x98, 0xec, 0xd0, 0x1d, 0xf5, 0x11, 0x00, 0x00,
}
