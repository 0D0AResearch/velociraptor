// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	proto1 "www.velocidex.com/golang/velociraptor/actions/proto"
	_ "www.velocidex.com/golang/velociraptor/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Information about Velociraptor. This is a psuedo config item - it
// will never be read from config files, but can be used in VQL
// queries. It will be written to config files as metadata about the
// version read from.
type Version struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Commit               string   `protobuf:"bytes,4,opt,name=commit,proto3" json:"commit,omitempty"`
	BuildTime            string   `protobuf:"bytes,5,opt,name=build_time,json=buildTime,proto3" json:"build_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Version) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Version) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Version) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func (m *Version) GetBuildTime() string {
	if m != nil {
		return m.BuildTime
	}
	return ""
}

// The client's state which are persisted in the writeback file.
type Writeback struct {
	PrivateKey             string   `protobuf:"bytes,7,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	HuntLastTimestamp      uint64   `protobuf:"varint,13,opt,name=hunt_last_timestamp,json=huntLastTimestamp,proto3" json:"hunt_last_timestamp,omitempty"`
	LastServerSerialNumber uint64   `protobuf:"varint,14,opt,name=last_server_serial_number,json=lastServerSerialNumber,proto3" json:"last_server_serial_number,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *Writeback) Reset()         { *m = Writeback{} }
func (m *Writeback) String() string { return proto.CompactTextString(m) }
func (*Writeback) ProtoMessage()    {}
func (*Writeback) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{1}
}

func (m *Writeback) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Writeback.Unmarshal(m, b)
}
func (m *Writeback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Writeback.Marshal(b, m, deterministic)
}
func (m *Writeback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Writeback.Merge(m, src)
}
func (m *Writeback) XXX_Size() int {
	return xxx_messageInfo_Writeback.Size(m)
}
func (m *Writeback) XXX_DiscardUnknown() {
	xxx_messageInfo_Writeback.DiscardUnknown(m)
}

var xxx_messageInfo_Writeback proto.InternalMessageInfo

func (m *Writeback) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *Writeback) GetHuntLastTimestamp() uint64 {
	if m != nil {
		return m.HuntLastTimestamp
	}
	return 0
}

func (m *Writeback) GetLastServerSerialNumber() uint64 {
	if m != nil {
		return m.LastServerSerialNumber
	}
	return 0
}

// Configuration for the windows installer.
type WindowsInstallerConfig struct {
	ServiceName          string   `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	InstallPath          string   `protobuf:"bytes,2,opt,name=install_path,json=installPath,proto3" json:"install_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WindowsInstallerConfig) Reset()         { *m = WindowsInstallerConfig{} }
func (m *WindowsInstallerConfig) String() string { return proto.CompactTextString(m) }
func (*WindowsInstallerConfig) ProtoMessage()    {}
func (*WindowsInstallerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{2}
}

func (m *WindowsInstallerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WindowsInstallerConfig.Unmarshal(m, b)
}
func (m *WindowsInstallerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WindowsInstallerConfig.Marshal(b, m, deterministic)
}
func (m *WindowsInstallerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WindowsInstallerConfig.Merge(m, src)
}
func (m *WindowsInstallerConfig) XXX_Size() int {
	return xxx_messageInfo_WindowsInstallerConfig.Size(m)
}
func (m *WindowsInstallerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_WindowsInstallerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_WindowsInstallerConfig proto.InternalMessageInfo

func (m *WindowsInstallerConfig) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *WindowsInstallerConfig) GetInstallPath() string {
	if m != nil {
		return m.InstallPath
	}
	return ""
}

type DarwinInstallerConfig struct {
	ServiceName          string   `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	InstallPath          string   `protobuf:"bytes,2,opt,name=install_path,json=installPath,proto3" json:"install_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DarwinInstallerConfig) Reset()         { *m = DarwinInstallerConfig{} }
func (m *DarwinInstallerConfig) String() string { return proto.CompactTextString(m) }
func (*DarwinInstallerConfig) ProtoMessage()    {}
func (*DarwinInstallerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{3}
}

func (m *DarwinInstallerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DarwinInstallerConfig.Unmarshal(m, b)
}
func (m *DarwinInstallerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DarwinInstallerConfig.Marshal(b, m, deterministic)
}
func (m *DarwinInstallerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DarwinInstallerConfig.Merge(m, src)
}
func (m *DarwinInstallerConfig) XXX_Size() int {
	return xxx_messageInfo_DarwinInstallerConfig.Size(m)
}
func (m *DarwinInstallerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DarwinInstallerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DarwinInstallerConfig proto.InternalMessageInfo

func (m *DarwinInstallerConfig) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *DarwinInstallerConfig) GetInstallPath() string {
	if m != nil {
		return m.InstallPath
	}
	return ""
}

type ClientConfig struct {
	Labels               []string                `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty"`
	ServerUrls           []string                `protobuf:"bytes,8,rep,name=server_urls,json=serverUrls,proto3" json:"server_urls,omitempty"`
	CaCertificate        string                  `protobuf:"bytes,11,opt,name=ca_certificate,json=caCertificate,proto3" json:"ca_certificate,omitempty"`
	Nonce                string                  `protobuf:"bytes,12,opt,name=nonce,proto3" json:"nonce,omitempty"`
	WritebackDarwin      string                  `protobuf:"bytes,20,opt,name=writeback_darwin,json=writebackDarwin,proto3" json:"writeback_darwin,omitempty"`
	WritebackLinux       string                  `protobuf:"bytes,9,opt,name=writeback_linux,json=writebackLinux,proto3" json:"writeback_linux,omitempty"`
	WritebackWindows     string                  `protobuf:"bytes,10,opt,name=writeback_windows,json=writebackWindows,proto3" json:"writeback_windows,omitempty"`
	MaxPoll              uint64                  `protobuf:"varint,15,opt,name=max_poll,json=maxPoll,proto3" json:"max_poll,omitempty"`
	WindowsInstaller     *WindowsInstallerConfig `protobuf:"bytes,16,opt,name=windows_installer,json=windowsInstaller,proto3" json:"windows_installer,omitempty"`
	DarwinInstaller      *DarwinInstallerConfig  `protobuf:"bytes,21,opt,name=darwin_installer,json=darwinInstaller,proto3" json:"darwin_installer,omitempty"`
	PreventExecve        bool                    `protobuf:"varint,17,opt,name=prevent_execve,json=preventExecve,proto3" json:"prevent_execve,omitempty"`
	Version              *Version                `protobuf:"bytes,18,opt,name=version,proto3" json:"version,omitempty"`
	DefaultMaxWait       uint64                  `protobuf:"varint,19,opt,name=default_max_wait,json=defaultMaxWait,proto3" json:"default_max_wait,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ClientConfig) Reset()         { *m = ClientConfig{} }
func (m *ClientConfig) String() string { return proto.CompactTextString(m) }
func (*ClientConfig) ProtoMessage()    {}
func (*ClientConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{4}
}

func (m *ClientConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientConfig.Unmarshal(m, b)
}
func (m *ClientConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientConfig.Marshal(b, m, deterministic)
}
func (m *ClientConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientConfig.Merge(m, src)
}
func (m *ClientConfig) XXX_Size() int {
	return xxx_messageInfo_ClientConfig.Size(m)
}
func (m *ClientConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ClientConfig proto.InternalMessageInfo

func (m *ClientConfig) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ClientConfig) GetServerUrls() []string {
	if m != nil {
		return m.ServerUrls
	}
	return nil
}

func (m *ClientConfig) GetCaCertificate() string {
	if m != nil {
		return m.CaCertificate
	}
	return ""
}

func (m *ClientConfig) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *ClientConfig) GetWritebackDarwin() string {
	if m != nil {
		return m.WritebackDarwin
	}
	return ""
}

func (m *ClientConfig) GetWritebackLinux() string {
	if m != nil {
		return m.WritebackLinux
	}
	return ""
}

func (m *ClientConfig) GetWritebackWindows() string {
	if m != nil {
		return m.WritebackWindows
	}
	return ""
}

func (m *ClientConfig) GetMaxPoll() uint64 {
	if m != nil {
		return m.MaxPoll
	}
	return 0
}

func (m *ClientConfig) GetWindowsInstaller() *WindowsInstallerConfig {
	if m != nil {
		return m.WindowsInstaller
	}
	return nil
}

func (m *ClientConfig) GetDarwinInstaller() *DarwinInstallerConfig {
	if m != nil {
		return m.DarwinInstaller
	}
	return nil
}

func (m *ClientConfig) GetPreventExecve() bool {
	if m != nil {
		return m.PreventExecve
	}
	return false
}

func (m *ClientConfig) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *ClientConfig) GetDefaultMaxWait() uint64 {
	if m != nil {
		return m.DefaultMaxWait
	}
	return 0
}

type APIConfig struct {
	BindAddress          string   `protobuf:"bytes,1,opt,name=bind_address,json=bindAddress,proto3" json:"bind_address,omitempty"`
	BindPort             uint32   `protobuf:"varint,2,opt,name=bind_port,json=bindPort,proto3" json:"bind_port,omitempty"`
	BindScheme           string   `protobuf:"bytes,3,opt,name=bind_scheme,json=bindScheme,proto3" json:"bind_scheme,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *APIConfig) Reset()         { *m = APIConfig{} }
func (m *APIConfig) String() string { return proto.CompactTextString(m) }
func (*APIConfig) ProtoMessage()    {}
func (*APIConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{5}
}

func (m *APIConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIConfig.Unmarshal(m, b)
}
func (m *APIConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIConfig.Marshal(b, m, deterministic)
}
func (m *APIConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIConfig.Merge(m, src)
}
func (m *APIConfig) XXX_Size() int {
	return xxx_messageInfo_APIConfig.Size(m)
}
func (m *APIConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_APIConfig.DiscardUnknown(m)
}

var xxx_messageInfo_APIConfig proto.InternalMessageInfo

func (m *APIConfig) GetBindAddress() string {
	if m != nil {
		return m.BindAddress
	}
	return ""
}

func (m *APIConfig) GetBindPort() uint32 {
	if m != nil {
		return m.BindPort
	}
	return 0
}

func (m *APIConfig) GetBindScheme() string {
	if m != nil {
		return m.BindScheme
	}
	return ""
}

type GUIConfig struct {
	BindAddress             string   `protobuf:"bytes,1,opt,name=bind_address,json=bindAddress,proto3" json:"bind_address,omitempty"`
	BindPort                uint32   `protobuf:"varint,2,opt,name=bind_port,json=bindPort,proto3" json:"bind_port,omitempty"`
	InternalCidr            []string `protobuf:"bytes,3,rep,name=internal_cidr,json=internalCidr,proto3" json:"internal_cidr,omitempty"`
	VpnCidr                 []string `protobuf:"bytes,4,rep,name=vpn_cidr,json=vpnCidr,proto3" json:"vpn_cidr,omitempty"`
	GoogleOauthClientId     string   `protobuf:"bytes,5,opt,name=google_oauth_client_id,json=googleOauthClientId,proto3" json:"google_oauth_client_id,omitempty"`
	GoogleOauthClientSecret string   `protobuf:"bytes,6,opt,name=google_oauth_client_secret,json=googleOauthClientSecret,proto3" json:"google_oauth_client_secret,omitempty"`
	PublicUrl               string   `protobuf:"bytes,7,opt,name=public_url,json=publicUrl,proto3" json:"public_url,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *GUIConfig) Reset()         { *m = GUIConfig{} }
func (m *GUIConfig) String() string { return proto.CompactTextString(m) }
func (*GUIConfig) ProtoMessage()    {}
func (*GUIConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{6}
}

func (m *GUIConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GUIConfig.Unmarshal(m, b)
}
func (m *GUIConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GUIConfig.Marshal(b, m, deterministic)
}
func (m *GUIConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GUIConfig.Merge(m, src)
}
func (m *GUIConfig) XXX_Size() int {
	return xxx_messageInfo_GUIConfig.Size(m)
}
func (m *GUIConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GUIConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GUIConfig proto.InternalMessageInfo

func (m *GUIConfig) GetBindAddress() string {
	if m != nil {
		return m.BindAddress
	}
	return ""
}

func (m *GUIConfig) GetBindPort() uint32 {
	if m != nil {
		return m.BindPort
	}
	return 0
}

func (m *GUIConfig) GetInternalCidr() []string {
	if m != nil {
		return m.InternalCidr
	}
	return nil
}

func (m *GUIConfig) GetVpnCidr() []string {
	if m != nil {
		return m.VpnCidr
	}
	return nil
}

func (m *GUIConfig) GetGoogleOauthClientId() string {
	if m != nil {
		return m.GoogleOauthClientId
	}
	return ""
}

func (m *GUIConfig) GetGoogleOauthClientSecret() string {
	if m != nil {
		return m.GoogleOauthClientSecret
	}
	return ""
}

func (m *GUIConfig) GetPublicUrl() string {
	if m != nil {
		return m.PublicUrl
	}
	return ""
}

type CAConfig struct {
	PrivateKey           string   `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CAConfig) Reset()         { *m = CAConfig{} }
func (m *CAConfig) String() string { return proto.CompactTextString(m) }
func (*CAConfig) ProtoMessage()    {}
func (*CAConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{7}
}

func (m *CAConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CAConfig.Unmarshal(m, b)
}
func (m *CAConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CAConfig.Marshal(b, m, deterministic)
}
func (m *CAConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CAConfig.Merge(m, src)
}
func (m *CAConfig) XXX_Size() int {
	return xxx_messageInfo_CAConfig.Size(m)
}
func (m *CAConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CAConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CAConfig proto.InternalMessageInfo

func (m *CAConfig) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

type FrontendConfig struct {
	BindAddress          string   `protobuf:"bytes,1,opt,name=bind_address,json=bindAddress,proto3" json:"bind_address,omitempty"`
	BindPort             uint32   `protobuf:"varint,2,opt,name=bind_port,json=bindPort,proto3" json:"bind_port,omitempty"`
	Certificate          string   `protobuf:"bytes,3,opt,name=certificate,proto3" json:"certificate,omitempty"`
	PrivateKey           string   `protobuf:"bytes,4,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	DnsName              string   `protobuf:"bytes,6,opt,name=dns_name,json=dnsName,proto3" json:"dns_name,omitempty"`
	ArtifactsPath        string   `protobuf:"bytes,7,opt,name=artifacts_path,json=artifactsPath,proto3" json:"artifacts_path,omitempty"`
	PublicPath           string   `protobuf:"bytes,8,opt,name=public_path,json=publicPath,proto3" json:"public_path,omitempty"`
	Concurrency          uint64   `protobuf:"varint,9,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FrontendConfig) Reset()         { *m = FrontendConfig{} }
func (m *FrontendConfig) String() string { return proto.CompactTextString(m) }
func (*FrontendConfig) ProtoMessage()    {}
func (*FrontendConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{8}
}

func (m *FrontendConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FrontendConfig.Unmarshal(m, b)
}
func (m *FrontendConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FrontendConfig.Marshal(b, m, deterministic)
}
func (m *FrontendConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FrontendConfig.Merge(m, src)
}
func (m *FrontendConfig) XXX_Size() int {
	return xxx_messageInfo_FrontendConfig.Size(m)
}
func (m *FrontendConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_FrontendConfig.DiscardUnknown(m)
}

var xxx_messageInfo_FrontendConfig proto.InternalMessageInfo

func (m *FrontendConfig) GetBindAddress() string {
	if m != nil {
		return m.BindAddress
	}
	return ""
}

func (m *FrontendConfig) GetBindPort() uint32 {
	if m != nil {
		return m.BindPort
	}
	return 0
}

func (m *FrontendConfig) GetCertificate() string {
	if m != nil {
		return m.Certificate
	}
	return ""
}

func (m *FrontendConfig) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *FrontendConfig) GetDnsName() string {
	if m != nil {
		return m.DnsName
	}
	return ""
}

func (m *FrontendConfig) GetArtifactsPath() string {
	if m != nil {
		return m.ArtifactsPath
	}
	return ""
}

func (m *FrontendConfig) GetPublicPath() string {
	if m != nil {
		return m.PublicPath
	}
	return ""
}

func (m *FrontendConfig) GetConcurrency() uint64 {
	if m != nil {
		return m.Concurrency
	}
	return 0
}

type DatastoreConfig struct {
	Implementation       string   `protobuf:"bytes,1,opt,name=implementation,proto3" json:"implementation,omitempty"`
	Location             string   `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	FilestoreDirectory   string   `protobuf:"bytes,3,opt,name=filestore_directory,json=filestoreDirectory,proto3" json:"filestore_directory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatastoreConfig) Reset()         { *m = DatastoreConfig{} }
func (m *DatastoreConfig) String() string { return proto.CompactTextString(m) }
func (*DatastoreConfig) ProtoMessage()    {}
func (*DatastoreConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{9}
}

func (m *DatastoreConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatastoreConfig.Unmarshal(m, b)
}
func (m *DatastoreConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatastoreConfig.Marshal(b, m, deterministic)
}
func (m *DatastoreConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatastoreConfig.Merge(m, src)
}
func (m *DatastoreConfig) XXX_Size() int {
	return xxx_messageInfo_DatastoreConfig.Size(m)
}
func (m *DatastoreConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DatastoreConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DatastoreConfig proto.InternalMessageInfo

func (m *DatastoreConfig) GetImplementation() string {
	if m != nil {
		return m.Implementation
	}
	return ""
}

func (m *DatastoreConfig) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *DatastoreConfig) GetFilestoreDirectory() string {
	if m != nil {
		return m.FilestoreDirectory
	}
	return ""
}

type FlowsConfig struct {
	InterrogateAdditionalQueries []*proto1.VQLRequest `protobuf:"bytes,1,rep,name=interrogate_additional_queries,json=interrogateAdditionalQueries,proto3" json:"interrogate_additional_queries,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}             `json:"-"`
	XXX_unrecognized             []byte               `json:"-"`
	XXX_sizecache                int32                `json:"-"`
}

func (m *FlowsConfig) Reset()         { *m = FlowsConfig{} }
func (m *FlowsConfig) String() string { return proto.CompactTextString(m) }
func (*FlowsConfig) ProtoMessage()    {}
func (*FlowsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{10}
}

func (m *FlowsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowsConfig.Unmarshal(m, b)
}
func (m *FlowsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowsConfig.Marshal(b, m, deterministic)
}
func (m *FlowsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowsConfig.Merge(m, src)
}
func (m *FlowsConfig) XXX_Size() int {
	return xxx_messageInfo_FlowsConfig.Size(m)
}
func (m *FlowsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_FlowsConfig proto.InternalMessageInfo

func (m *FlowsConfig) GetInterrogateAdditionalQueries() []*proto1.VQLRequest {
	if m != nil {
		return m.InterrogateAdditionalQueries
	}
	return nil
}

// Event generators for the client. Note: These are sent from the
// server to the client and are not embedded in the client.
type ClientEvents struct {
	Artifacts            []string `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	Version              uint64   `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	OpsPerSecond         float32  `protobuf:"fixed32,24,opt,name=ops_per_second,json=opsPerSecond,proto3" json:"ops_per_second,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientEvents) Reset()         { *m = ClientEvents{} }
func (m *ClientEvents) String() string { return proto.CompactTextString(m) }
func (*ClientEvents) ProtoMessage()    {}
func (*ClientEvents) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{11}
}

func (m *ClientEvents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientEvents.Unmarshal(m, b)
}
func (m *ClientEvents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientEvents.Marshal(b, m, deterministic)
}
func (m *ClientEvents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientEvents.Merge(m, src)
}
func (m *ClientEvents) XXX_Size() int {
	return xxx_messageInfo_ClientEvents.Size(m)
}
func (m *ClientEvents) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientEvents.DiscardUnknown(m)
}

var xxx_messageInfo_ClientEvents proto.InternalMessageInfo

func (m *ClientEvents) GetArtifacts() []string {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *ClientEvents) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ClientEvents) GetOpsPerSecond() float32 {
	if m != nil {
		return m.OpsPerSecond
	}
	return 0
}

// Configuration for the mail server.
type MailConfig struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Server               string   `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	ServerPort           uint64   `protobuf:"varint,3,opt,name=server_port,json=serverPort,proto3" json:"server_port,omitempty"`
	AuthUsername         string   `protobuf:"bytes,4,opt,name=auth_username,json=authUsername,proto3" json:"auth_username,omitempty"`
	AuthPassword         string   `protobuf:"bytes,5,opt,name=auth_password,json=authPassword,proto3" json:"auth_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MailConfig) Reset()         { *m = MailConfig{} }
func (m *MailConfig) String() string { return proto.CompactTextString(m) }
func (*MailConfig) ProtoMessage()    {}
func (*MailConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{12}
}

func (m *MailConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MailConfig.Unmarshal(m, b)
}
func (m *MailConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MailConfig.Marshal(b, m, deterministic)
}
func (m *MailConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MailConfig.Merge(m, src)
}
func (m *MailConfig) XXX_Size() int {
	return xxx_messageInfo_MailConfig.Size(m)
}
func (m *MailConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MailConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MailConfig proto.InternalMessageInfo

func (m *MailConfig) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MailConfig) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *MailConfig) GetServerPort() uint64 {
	if m != nil {
		return m.ServerPort
	}
	return 0
}

func (m *MailConfig) GetAuthUsername() string {
	if m != nil {
		return m.AuthUsername
	}
	return ""
}

func (m *MailConfig) GetAuthPassword() string {
	if m != nil {
		return m.AuthPassword
	}
	return ""
}

type LoggingConfig struct {
	OutputDirectory          string   `protobuf:"bytes,1,opt,name=output_directory,json=outputDirectory,proto3" json:"output_directory,omitempty"`
	SeparateLogsPerComponent bool     `protobuf:"varint,2,opt,name=separate_logs_per_component,json=separateLogsPerComponent,proto3" json:"separate_logs_per_component,omitempty"`
	RotationTime             uint64   `protobuf:"varint,3,opt,name=rotation_time,json=rotationTime,proto3" json:"rotation_time,omitempty"`
	MaxAge                   uint64   `protobuf:"varint,4,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *LoggingConfig) Reset()         { *m = LoggingConfig{} }
func (m *LoggingConfig) String() string { return proto.CompactTextString(m) }
func (*LoggingConfig) ProtoMessage()    {}
func (*LoggingConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{13}
}

func (m *LoggingConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoggingConfig.Unmarshal(m, b)
}
func (m *LoggingConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoggingConfig.Marshal(b, m, deterministic)
}
func (m *LoggingConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoggingConfig.Merge(m, src)
}
func (m *LoggingConfig) XXX_Size() int {
	return xxx_messageInfo_LoggingConfig.Size(m)
}
func (m *LoggingConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LoggingConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LoggingConfig proto.InternalMessageInfo

func (m *LoggingConfig) GetOutputDirectory() string {
	if m != nil {
		return m.OutputDirectory
	}
	return ""
}

func (m *LoggingConfig) GetSeparateLogsPerComponent() bool {
	if m != nil {
		return m.SeparateLogsPerComponent
	}
	return false
}

func (m *LoggingConfig) GetRotationTime() uint64 {
	if m != nil {
		return m.RotationTime
	}
	return 0
}

func (m *LoggingConfig) GetMaxAge() uint64 {
	if m != nil {
		return m.MaxAge
	}
	return 0
}

type Config struct {
	Version              *Version         `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	Client               *ClientConfig    `protobuf:"bytes,1,opt,name=Client,proto3" json:"Client,omitempty"`
	Events               *ClientEvents    `protobuf:"bytes,10,opt,name=Events,proto3" json:"Events,omitempty"`
	API                  *APIConfig       `protobuf:"bytes,2,opt,name=API,proto3" json:"API,omitempty"`
	GUI                  *GUIConfig       `protobuf:"bytes,3,opt,name=GUI,proto3" json:"GUI,omitempty"`
	CA                   *CAConfig        `protobuf:"bytes,4,opt,name=CA,proto3" json:"CA,omitempty"`
	Frontend             *FrontendConfig  `protobuf:"bytes,5,opt,name=Frontend,proto3" json:"Frontend,omitempty"`
	Datastore            *DatastoreConfig `protobuf:"bytes,6,opt,name=Datastore,proto3" json:"Datastore,omitempty"`
	Flows                *FlowsConfig     `protobuf:"bytes,7,opt,name=Flows,proto3" json:"Flows,omitempty"`
	Writeback            *Writeback       `protobuf:"bytes,9,opt,name=Writeback,proto3" json:"Writeback,omitempty"`
	Mail                 *MailConfig      `protobuf:"bytes,11,opt,name=Mail,proto3" json:"Mail,omitempty"`
	Logging              *LoggingConfig   `protobuf:"bytes,23,opt,name=Logging,proto3" json:"Logging,omitempty"`
	Verbose              bool             `protobuf:"varint,20,opt,name=verbose,proto3" json:"verbose,omitempty"`
	AutocertDomain       string           `protobuf:"bytes,21,opt,name=autocert_domain,json=autocertDomain,proto3" json:"autocert_domain,omitempty"`
	AutocertCertCache    string           `protobuf:"bytes,22,opt,name=autocert_cert_cache,json=autocertCertCache,proto3" json:"autocert_cert_cache,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{14}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Config) GetClient() *ClientConfig {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *Config) GetEvents() *ClientEvents {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *Config) GetAPI() *APIConfig {
	if m != nil {
		return m.API
	}
	return nil
}

func (m *Config) GetGUI() *GUIConfig {
	if m != nil {
		return m.GUI
	}
	return nil
}

func (m *Config) GetCA() *CAConfig {
	if m != nil {
		return m.CA
	}
	return nil
}

func (m *Config) GetFrontend() *FrontendConfig {
	if m != nil {
		return m.Frontend
	}
	return nil
}

func (m *Config) GetDatastore() *DatastoreConfig {
	if m != nil {
		return m.Datastore
	}
	return nil
}

func (m *Config) GetFlows() *FlowsConfig {
	if m != nil {
		return m.Flows
	}
	return nil
}

func (m *Config) GetWriteback() *Writeback {
	if m != nil {
		return m.Writeback
	}
	return nil
}

func (m *Config) GetMail() *MailConfig {
	if m != nil {
		return m.Mail
	}
	return nil
}

func (m *Config) GetLogging() *LoggingConfig {
	if m != nil {
		return m.Logging
	}
	return nil
}

func (m *Config) GetVerbose() bool {
	if m != nil {
		return m.Verbose
	}
	return false
}

func (m *Config) GetAutocertDomain() string {
	if m != nil {
		return m.AutocertDomain
	}
	return ""
}

func (m *Config) GetAutocertCertCache() string {
	if m != nil {
		return m.AutocertCertCache
	}
	return ""
}

func init() {
	proto.RegisterType((*Version)(nil), "proto.Version")
	proto.RegisterType((*Writeback)(nil), "proto.Writeback")
	proto.RegisterType((*WindowsInstallerConfig)(nil), "proto.WindowsInstallerConfig")
	proto.RegisterType((*DarwinInstallerConfig)(nil), "proto.DarwinInstallerConfig")
	proto.RegisterType((*ClientConfig)(nil), "proto.ClientConfig")
	proto.RegisterType((*APIConfig)(nil), "proto.APIConfig")
	proto.RegisterType((*GUIConfig)(nil), "proto.GUIConfig")
	proto.RegisterType((*CAConfig)(nil), "proto.CAConfig")
	proto.RegisterType((*FrontendConfig)(nil), "proto.FrontendConfig")
	proto.RegisterType((*DatastoreConfig)(nil), "proto.DatastoreConfig")
	proto.RegisterType((*FlowsConfig)(nil), "proto.FlowsConfig")
	proto.RegisterType((*ClientEvents)(nil), "proto.ClientEvents")
	proto.RegisterType((*MailConfig)(nil), "proto.MailConfig")
	proto.RegisterType((*LoggingConfig)(nil), "proto.LoggingConfig")
	proto.RegisterType((*Config)(nil), "proto.Config")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_3eaf2c85e69e9ea4) }

var fileDescriptor_3eaf2c85e69e9ea4 = []byte{
	// 3296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0xcd, 0x73, 0x1c, 0xc7,
	0x75, 0xaf, 0x05, 0x48, 0x7c, 0xf4, 0x82, 0x20, 0xd9, 0x94, 0xa8, 0x15, 0x25, 0x59, 0xad, 0xf5,
	0x87, 0x40, 0x87, 0x19, 0x10, 0x20, 0x45, 0x4b, 0xb4, 0x2d, 0x71, 0xf1, 0x41, 0x0a, 0x16, 0x49,
	0x83, 0x03, 0x40, 0x4c, 0xc9, 0x4e, 0xad, 0x7a, 0x67, 0x7a, 0x77, 0x5b, 0x9c, 0xe9, 0x1e, 0x75,
	0xf7, 0x60, 0x81, 0xa4, 0x2a, 0x95, 0xdc, 0xec, 0xf8, 0x96, 0x43, 0xbe, 0xaa, 0x52, 0x29, 0x3b,
	0xc9, 0x25, 0xe5, 0x83, 0xef, 0xbe, 0xe6, 0x2f, 0x49, 0x72, 0xc8, 0x25, 0x55, 0xbe, 0xe5, 0x92,
	0x43, 0xea, 0xbd, 0xee, 0x99, 0x9d, 0x05, 0x91, 0x72, 0x92, 0xf2, 0x21, 0x07, 0x5f, 0x40, 0xa2,
	0xe7, 0xbd, 0xdf, 0x7b, 0xdd, 0xef, 0xfb, 0x81, 0xac, 0x24, 0x5a, 0x0d, 0xe5, 0x28, 0x2a, 0x8c,
	0x76, 0x9a, 0x5e, 0xc4, 0x7f, 0x6e, 0xdc, 0x9f, 0x4c, 0x26, 0xd1, 0xb1, 0xc8, 0x74, 0x22, 0x53,
	0x71, 0x12, 0x25, 0x3a, 0x5f, 0x1f, 0xe9, 0x8c, 0xab, 0xd1, 0xba, 0x3f, 0x34, 0xbc, 0x70, 0xda,
	0xac, 0x23, 0xf1, 0xba, 0x15, 0x39, 0x57, 0x4e, 0x26, 0x1e, 0xe2, 0xc6, 0x77, 0xff, 0x67, 0xbc,
	0x3c, 0x71, 0x52, 0x2b, 0x1b, 0x30, 0x8e, 0xbf, 0xcc, 0x3c, 0x7b, 0xf7, 0x57, 0x73, 0x64, 0xf1,
	0x53, 0x61, 0xac, 0xd4, 0x8a, 0x46, 0xe4, 0x82, 0xe2, 0xb9, 0xe8, 0xb4, 0x58, 0x6b, 0x6d, 0x79,
	0xeb, 0xc6, 0x3f, 0xff, 0xe7, 0xbf, 0xfc, 0x53, 0xeb, 0x15, 0x4a, 0x0f, 0xc7, 0x82, 0x25, 0x99,
	0x14, 0xca, 0xbd, 0x6b, 0x19, 0x10, 0x44, 0x31, 0xd2, 0xd1, 0xa7, 0xa4, 0x9d, 0x0a, 0x9b, 0x18,
	0x59, 0x00, 0x76, 0x67, 0x0e, 0xd9, 0x6e, 0x21, 0xdb, 0x37, 0xe8, 0xd7, 0x66, 0xd8, 0x32, 0xad,
	0x46, 0xac, 0x41, 0xcc, 0xac, 0x33, 0x52, 0x8d, 0xe2, 0x26, 0x00, 0xe5, 0x64, 0xf1, 0xd8, 0xab,
	0xd2, 0x99, 0x47, 0xac, 0x47, 0x88, 0xd5, 0xa3, 0x1f, 0xcd, 0x60, 0x05, 0x9a, 0x00, 0xc1, 0x4a,
	0x0b, 0x3f, 0x39, 0xab, 0xde, 0xa5, 0xfa, 0x0e, 0xa7, 0x36, 0x19, 0x0b, 0xd0, 0xb7, 0xc2, 0xa5,
	0x1f, 0x91, 0x85, 0x44, 0xe7, 0xb9, 0x74, 0x9d, 0x0b, 0x28, 0xe1, 0x5d, 0x94, 0xf0, 0x0e, 0x7d,
	0x7b, 0x46, 0xc2, 0x48, 0x3a, 0xe6, 0xc9, 0x82, 0x90, 0x28, 0x0e, 0x6c, 0xb4, 0x47, 0xc8, 0xa0,
	0x94, 0x59, 0xda, 0x77, 0x32, 0x17, 0x9d, 0x8b, 0x08, 0xd2, 0x45, 0x90, 0x37, 0xe9, 0x8d, 0xe7,
	0x63, 0xa1, 0x98, 0xab, 0x91, 0xd8, 0x84, 0x5b, 0x06, 0xd4, 0x2e, 0x8a, 0x97, 0x91, 0xeb, 0x50,
	0xe6, 0xa2, 0xfb, 0xf3, 0x79, 0xb2, 0xfc, 0xdc, 0x48, 0x27, 0x06, 0x3c, 0x79, 0x41, 0x63, 0xd2,
	0x2e, 0x8c, 0x3c, 0xe6, 0x4e, 0xf4, 0x5f, 0x88, 0xd3, 0xce, 0x22, 0x22, 0x6e, 0x20, 0xe2, 0xef,
	0xd0, 0x9b, 0x33, 0x6a, 0x05, 0x3a, 0xf6, 0x42, 0x9c, 0x32, 0xa9, 0xd8, 0xfe, 0xee, 0x13, 0x26,
	0x54, 0xa2, 0x53, 0x54, 0x90, 0x84, 0xaf, 0x9f, 0x88, 0x53, 0xfa, 0x39, 0xb9, 0x36, 0x2e, 0x95,
	0xeb, 0x67, 0xdc, 0x3a, 0x54, 0xd4, 0x3a, 0x9e, 0x17, 0x9d, 0x4b, 0xac, 0xb5, 0x76, 0x61, 0xeb,
	0x36, 0x62, 0x7f, 0x93, 0xae, 0x01, 0x36, 0x50, 0x30, 0xa0, 0x65, 0x35, 0x19, 0x73, 0x63, 0x69,
	0xab, 0x1b, 0x18, 0xae, 0xa2, 0xf8, 0x2a, 0x10, 0x3c, 0xe6, 0xd6, 0x1d, 0x56, 0x34, 0xf4, 0xdf,
	0x5a, 0xe4, 0x75, 0x44, 0xb7, 0xc2, 0x1c, 0x0b, 0x03, 0xff, 0x48, 0x9e, 0xf5, 0x55, 0x99, 0x0f,
	0x84, 0xe9, 0xac, 0xa2, 0xa0, 0x9f, 0xb7, 0x50, 0xd2, 0x3f, 0xb4, 0xe8, 0xcf, 0x5a, 0xb5, 0xac,
	0x44, 0x18, 0x27, 0x87, 0x32, 0x81, 0x7b, 0x78, 0x26, 0xe6, 0x99, 0xd8, 0x44, 0x30, 0xcb, 0x27,
	0x6c, 0x68, 0x74, 0x8e, 0x6f, 0xe8, 0x91, 0x23, 0xb6, 0x8d, 0x9a, 0x58, 0x66, 0xc4, 0xb0, 0xb4,
	0x82, 0x39, 0xcd, 0x12, 0xad, 0x94, 0x48, 0x1c, 0xfc, 0xd7, 0x13, 0x59, 0x36, 0x91, 0x6e, 0xcc,
	0x74, 0x96, 0x0a, 0x33, 0x8b, 0x6a, 0x19, 0xb7, 0xac, 0xe0, 0xc6, 0x31, 0x3d, 0x0c, 0xc4, 0xf8,
	0x7c, 0x46, 0x3b, 0x8e, 0x7e, 0x88, 0x51, 0x90, 0xe8, 0x2c, 0x8a, 0xaf, 0x83, 0x7e, 0x07, 0x48,
	0x72, 0x80, 0x10, 0x4f, 0x11, 0xa1, 0xfb, 0x93, 0x39, 0x72, 0xfd, 0xb9, 0x54, 0xa9, 0x9e, 0xd8,
	0x3d, 0x65, 0x1d, 0xcf, 0x32, 0x61, 0xb6, 0x31, 0x88, 0xe9, 0x13, 0xb2, 0x02, 0x98, 0x32, 0x11,
	0xfd, 0x46, 0xe0, 0x7c, 0x13, 0xaf, 0xfd, 0x35, 0xda, 0x85, 0x4b, 0xc3, 0x39, 0xc8, 0xae, 0x6e,
	0x24, 0x13, 0x7f, 0x05, 0x23, 0xb8, 0x13, 0x51, 0xdc, 0x0e, 0x67, 0x4f, 0x21, 0x9e, 0x7e, 0xda,
	0x22, 0x2b, 0xd2, 0x8b, 0xe8, 0x17, 0xdc, 0x8d, 0x43, 0x44, 0xfd, 0x11, 0xe2, 0x9d, 0xd0, 0xe3,
	0xe7, 0x63, 0x61, 0x04, 0xb3, 0x63, 0x5d, 0x66, 0x29, 0x02, 0x0e, 0xa4, 0xe2, 0xe6, 0x94, 0x0d,
	0x04, 0x0b, 0x6c, 0x22, 0xfd, 0x88, 0x81, 0xd4, 0xf0, 0x2b, 0x3a, 0x31, 0x57, 0x29, 0x4b, 0x74,
	0x21, 0x85, 0x6d, 0xf2, 0x38, 0xed, 0xed, 0x9c, 0xe9, 0xc4, 0x3f, 0x04, 0x90, 0x05, 0x36, 0xdb,
	0xd4, 0x36, 0x8a, 0xdb, 0xe1, 0x78, 0x9f, 0xbb, 0x71, 0xf7, 0x4f, 0xe7, 0xc8, 0xab, 0x3b, 0xdc,
	0x4c, 0xa4, 0xfa, 0xed, 0x63, 0x74, 0x7f, 0xb4, 0x42, 0x56, 0xbc, 0x7b, 0x86, 0x37, 0xf8, 0x93,
	0x16, 0x59, 0xc8, 0xf8, 0x40, 0x64, 0xb6, 0xb3, 0xc0, 0xe6, 0xd7, 0x96, 0xb7, 0x24, 0xaa, 0x9b,
	0x50, 0xde, 0x63, 0x99, 0xb4, 0xe8, 0x85, 0xfe, 0x7b, 0x33, 0x4d, 0x8c, 0xb9, 0x8d, 0xd8, 0x21,
	0x28, 0xc0, 0xb3, 0x4c, 0x4f, 0x2c, 0xb3, 0x22, 0x13, 0x89, 0x13, 0x29, 0x1b, 0x19, 0x5d, 0x16,
	0x16, 0xb8, 0x92, 0x10, 0x05, 0x4e, 0xc3, 0x0d, 0x1d, 0x37, 0x23, 0xe1, 0x80, 0x42, 0x2a, 0x0c,
	0x5f, 0x1b, 0xc5, 0x41, 0x30, 0xe5, 0xa4, 0x1d, 0x82, 0xb2, 0x34, 0x99, 0xed, 0x2c, 0xa1, 0x1e,
	0x0f, 0x50, 0x8f, 0xfb, 0xf4, 0xfd, 0xa9, 0x1e, 0x21, 0x1a, 0x8e, 0xe2, 0xc7, 0x33, 0xca, 0x4c,
	0x64, 0x96, 0x31, 0xe7, 0x1f, 0x65, 0x1a, 0x68, 0x51, 0x4c, 0x3c, 0xfd, 0x91, 0xc9, 0x2c, 0xfd,
	0x71, 0x8b, 0xac, 0x26, 0xbc, 0xdf, 0x88, 0xe5, 0x4e, 0x1b, 0xad, 0x33, 0x40, 0x31, 0x3f, 0xa4,
	0x9f, 0xc1, 0xbb, 0x6f, 0xf7, 0xde, 0xb5, 0x33, 0xf1, 0x8e, 0xc9, 0xca, 0xeb, 0xbc, 0xbf, 0xfb,
	0x24, 0x62, 0x87, 0x2f, 0x49, 0x2d, 0xad, 0x63, 0x5c, 0x9d, 0x56, 0xba, 0x59, 0x39, 0x52, 0x22,
	0xf5, 0xc1, 0x8d, 0x06, 0xda, 0xee, 0x45, 0xf1, 0xa5, 0x84, 0x6f, 0x4f, 0x41, 0xe9, 0x2f, 0x5b,
	0xe4, 0xa2, 0xd2, 0x2a, 0x11, 0x9d, 0x15, 0x54, 0xe1, 0xef, 0x7d, 0xd6, 0xf9, 0x9b, 0x16, 0xfd,
	0xeb, 0x56, 0x8f, 0xd9, 0x31, 0x37, 0x22, 0x65, 0x48, 0xf0, 0xd2, 0x2d, 0x0b, 0x23, 0xac, 0x50,
	0xce, 0x2b, 0x12, 0x44, 0xe2, 0x07, 0x23, 0xbe, 0x80, 0x6b, 0x57, 0x6f, 0x3e, 0x19, 0xcb, 0x64,
	0xcc, 0x52, 0xcd, 0x94, 0x76, 0x15, 0x93, 0xd7, 0x07, 0x52, 0x89, 0xd5, 0x4c, 0x3a, 0x96, 0x83,
	0xea, 0x03, 0xc1, 0x44, 0x3e, 0x10, 0x69, 0xb8, 0xa4, 0x6b, 0x26, 0x6f, 0x5f, 0xf7, 0x4b, 0x83,
	0x0e, 0x16, 0xc5, 0x5e, 0x67, 0x3a, 0x24, 0x57, 0x26, 0x55, 0x29, 0xe8, 0xa7, 0x18, 0x57, 0x9d,
	0x57, 0xf0, 0x1e, 0xdf, 0xc6, 0x6b, 0xbc, 0x47, 0xef, 0xf4, 0x18, 0xb8, 0x3f, 0x9b, 0xa0, 0xbf,
	0x7b, 0x92, 0xa9, 0x66, 0xa0, 0x2d, 0x02, 0xa0, 0xef, 0x66, 0xcc, 0x3a, 0x8c, 0xa4, 0xcb, 0x35,
	0xa8, 0x8f, 0x55, 0x9a, 0x90, 0xe9, 0x51, 0x3f, 0x93, 0xaa, 0x3c, 0xe9, 0x2c, 0xa3, 0x98, 0xfb,
	0x28, 0xe6, 0x2e, 0xdd, 0x9c, 0x11, 0x83, 0x14, 0xbf, 0x56, 0xca, 0x6a, 0x0d, 0xf9, 0x18, 0xe8,
	0xa9, 0x24, 0x57, 0xa7, 0x42, 0x26, 0x3e, 0x65, 0x76, 0x08, 0x8a, 0xf9, 0x0e, 0x8a, 0xb9, 0x47,
	0xef, 0xce, 0x88, 0x09, 0x34, 0xbf, 0x56, 0xd0, 0xf4, 0x8d, 0x42, 0x22, 0xa6, 0x3f, 0x20, 0x4b,
	0x39, 0x3f, 0xe9, 0x17, 0x3a, 0xcb, 0x3a, 0x97, 0xb1, 0xda, 0x54, 0x1e, 0x7e, 0x07, 0x8c, 0x99,
	0xf3, 0x13, 0x99, 0x97, 0x79, 0x55, 0x5a, 0xd0, 0xdb, 0x13, 0xad, 0x52, 0xcb, 0x06, 0xc2, 0x4d,
	0x84, 0x50, 0x95, 0xb9, 0x01, 0xc0, 0x46, 0x9b, 0xf3, 0xf7, 0x6e, 0xdf, 0x8e, 0x17, 0x73, 0x7e,
	0xb2, 0xaf, 0xb3, 0x8c, 0xfe, 0x21, 0xb9, 0x1a, 0x34, 0xeb, 0x57, 0xa9, 0xc4, 0x74, 0xae, 0xb0,
	0xd6, 0x5a, 0x7b, 0xf3, 0x2d, 0xdf, 0x36, 0x45, 0xe7, 0x17, 0x84, 0xad, 0x75, 0x54, 0xe2, 0x26,
	0x7d, 0x77, 0xbb, 0x69, 0xed, 0x2a, 0xe5, 0x55, 0xd7, 0xad, 0x41, 0xe1, 0x66, 0x67, 0x80, 0xe8,
	0x09, 0xb9, 0xe2, 0x8d, 0xdc, 0x90, 0xfd, 0x2a, 0xca, 0x7e, 0x33, 0xc8, 0x3e, 0x37, 0xfd, 0xfe,
	0xef, 0x45, 0x5f, 0x4e, 0x67, 0x71, 0xe8, 0x0b, 0xb2, 0x5a, 0x18, 0x71, 0x2c, 0x94, 0xeb, 0x8b,
	0x13, 0x91, 0x1c, 0x8b, 0xce, 0x55, 0xd6, 0x5a, 0x5b, 0xda, 0xda, 0x41, 0xe4, 0x0f, 0xe9, 0x77,
	0xf6, 0x86, 0xde, 0xeb, 0x25, 0x64, 0x28, 0x77, 0x8b, 0x05, 0x6a, 0xc6, 0xcd, 0x40, 0x3a, 0x03,
	0x89, 0x14, 0xe2, 0x9b, 0x01, 0x73, 0xe9, 0x85, 0xd7, 0x9e, 0x1a, 0xc5, 0x97, 0x02, 0xf5, 0x2e,
	0x42, 0xd3, 0xcf, 0xa6, 0xbd, 0x1e, 0xc5, 0xdb, 0xad, 0x86, 0xdb, 0x85, 0x66, 0x74, 0xb6, 0x4d,
	0xa9, 0x5a, 0x3e, 0xa9, 0x86, 0xda, 0xe4, 0xfe, 0x66, 0x43, 0x6d, 0x9a, 0xad, 0x4a, 0xa3, 0xc9,
	0x33, 0xe4, 0x4a, 0x2a, 0x86, 0xbc, 0xcc, 0x5c, 0x1f, 0x9c, 0x64, 0xc2, 0xa5, 0xeb, 0x5c, 0x43,
	0x27, 0xf9, 0x18, 0x41, 0xb7, 0xe8, 0x03, 0x00, 0x0d, 0x34, 0xe0, 0x2c, 0xd8, 0xfd, 0x40, 0xc6,
	0x03, 0x5a, 0x36, 0x10, 0x43, 0x0d, 0xde, 0x09, 0x49, 0x41, 0xa5, 0xd8, 0x3e, 0x40, 0x47, 0xf1,
	0xe9, 0xb3, 0xc7, 0xcc, 0x08, 0x5b, 0x66, 0x70, 0x9d, 0xd5, 0xc0, 0xfd, 0x84, 0x9f, 0x3c, 0xe7,
	0xd2, 0x75, 0x7f, 0x39, 0x47, 0x96, 0x7b, 0xfb, 0x7b, 0xa1, 0x0e, 0xfc, 0x55, 0x8b, 0xac, 0x0c,
	0xa4, 0x4a, 0xfb, 0x3c, 0x4d, 0x8d, 0xb0, 0x36, 0x14, 0xc3, 0x63, 0x14, 0x5f, 0x50, 0xd5, 0xf3,
	0xc7, 0x98, 0xcd, 0xa5, 0x4a, 0xd9, 0x28, 0xde, 0xdf, 0x66, 0x42, 0xa5, 0x85, 0x96, 0x3e, 0x1f,
	0xc1, 0x13, 0xfb, 0xd2, 0x56, 0xda, 0x92, 0x67, 0xd9, 0x29, 0xd3, 0x2a, 0xc3, 0xe2, 0xb6, 0xb1,
	0xf9, 0xad, 0xe8, 0x76, 0x74, 0x3b, 0xda, 0xb8, 0xc5, 0xb4, 0x1b, 0x0b, 0x33, 0x91, 0x56, 0xc0,
	0xb9, 0x2d, 0x0d, 0xde, 0xa0, 0x30, 0xba, 0x10, 0x26, 0x83, 0x1c, 0x9a, 0xc0, 0x91, 0x74, 0x51,
	0xdc, 0x06, 0x21, 0x41, 0x26, 0x7d, 0x8f, 0x2c, 0xa3, 0x6a, 0x85, 0x36, 0x0e, 0x8b, 0xea, 0xa5,
	0xad, 0x0e, 0xea, 0x45, 0xe9, 0x95, 0x7d, 0x6d, 0x5c, 0xad, 0x14, 0x64, 0xfd, 0x25, 0xf8, 0x1f,
	0x9c, 0xd2, 0x1f, 0x10, 0x44, 0xe9, 0xfb, 0x96, 0x3a, 0x34, 0xe8, 0x8d, 0xec, 0xe1, 0xcf, 0x83,
	0x55, 0x04, 0x56, 0x19, 0xe1, 0x7b, 0x70, 0x9d, 0xbc, 0x10, 0x8e, 0xad, 0x89, 0x68, 0x14, 0x31,
	0x97, 0x14, 0xb7, 0x58, 0xa9, 0xe4, 0xc9, 0xcd, 0x98, 0x00, 0xdc, 0x01, 0x72, 0x75, 0xff, 0x76,
	0x81, 0x2c, 0x3f, 0x3a, 0xaa, 0x5e, 0xef, 0x2f, 0xcf, 0x7f, 0xbd, 0x12, 0x85, 0x69, 0x9a, 0x9f,
	0x7d, 0xbd, 0x47, 0x47, 0x7b, 0xff, 0xcf, 0x1f, 0xef, 0x2f, 0x5a, 0xe4, 0x92, 0x54, 0x4e, 0x18,
	0xc5, 0xb3, 0x7e, 0x22, 0x53, 0xd3, 0x99, 0xc7, 0xb2, 0x6c, 0x90, 0x37, 0xa3, 0x5f, 0x6c, 0xef,
	0xed, 0xc4, 0x2c, 0x5c, 0x57, 0x60, 0xc1, 0xaf, 0xc8, 0x99, 0x12, 0x6e, 0xa2, 0xcd, 0x0b, 0x1b,
	0x5e, 0x70, 0xe3, 0x83, 0xcd, 0x68, 0xe3, 0xde, 0xfb, 0x70, 0x8d, 0xf5, 0x8d, 0x7b, 0x37, 0x23,
	0xf6, 0x5c, 0x30, 0xec, 0x8b, 0xe1, 0xda, 0xd0, 0x11, 0x8f, 0xf5, 0x04, 0x2d, 0x50, 0x01, 0xac,
	0x8b, 0x93, 0x80, 0x24, 0x13, 0xa8, 0x3c, 0x2b, 0xd5, 0x87, 0x6d, 0x99, 0x1a, 0xfa, 0xa3, 0x16,
	0x59, 0x3a, 0x2e, 0x94, 0x57, 0xea, 0x02, 0x2a, 0x95, 0xa3, 0x52, 0x23, 0x2a, 0x5e, 0x56, 0xea,
	0xb8, 0x50, 0xbf, 0x71, 0x7d, 0x16, 0x8f, 0x0b, 0x85, 0xaa, 0x08, 0x72, 0x7d, 0xa4, 0xf5, 0x28,
	0x13, 0x7d, 0xcd, 0x4b, 0x37, 0xee, 0xfb, 0xb8, 0xee, 0xcb, 0x34, 0x8c, 0x59, 0x75, 0x46, 0xd8,
	0x83, 0x74, 0xee, 0x20, 0x3e, 0x41, 0x10, 0x12, 0x33, 0xf8, 0x21, 0x60, 0xfc, 0x0b, 0xc9, 0x21,
	0xd3, 0x93, 0x28, 0xbe, 0xe6, 0xf1, 0xbe, 0x0f, 0x1f, 0x7d, 0x9f, 0xb6, 0x97, 0xd2, 0x9c, 0xdc,
	0x38, 0x4f, 0x8c, 0x15, 0x89, 0x11, 0xae, 0xb3, 0xf0, 0x7f, 0x14, 0xf5, 0xda, 0x4b, 0xa2, 0x0e,
	0x10, 0x90, 0xee, 0x12, 0x52, 0x94, 0x83, 0x4c, 0x26, 0xd0, 0x8e, 0x85, 0xf1, 0xee, 0x1b, 0x08,
	0xcf, 0xe8, 0x57, 0x20, 0x0d, 0xf9, 0xaf, 0xd0, 0x87, 0xf9, 0x64, 0x8d, 0xd9, 0x15, 0x47, 0x9f,
	0x78, 0xd9, 0x7f, 0x3b, 0x32, 0x59, 0xf7, 0xef, 0x5a, 0x64, 0x69, 0xbb, 0x17, 0x02, 0xe4, 0xcf,
	0x5b, 0xb3, 0x43, 0xe3, 0x99, 0xf8, 0x40, 0xd4, 0xc6, 0xac, 0x18, 0x6a, 0xc0, 0x76, 0xef, 0x9c,
	0x0e, 0x4c, 0x5a, 0xdf, 0xba, 0x24, 0xda, 0x18, 0x61, 0x0b, 0xad, 0xea, 0x76, 0x4b, 0xcc, 0xf4,
	0x6e, 0x52, 0x85, 0x41, 0x2c, 0x9a, 0x6d, 0xfc, 0x66, 0x06, 0xcf, 0xee, 0xbf, 0x5e, 0x24, 0xab,
	0x0f, 0x8d, 0x56, 0x4e, 0xa8, 0x34, 0xe8, 0xfa, 0xc7, 0xe7, 0x07, 0xf3, 0xef, 0xa3, 0xb2, 0xcf,
	0xe9, 0xd1, 0xd9, 0x60, 0x1e, 0x06, 0xf6, 0x46, 0x44, 0x57, 0x13, 0x60, 0x63, 0xee, 0xc3, 0x67,
	0xaa, 0x28, 0x30, 0x72, 0x75, 0x96, 0x61, 0xf2, 0xf9, 0x42, 0x0f, 0xec, 0x6f, 0x26, 0x68, 0x9f,
	0x92, 0x76, 0xb3, 0xc3, 0x9d, 0x9f, 0x5d, 0x6f, 0xfc, 0xde, 0x7b, 0xb7, 0x3f, 0x60, 0x8d, 0x46,
	0x14, 0x5e, 0xb9, 0xd6, 0xbd, 0x32, 0x60, 0x13, 0x80, 0x0e, 0x67, 0x8d, 0xe6, 0x17, 0x10, 0xbb,
	0x88, 0xf7, 0x11, 0xfd, 0xee, 0x7f, 0x63, 0xb4, 0x33, 0x90, 0x67, 0x2c, 0xc8, 0x7c, 0x39, 0x9c,
	0x9d, 0xfe, 0x1f, 0x90, 0xa5, 0x54, 0x59, 0x3f, 0x84, 0x79, 0x77, 0xfe, 0x3a, 0x0a, 0x79, 0x9b,
	0xbe, 0x05, 0x42, 0x76, 0x9e, 0x1e, 0xcc, 0x0c, 0x62, 0x95, 0x84, 0x28, 0x5e, 0x4c, 0x95, 0xc5,
	0xd9, 0xeb, 0x80, 0xac, 0x42, 0xcd, 0x1b, 0xf2, 0xc4, 0x59, 0x3f, 0x7c, 0x2d, 0xce, 0x5e, 0x1e,
	0xa6, 0x1f, 0x78, 0x35, 0x9e, 0xa6, 0x12, 0x82, 0x80, 0x67, 0xac, 0x66, 0x80, 0xf3, 0x4c, 0xf3,
	0x34, 0xbe, 0x54, 0x1f, 0x01, 0x39, 0x1d, 0x91, 0x76, 0x08, 0x04, 0x44, 0x5c, 0x42, 0xc4, 0x87,
	0x88, 0xf8, 0x80, 0x7e, 0x08, 0x81, 0x56, 0x88, 0x44, 0x0e, 0x25, 0x34, 0xfc, 0xd0, 0x44, 0x14,
	0x68, 0x19, 0xb0, 0x33, 0x76, 0x8c, 0x6e, 0x6c, 0x74, 0x39, 0xf2, 0x8e, 0xb9, 0xee, 0x81, 0xd6,
	0xd9, 0x98, 0xab, 0x14, 0x9b, 0x99, 0x10, 0x63, 0x28, 0xe8, 0x73, 0xd2, 0x4e, 0xb4, 0x4a, 0x4a,
	0x63, 0x84, 0x4a, 0x4e, 0xb1, 0xcf, 0xbd, 0xb0, 0xf5, 0x21, 0x0a, 0x7a, 0x9f, 0xde, 0xc3, 0x39,
	0xb4, 0x6e, 0x0b, 0xc3, 0x38, 0x90, 0x0b, 0x6b, 0xf9, 0x48, 0xd8, 0x50, 0x03, 0x12, 0x70, 0xc8,
	0x1a, 0xc3, 0x65, 0xa7, 0x60, 0xc9, 0x29, 0x64, 0xf7, 0x17, 0x73, 0xe4, 0xf2, 0x0e, 0x77, 0xdc,
	0x3a, 0x6d, 0x44, 0xf0, 0x73, 0x4b, 0x56, 0x65, 0x5e, 0x64, 0x22, 0x17, 0xca, 0xaf, 0x16, 0x82,
	0xa3, 0x7f, 0x82, 0x82, 0x77, 0xe9, 0xed, 0xb3, 0x03, 0x70, 0x5a, 0x01, 0xb0, 0x59, 0x3e, 0xd0,
	0xa1, 0xb4, 0x22, 0xda, 0xbc, 0xfa, 0x50, 0x66, 0x62, 0x8b, 0x5b, 0x01, 0xa2, 0x0e, 0x80, 0x32,
	0x3e, 0x23, 0x82, 0x3e, 0x26, 0x4b, 0xd5, 0xcc, 0x1a, 0xe6, 0xe3, 0xd9, 0xed, 0x4e, 0x35, 0xcf,
	0xae, 0x69, 0x83, 0xaf, 0x78, 0xd3, 0xc7, 0x4e, 0x43, 0x78, 0x14, 0xd7, 0x08, 0xf4, 0x33, 0x72,
	0x6d, 0x28, 0x33, 0x81, 0xe7, 0xfd, 0x54, 0x1a, 0x91, 0x38, 0x6d, 0x4e, 0x83, 0xe3, 0xdf, 0x44,
	0xe0, 0xaf, 0xd2, 0x77, 0xd0, 0x51, 0x83, 0xfd, 0xbd, 0xfe, 0x65, 0x01, 0xf6, 0x16, 0x29, 0x43,
	0xee, 0x28, 0xa6, 0x35, 0xca, 0x4e, 0x05, 0xd2, 0xfd, 0x59, 0x8b, 0xb4, 0x1f, 0xc2, 0x70, 0x1b,
	0x9e, 0xeb, 0xcf, 0x5a, 0xe4, 0x2b, 0x58, 0x11, 0x8c, 0x1e, 0x41, 0x44, 0x4c, 0x3d, 0xa9, 0xff,
	0x65, 0x29, 0x8c, 0x14, 0x90, 0x28, 0xe6, 0xd7, 0xda, 0x9b, 0x57, 0xab, 0xbe, 0xf0, 0xd9, 0xe3,
	0x58, 0x7c, 0x59, 0x0a, 0xeb, 0xb6, 0x3e, 0x40, 0x55, 0xee, 0xd0, 0x8d, 0xde, 0xd4, 0xfd, 0x02,
	0x13, 0x28, 0x25, 0xad, 0x2d, 0xb1, 0x9a, 0xef, 0x4d, 0xf1, 0x31, 0x4b, 0xdb, 0x28, 0x7e, 0xb3,
	0x21, 0x73, 0xca, 0xfd, 0xcc, 0x33, 0x77, 0xff, 0x71, 0xae, 0x9a, 0xe7, 0x77, 0xa1, 0x55, 0xb5,
	0x54, 0x90, 0xe5, 0xda, 0x89, 0x51, 0x9f, 0xc6, 0x4e, 0xd2, 0x93, 0xf8, 0x99, 0x65, 0x20, 0x58,
	0xa2, 0xb3, 0x30, 0xb4, 0xd7, 0x1b, 0xac, 0xe0, 0x5c, 0x7e, 0x41, 0xe9, 0xc6, 0xc2, 0x8a, 0x69,
	0x94, 0x44, 0xf1, 0x14, 0x99, 0x3e, 0x9b, 0x36, 0xc3, 0x73, 0xe8, 0xad, 0xdf, 0x42, 0x21, 0x1b,
	0x74, 0xbd, 0x07, 0x3d, 0x6f, 0x62, 0xd0, 0xe4, 0x80, 0x52, 0x35, 0xc2, 0xe0, 0xba, 0x5e, 0x20,
	0xfc, 0x66, 0xfc, 0xc3, 0xd8, 0x46, 0x0f, 0xfc, 0x39, 0x59, 0xd5, 0x85, 0xed, 0x17, 0xb8, 0x9b,
	0x83, 0xd1, 0xa7, 0xd3, 0x61, 0xad, 0xb5, 0xb9, 0x69, 0xc7, 0xb6, 0x13, 0xba, 0x5f, 0x03, 0xaf,
	0x93, 0xc9, 0x5c, 0x22, 0x3e, 0x64, 0xd0, 0xa0, 0xb6, 0xef, 0xed, 0x73, 0xad, 0xa4, 0xd3, 0x7e,
	0x07, 0xba, 0xa2, 0x0b, 0xbb, 0x2f, 0xcc, 0x01, 0xe2, 0x75, 0x7f, 0x3c, 0x4f, 0xc8, 0x13, 0x2e,
	0xb3, 0x60, 0x50, 0x41, 0x2e, 0xc0, 0xc5, 0x83, 0xd7, 0x3f, 0x43, 0x31, 0x9f, 0xd0, 0x3d, 0xbf,
	0xa6, 0x81, 0xd7, 0x10, 0x39, 0x97, 0x59, 0xd5, 0x98, 0x0d, 0xb0, 0xb7, 0x76, 0xf8, 0x56, 0x11,
	0xdb, 0x1b, 0xe2, 0x68, 0xdd, 0xa8, 0xb4, 0xc0, 0x80, 0xd5, 0xb9, 0xb4, 0xd0, 0x2b, 0xe0, 0xce,
	0x19, 0x68, 0xe9, 0xb7, 0xc9, 0x82, 0xcf, 0x84, 0xc1, 0xdf, 0xbf, 0x8a, 0x82, 0xde, 0xa2, 0x6f,
	0x54, 0x75, 0x24, 0x44, 0xd7, 0xc1, 0x93, 0xc3, 0xfd, 0x3a, 0x0d, 0x07, 0x16, 0xfa, 0xa0, 0x5e,
	0x8d, 0x60, 0x29, 0x98, 0xc7, 0xb7, 0x7e, 0x1b, 0x11, 0x5e, 0xa7, 0xaf, 0x61, 0x29, 0x78, 0x99,
	0xbd, 0xda, 0x7c, 0x60, 0x4d, 0xf8, 0x98, 0x5c, 0x9a, 0x51, 0x2b, 0x64, 0xf1, 0x5a, 0x0b, 0x48,
	0x9f, 0x98, 0x18, 0xa7, 0x3d, 0x82, 0x60, 0xa5, 0x4a, 0x41, 0x8b, 0x15, 0x38, 0x3c, 0x0a, 0x8c,
	0xf4, 0x93, 0x80, 0x54, 0x70, 0x6b, 0x27, 0xda, 0x54, 0x4d, 0x4e, 0xdd, 0x1a, 0x54, 0xe7, 0x2f,
	0xa1, 0x41, 0x79, 0x0e, 0x60, 0xfb, 0x81, 0xa6, 0xfb, 0x93, 0x79, 0x72, 0xe9, 0xb1, 0x1e, 0x8d,
	0xa4, 0x1a, 0x05, 0x73, 0x94, 0xe4, 0x8a, 0x2e, 0x5d, 0x51, 0xba, 0x46, 0x20, 0x7b, 0xd3, 0x7c,
	0x0f, 0x25, 0xec, 0xd0, 0xad, 0x99, 0x0c, 0x01, 0xb3, 0x4f, 0x18, 0xbc, 0x47, 0x21, 0x8e, 0xcf,
	0x98, 0xc5, 0x7f, 0x56, 0xba, 0x41, 0x11, 0x5f, 0xf6, 0x32, 0xea, 0x30, 0xa7, 0x7f, 0x40, 0xde,
	0xb0, 0xa2, 0xe0, 0xe0, 0x54, 0xfd, 0x4c, 0x8f, 0xbc, 0x03, 0x26, 0x3a, 0x2f, 0xb4, 0x12, 0xca,
	0x17, 0xdf, 0xa5, 0xe9, 0x6a, 0xc3, 0x77, 0x57, 0xb7, 0x98, 0xe0, 0xc9, 0x98, 0xd5, 0x54, 0x3e,
	0xa4, 0x40, 0x0a, 0x5c, 0x9d, 0x55, 0x78, 0x28, 0x33, 0x8a, 0x3b, 0xd5, 0xef, 0x8f, 0xf5, 0x08,
	0xbc, 0x71, 0xbb, 0x62, 0x83, 0x17, 0xad, 0xd6, 0xba, 0x7e, 0x3b, 0xef, 0xed, 0x5b, 0xbf, 0xe8,
	0xc7, 0x7a, 0xc2, 0xf4, 0xd0, 0x09, 0xbc, 0x2c, 0x52, 0x7a, 0x3f, 0x0b, 0x77, 0x59, 0xa9, 0x98,
	0x0f, 0x65, 0x2e, 0xe8, 0x7d, 0xb2, 0x08, 0xb3, 0x23, 0x1f, 0x79, 0x13, 0x5f, 0xd8, 0x7a, 0x07,
	0x61, 0xde, 0xa0, 0xaf, 0x3f, 0x09, 0xbb, 0x05, 0x3e, 0xc2, 0x54, 0x8e, 0xba, 0x7b, 0xd5, 0x16,
	0x72, 0x7e, 0xd2, 0x1b, 0x89, 0xee, 0x2f, 0x96, 0xc9, 0x42, 0x30, 0xc3, 0xc3, 0x69, 0x64, 0x2f,
	0x9d, 0x3b, 0xe6, 0xbe, 0x89, 0xb0, 0xd7, 0xe9, 0x2b, 0x9f, 0xbe, 0x3c, 0xe2, 0x36, 0xc2, 0xf9,
	0x7b, 0x64, 0xc1, 0x27, 0x26, 0x34, 0x62, 0x7b, 0xf3, 0x5a, 0x80, 0x69, 0x6e, 0x1f, 0xb7, 0xde,
	0x42, 0xac, 0xd7, 0xe8, 0xab, 0xfe, 0xf4, 0xec, 0xca, 0x29, 0x20, 0xd0, 0x43, 0xb2, 0xe0, 0x73,
	0x17, 0xee, 0x66, 0xce, 0x62, 0xf9, 0x4f, 0xd3, 0x3f, 0x8c, 0x84, 0x34, 0x87, 0xdb, 0x40, 0x4c,
	0x38, 0x3e, 0xbf, 0xd5, 0x73, 0x7d, 0xc0, 0xa2, 0xfb, 0x64, 0xbe, 0xb7, 0xbf, 0x87, 0x16, 0x6e,
	0x6f, 0x5e, 0x09, 0x90, 0xf5, 0x44, 0x3c, 0x6d, 0x1d, 0x66, 0xd7, 0x13, 0x90, 0x6f, 0x70, 0xf8,
	0xed, 0xed, 0x37, 0x66, 0xb8, 0x18, 0xa0, 0x68, 0x97, 0xcc, 0x3f, 0x3a, 0xda, 0x43, 0x2b, 0x4e,
	0x11, 0xeb, 0x29, 0x31, 0x86, 0x8f, 0xf4, 0x6d, 0x32, 0xb7, 0xdd, 0x43, 0x0b, 0xb5, 0x37, 0x2f,
	0x57, 0xf7, 0x08, 0x6d, 0x72, 0x3c, 0xb7, 0xdd, 0xa3, 0x1b, 0x64, 0xa9, 0x6a, 0x48, 0x31, 0xc2,
	0xda, 0x9b, 0xaf, 0x06, 0xb2, 0xd9, 0x3e, 0x35, 0xae, 0xc9, 0xe8, 0x5d, 0xb2, 0x5c, 0x17, 0x77,
	0x6c, 0xa0, 0xda, 0x9b, 0xd7, 0xeb, 0xd5, 0xcb, 0x4c, 0xd1, 0x8f, 0xa7, 0x84, 0x74, 0x8d, 0x5c,
	0xc4, 0xfa, 0x86, 0xad, 0x52, 0x7b, 0x93, 0x56, 0x52, 0xa6, 0x35, 0x2f, 0xf6, 0x04, 0x74, 0xd2,
	0xf8, 0xf3, 0x0f, 0x76, 0x27, 0xd3, 0xdb, 0xd5, 0xe7, 0xd3, 0x32, 0xb3, 0x8d, 0x5a, 0xb9, 0x3a,
	0xb1, 0xd5, 0x0b, 0x45, 0xdc, 0x8d, 0x31, 0x6e, 0x7d, 0x11, 0xae, 0x17, 0x8e, 0xf5, 0xaa, 0x2c,
	0x38, 0x65, 0xe3, 0x4f, 0x4d, 0x5f, 0x27, 0x17, 0x20, 0x61, 0xe3, 0xae, 0x76, 0x5a, 0x58, 0xa7,
	0x39, 0x3c, 0xc6, 0xcf, 0x34, 0x22, 0x8b, 0x21, 0x97, 0x74, 0x5e, 0x43, 0xca, 0x57, 0x02, 0xe5,
	0x4c, 0x86, 0x89, 0x2b, 0x22, 0xfa, 0x00, 0x7d, 0x7c, 0xa0, 0xad, 0xc0, 0xd5, 0xe5, 0xd2, 0x34,
	0xe2, 0x76, 0x15, 0x1f, 0x64, 0xb8, 0xbd, 0x81, 0xaf, 0x10, 0xd2, 0xc0, 0xc0, 0x7c, 0xd2, 0xf0,
	0xde, 0x0d, 0x1f, 0xe8, 0x4f, 0xe7, 0xc8, 0x65, 0x5e, 0x3a, 0x0d, 0xdd, 0x72, 0x3f, 0xd5, 0x39,
	0x97, 0x0a, 0x77, 0x5e, 0xcb, 0x5b, 0xff, 0xe1, 0xb7, 0xb9, 0xbf, 0x6a, 0xd1, 0x7f, 0x6f, 0xed,
	0xe0, 0x87, 0xd0, 0x1e, 0xa1, 0xe7, 0x54, 0x3c, 0x96, 0xad, 0x65, 0xc2, 0x59, 0xa1, 0x12, 0x73,
	0x5a, 0xb8, 0x9b, 0xcd, 0xb9, 0x66, 0x20, 0x98, 0x11, 0x56, 0x67, 0xc7, 0xa8, 0x49, 0xe8, 0x7e,
	0xea, 0xa6, 0xfa, 0x58, 0x72, 0xe8, 0x87, 0xa3, 0xa7, 0xdf, 0x3f, 0xdc, 0xbd, 0xcf, 0xc2, 0x9f,
	0xef, 0x1a, 0x1b, 0xae, 0x81, 0x0e, 0xa3, 0xd0, 0xa3, 0xa3, 0x3d, 0xfc, 0xa3, 0x40, 0xcd, 0x89,
	0x39, 0x0a, 0xf4, 0x80, 0x4a, 0x62, 0xd9, 0xfb, 0xb7, 0xf1, 0xf3, 0xdd, 0xbb, 0x77, 0xd8, 0xef,
	0x36, 0xcc, 0x14, 0x35, 0x36, 0xf1, 0xb5, 0x3e, 0x55, 0xdf, 0xad, 0x4d, 0xce, 0xd8, 0xd8, 0xb9,
	0xc2, 0xde, 0x5f, 0x5f, 0x3f, 0x73, 0xfd, 0xf5, 0x78, 0xb5, 0x3a, 0xf1, 0xd7, 0xa6, 0x3f, 0x24,
	0xd7, 0x6a, 0x1a, 0xff, 0x83, 0x27, 0x63, 0xd1, 0xb9, 0x7e, 0x7e, 0x63, 0xee, 0x1b, 0xb3, 0x8a,
	0xa1, 0x39, 0xc9, 0xd9, 0x28, 0xbe, 0x5a, 0x9d, 0xc3, 0xf8, 0xb2, 0x0d, 0x30, 0x83, 0x05, 0xb4,
	0xf0, 0x9d, 0xff, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x38, 0x36, 0xe5, 0xd1, 0x9f, 0x1e, 0x00, 0x00,
}
