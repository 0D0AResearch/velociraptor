// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import proto1 "www.velocidex.com/golang/velociraptor/actions/proto"
import _ "www.velocidex.com/golang/velociraptor/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Information about Velociraptor. This is a psuedo config item - it
// will never be read from config files, but can be used in VQL
// queries. It will be written to config files as metadata about the
// version read from.
type Version struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Commit               string   `protobuf:"bytes,4,opt,name=commit,proto3" json:"commit,omitempty"`
	BuildTime            string   `protobuf:"bytes,5,opt,name=build_time,json=buildTime,proto3" json:"build_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_6ba317a5d477e814, []int{0}
}
func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (dst *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(dst, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Version) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Version) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Version) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func (m *Version) GetBuildTime() string {
	if m != nil {
		return m.BuildTime
	}
	return ""
}

// The client's state which are persisted in the writeback file.
type Writeback struct {
	PrivateKey             string   `protobuf:"bytes,7,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	HuntLastTimestamp      uint64   `protobuf:"varint,13,opt,name=hunt_last_timestamp,json=huntLastTimestamp,proto3" json:"hunt_last_timestamp,omitempty"`
	LastServerSerialNumber uint64   `protobuf:"varint,14,opt,name=last_server_serial_number,json=lastServerSerialNumber,proto3" json:"last_server_serial_number,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *Writeback) Reset()         { *m = Writeback{} }
func (m *Writeback) String() string { return proto.CompactTextString(m) }
func (*Writeback) ProtoMessage()    {}
func (*Writeback) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_6ba317a5d477e814, []int{1}
}
func (m *Writeback) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Writeback.Unmarshal(m, b)
}
func (m *Writeback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Writeback.Marshal(b, m, deterministic)
}
func (dst *Writeback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Writeback.Merge(dst, src)
}
func (m *Writeback) XXX_Size() int {
	return xxx_messageInfo_Writeback.Size(m)
}
func (m *Writeback) XXX_DiscardUnknown() {
	xxx_messageInfo_Writeback.DiscardUnknown(m)
}

var xxx_messageInfo_Writeback proto.InternalMessageInfo

func (m *Writeback) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *Writeback) GetHuntLastTimestamp() uint64 {
	if m != nil {
		return m.HuntLastTimestamp
	}
	return 0
}

func (m *Writeback) GetLastServerSerialNumber() uint64 {
	if m != nil {
		return m.LastServerSerialNumber
	}
	return 0
}

type ClientConfig struct {
	Labels               []string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty"`
	ServerUrls           []string `protobuf:"bytes,8,rep,name=server_urls,json=serverUrls,proto3" json:"server_urls,omitempty"`
	CaCertificate        string   `protobuf:"bytes,11,opt,name=ca_certificate,json=caCertificate,proto3" json:"ca_certificate,omitempty"`
	Nonce                string   `protobuf:"bytes,12,opt,name=nonce,proto3" json:"nonce,omitempty"`
	WritebackLinux       string   `protobuf:"bytes,9,opt,name=writeback_linux,json=writebackLinux,proto3" json:"writeback_linux,omitempty"`
	WritebackWindows     string   `protobuf:"bytes,10,opt,name=writeback_windows,json=writebackWindows,proto3" json:"writeback_windows,omitempty"`
	MaxPoll              uint64   `protobuf:"varint,15,opt,name=max_poll,json=maxPoll,proto3" json:"max_poll,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientConfig) Reset()         { *m = ClientConfig{} }
func (m *ClientConfig) String() string { return proto.CompactTextString(m) }
func (*ClientConfig) ProtoMessage()    {}
func (*ClientConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_6ba317a5d477e814, []int{2}
}
func (m *ClientConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientConfig.Unmarshal(m, b)
}
func (m *ClientConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientConfig.Marshal(b, m, deterministic)
}
func (dst *ClientConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientConfig.Merge(dst, src)
}
func (m *ClientConfig) XXX_Size() int {
	return xxx_messageInfo_ClientConfig.Size(m)
}
func (m *ClientConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ClientConfig proto.InternalMessageInfo

func (m *ClientConfig) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ClientConfig) GetServerUrls() []string {
	if m != nil {
		return m.ServerUrls
	}
	return nil
}

func (m *ClientConfig) GetCaCertificate() string {
	if m != nil {
		return m.CaCertificate
	}
	return ""
}

func (m *ClientConfig) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *ClientConfig) GetWritebackLinux() string {
	if m != nil {
		return m.WritebackLinux
	}
	return ""
}

func (m *ClientConfig) GetWritebackWindows() string {
	if m != nil {
		return m.WritebackWindows
	}
	return ""
}

func (m *ClientConfig) GetMaxPoll() uint64 {
	if m != nil {
		return m.MaxPoll
	}
	return 0
}

type APIConfig struct {
	BindAddress          string   `protobuf:"bytes,1,opt,name=bind_address,json=bindAddress,proto3" json:"bind_address,omitempty"`
	BindPort             uint32   `protobuf:"varint,2,opt,name=bind_port,json=bindPort,proto3" json:"bind_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *APIConfig) Reset()         { *m = APIConfig{} }
func (m *APIConfig) String() string { return proto.CompactTextString(m) }
func (*APIConfig) ProtoMessage()    {}
func (*APIConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_6ba317a5d477e814, []int{3}
}
func (m *APIConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIConfig.Unmarshal(m, b)
}
func (m *APIConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIConfig.Marshal(b, m, deterministic)
}
func (dst *APIConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIConfig.Merge(dst, src)
}
func (m *APIConfig) XXX_Size() int {
	return xxx_messageInfo_APIConfig.Size(m)
}
func (m *APIConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_APIConfig.DiscardUnknown(m)
}

var xxx_messageInfo_APIConfig proto.InternalMessageInfo

func (m *APIConfig) GetBindAddress() string {
	if m != nil {
		return m.BindAddress
	}
	return ""
}

func (m *APIConfig) GetBindPort() uint32 {
	if m != nil {
		return m.BindPort
	}
	return 0
}

type GUIConfig struct {
	BindAddress          string   `protobuf:"bytes,1,opt,name=bind_address,json=bindAddress,proto3" json:"bind_address,omitempty"`
	BindPort             uint32   `protobuf:"varint,2,opt,name=bind_port,json=bindPort,proto3" json:"bind_port,omitempty"`
	InternalCidr         []string `protobuf:"bytes,3,rep,name=internal_cidr,json=internalCidr,proto3" json:"internal_cidr,omitempty"`
	VpnCidr              []string `protobuf:"bytes,4,rep,name=vpn_cidr,json=vpnCidr,proto3" json:"vpn_cidr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GUIConfig) Reset()         { *m = GUIConfig{} }
func (m *GUIConfig) String() string { return proto.CompactTextString(m) }
func (*GUIConfig) ProtoMessage()    {}
func (*GUIConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_6ba317a5d477e814, []int{4}
}
func (m *GUIConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GUIConfig.Unmarshal(m, b)
}
func (m *GUIConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GUIConfig.Marshal(b, m, deterministic)
}
func (dst *GUIConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GUIConfig.Merge(dst, src)
}
func (m *GUIConfig) XXX_Size() int {
	return xxx_messageInfo_GUIConfig.Size(m)
}
func (m *GUIConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GUIConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GUIConfig proto.InternalMessageInfo

func (m *GUIConfig) GetBindAddress() string {
	if m != nil {
		return m.BindAddress
	}
	return ""
}

func (m *GUIConfig) GetBindPort() uint32 {
	if m != nil {
		return m.BindPort
	}
	return 0
}

func (m *GUIConfig) GetInternalCidr() []string {
	if m != nil {
		return m.InternalCidr
	}
	return nil
}

func (m *GUIConfig) GetVpnCidr() []string {
	if m != nil {
		return m.VpnCidr
	}
	return nil
}

type CAConfig struct {
	PrivateKey           string   `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CAConfig) Reset()         { *m = CAConfig{} }
func (m *CAConfig) String() string { return proto.CompactTextString(m) }
func (*CAConfig) ProtoMessage()    {}
func (*CAConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_6ba317a5d477e814, []int{5}
}
func (m *CAConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CAConfig.Unmarshal(m, b)
}
func (m *CAConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CAConfig.Marshal(b, m, deterministic)
}
func (dst *CAConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CAConfig.Merge(dst, src)
}
func (m *CAConfig) XXX_Size() int {
	return xxx_messageInfo_CAConfig.Size(m)
}
func (m *CAConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CAConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CAConfig proto.InternalMessageInfo

func (m *CAConfig) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

type FrontendConfig struct {
	BindAddress          string   `protobuf:"bytes,1,opt,name=bind_address,json=bindAddress,proto3" json:"bind_address,omitempty"`
	BindPort             uint32   `protobuf:"varint,2,opt,name=bind_port,json=bindPort,proto3" json:"bind_port,omitempty"`
	Certificate          string   `protobuf:"bytes,3,opt,name=certificate,proto3" json:"certificate,omitempty"`
	PrivateKey           string   `protobuf:"bytes,4,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	ClientLeaseTime      uint32   `protobuf:"varint,5,opt,name=client_lease_time,json=clientLeaseTime,proto3" json:"client_lease_time,omitempty"`
	DnsName              string   `protobuf:"bytes,6,opt,name=dns_name,json=dnsName,proto3" json:"dns_name,omitempty"`
	ArtifactsPath        string   `protobuf:"bytes,7,opt,name=artifacts_path,json=artifactsPath,proto3" json:"artifacts_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FrontendConfig) Reset()         { *m = FrontendConfig{} }
func (m *FrontendConfig) String() string { return proto.CompactTextString(m) }
func (*FrontendConfig) ProtoMessage()    {}
func (*FrontendConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_6ba317a5d477e814, []int{6}
}
func (m *FrontendConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FrontendConfig.Unmarshal(m, b)
}
func (m *FrontendConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FrontendConfig.Marshal(b, m, deterministic)
}
func (dst *FrontendConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FrontendConfig.Merge(dst, src)
}
func (m *FrontendConfig) XXX_Size() int {
	return xxx_messageInfo_FrontendConfig.Size(m)
}
func (m *FrontendConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_FrontendConfig.DiscardUnknown(m)
}

var xxx_messageInfo_FrontendConfig proto.InternalMessageInfo

func (m *FrontendConfig) GetBindAddress() string {
	if m != nil {
		return m.BindAddress
	}
	return ""
}

func (m *FrontendConfig) GetBindPort() uint32 {
	if m != nil {
		return m.BindPort
	}
	return 0
}

func (m *FrontendConfig) GetCertificate() string {
	if m != nil {
		return m.Certificate
	}
	return ""
}

func (m *FrontendConfig) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *FrontendConfig) GetClientLeaseTime() uint32 {
	if m != nil {
		return m.ClientLeaseTime
	}
	return 0
}

func (m *FrontendConfig) GetDnsName() string {
	if m != nil {
		return m.DnsName
	}
	return ""
}

func (m *FrontendConfig) GetArtifactsPath() string {
	if m != nil {
		return m.ArtifactsPath
	}
	return ""
}

type DatastoreConfig struct {
	Implementation       string   `protobuf:"bytes,1,opt,name=implementation,proto3" json:"implementation,omitempty"`
	Location             string   `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	FilestoreDirectory   string   `protobuf:"bytes,3,opt,name=filestore_directory,json=filestoreDirectory,proto3" json:"filestore_directory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatastoreConfig) Reset()         { *m = DatastoreConfig{} }
func (m *DatastoreConfig) String() string { return proto.CompactTextString(m) }
func (*DatastoreConfig) ProtoMessage()    {}
func (*DatastoreConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_6ba317a5d477e814, []int{7}
}
func (m *DatastoreConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatastoreConfig.Unmarshal(m, b)
}
func (m *DatastoreConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatastoreConfig.Marshal(b, m, deterministic)
}
func (dst *DatastoreConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatastoreConfig.Merge(dst, src)
}
func (m *DatastoreConfig) XXX_Size() int {
	return xxx_messageInfo_DatastoreConfig.Size(m)
}
func (m *DatastoreConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DatastoreConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DatastoreConfig proto.InternalMessageInfo

func (m *DatastoreConfig) GetImplementation() string {
	if m != nil {
		return m.Implementation
	}
	return ""
}

func (m *DatastoreConfig) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *DatastoreConfig) GetFilestoreDirectory() string {
	if m != nil {
		return m.FilestoreDirectory
	}
	return ""
}

type FlowsConfig struct {
	InterrogateAdditionalQueries *proto1.VQLCollectorArgs `protobuf:"bytes,1,opt,name=interrogate_additional_queries,json=interrogateAdditionalQueries,proto3" json:"interrogate_additional_queries,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                 `json:"-"`
	XXX_unrecognized             []byte                   `json:"-"`
	XXX_sizecache                int32                    `json:"-"`
}

func (m *FlowsConfig) Reset()         { *m = FlowsConfig{} }
func (m *FlowsConfig) String() string { return proto.CompactTextString(m) }
func (*FlowsConfig) ProtoMessage()    {}
func (*FlowsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_6ba317a5d477e814, []int{8}
}
func (m *FlowsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowsConfig.Unmarshal(m, b)
}
func (m *FlowsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowsConfig.Marshal(b, m, deterministic)
}
func (dst *FlowsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowsConfig.Merge(dst, src)
}
func (m *FlowsConfig) XXX_Size() int {
	return xxx_messageInfo_FlowsConfig.Size(m)
}
func (m *FlowsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_FlowsConfig proto.InternalMessageInfo

func (m *FlowsConfig) GetInterrogateAdditionalQueries() *proto1.VQLCollectorArgs {
	if m != nil {
		return m.InterrogateAdditionalQueries
	}
	return nil
}

type Config struct {
	Version              *Version         `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	Client               *ClientConfig    `protobuf:"bytes,1,opt,name=Client,proto3" json:"Client,omitempty"`
	API                  *APIConfig       `protobuf:"bytes,2,opt,name=API,proto3" json:"API,omitempty"`
	GUI                  *GUIConfig       `protobuf:"bytes,3,opt,name=GUI,proto3" json:"GUI,omitempty"`
	CA                   *CAConfig        `protobuf:"bytes,4,opt,name=CA,proto3" json:"CA,omitempty"`
	Frontend             *FrontendConfig  `protobuf:"bytes,5,opt,name=Frontend,proto3" json:"Frontend,omitempty"`
	Datastore            *DatastoreConfig `protobuf:"bytes,6,opt,name=Datastore,proto3" json:"Datastore,omitempty"`
	Flows                *FlowsConfig     `protobuf:"bytes,7,opt,name=Flows,proto3" json:"Flows,omitempty"`
	Writeback            *Writeback       `protobuf:"bytes,9,opt,name=writeback,proto3" json:"writeback,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_6ba317a5d477e814, []int{9}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Config) GetClient() *ClientConfig {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *Config) GetAPI() *APIConfig {
	if m != nil {
		return m.API
	}
	return nil
}

func (m *Config) GetGUI() *GUIConfig {
	if m != nil {
		return m.GUI
	}
	return nil
}

func (m *Config) GetCA() *CAConfig {
	if m != nil {
		return m.CA
	}
	return nil
}

func (m *Config) GetFrontend() *FrontendConfig {
	if m != nil {
		return m.Frontend
	}
	return nil
}

func (m *Config) GetDatastore() *DatastoreConfig {
	if m != nil {
		return m.Datastore
	}
	return nil
}

func (m *Config) GetFlows() *FlowsConfig {
	if m != nil {
		return m.Flows
	}
	return nil
}

func (m *Config) GetWriteback() *Writeback {
	if m != nil {
		return m.Writeback
	}
	return nil
}

func init() {
	proto.RegisterType((*Version)(nil), "proto.Version")
	proto.RegisterType((*Writeback)(nil), "proto.Writeback")
	proto.RegisterType((*ClientConfig)(nil), "proto.ClientConfig")
	proto.RegisterType((*APIConfig)(nil), "proto.APIConfig")
	proto.RegisterType((*GUIConfig)(nil), "proto.GUIConfig")
	proto.RegisterType((*CAConfig)(nil), "proto.CAConfig")
	proto.RegisterType((*FrontendConfig)(nil), "proto.FrontendConfig")
	proto.RegisterType((*DatastoreConfig)(nil), "proto.DatastoreConfig")
	proto.RegisterType((*FlowsConfig)(nil), "proto.FlowsConfig")
	proto.RegisterType((*Config)(nil), "proto.Config")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_config_6ba317a5d477e814) }

var fileDescriptor_config_6ba317a5d477e814 = []byte{
	// 1979 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0xcd, 0x73, 0x1c, 0x47,
	0x15, 0xaf, 0xb1, 0x64, 0x7d, 0xf4, 0x5a, 0xb2, 0xdd, 0x4e, 0x9c, 0xc5, 0xe5, 0xe0, 0xce, 0x12,
	0xb0, 0x1c, 0x52, 0x23, 0x69, 0xed, 0x98, 0xd8, 0x45, 0xca, 0x59, 0xad, 0x3f, 0x10, 0x51, 0x5c,
	0xca, 0xd8, 0xb2, 0xa8, 0x00, 0xb5, 0xf4, 0xce, 0xf4, 0xee, 0xb6, 0xdd, 0xd3, 0x3d, 0xe9, 0xee,
	0xd1, 0x48, 0x37, 0xe0, 0x04, 0xff, 0x00, 0x5f, 0x55, 0x5c, 0xf8, 0xa8, 0xe2, 0x90, 0x03, 0x77,
	0x0e, 0x5c, 0xf8, 0x3b, 0x38, 0xc0, 0x85, 0x03, 0x07, 0xb8, 0x73, 0xa0, 0xfa, 0x75, 0xcf, 0xec,
	0xae, 0x62, 0x0a, 0x0e, 0x39, 0x70, 0x91, 0xb6, 0xba, 0xdf, 0xfb, 0xfd, 0x7e, 0xaf, 0xfb, 0xbd,
	0x7e, 0x6f, 0xd0, 0xb9, 0x54, 0xc9, 0x11, 0x1f, 0xc7, 0x85, 0x56, 0x56, 0xe1, 0xb3, 0xf0, 0xef,
	0xca, 0xdd, 0xaa, 0xaa, 0xe2, 0x23, 0x26, 0x54, 0xca, 0x33, 0x76, 0x1c, 0xa7, 0x2a, 0xdf, 0x1c,
	0x2b, 0x41, 0xe5, 0x78, 0xd3, 0x2f, 0x6a, 0x5a, 0x58, 0xa5, 0x37, 0xc1, 0x78, 0xd3, 0xb0, 0x9c,
	0x4a, 0xcb, 0x53, 0x0f, 0x71, 0xe5, 0xbd, 0xff, 0xcd, 0x97, 0xa6, 0x96, 0x2b, 0x69, 0x02, 0xc6,
	0xd1, 0x27, 0xc2, 0xbb, 0x77, 0xfe, 0x71, 0x06, 0x2d, 0x3f, 0x63, 0xda, 0x70, 0x25, 0x71, 0x8c,
	0x16, 0x25, 0xcd, 0x59, 0x3b, 0x22, 0xd1, 0xc6, 0xea, 0xce, 0x95, 0xbf, 0xfc, 0xeb, 0xaf, 0x7f,
	0x8a, 0x5e, 0xc1, 0xf8, 0xe9, 0x84, 0x91, 0x54, 0x70, 0x26, 0xed, 0x75, 0x43, 0x9c, 0x41, 0x9c,
	0x80, 0x1d, 0x7e, 0x8c, 0x5a, 0x19, 0x33, 0xa9, 0xe6, 0x85, 0xc3, 0x6e, 0x9f, 0x01, 0xb7, 0xb7,
	0xc1, 0xed, 0x2b, 0xf8, 0xcd, 0x39, 0x37, 0xa1, 0xe4, 0x98, 0xcc, 0x18, 0x13, 0x63, 0x35, 0x97,
	0xe3, 0x64, 0x16, 0x00, 0x53, 0xb4, 0x7c, 0xe4, 0xa5, 0xb4, 0x17, 0x00, 0xeb, 0x11, 0x60, 0xf5,
	0xf0, 0xbd, 0x39, 0xac, 0x60, 0x13, 0x20, 0x48, 0x69, 0xdc, 0x5f, 0x4a, 0xea, 0x73, 0xa9, 0xf7,
	0xdd, 0xaa, 0x49, 0x27, 0xcc, 0xe9, 0xad, 0x71, 0xf1, 0x3d, 0xb4, 0x94, 0xaa, 0x3c, 0xe7, 0xb6,
	0xbd, 0x08, 0x0c, 0xd7, 0x81, 0xe1, 0x0d, 0x7c, 0x6d, 0x8e, 0x61, 0xcc, 0x2d, 0xf1, 0x66, 0x81,
	0x24, 0x4e, 0x82, 0x1b, 0xee, 0x21, 0x34, 0x2c, 0xb9, 0xc8, 0x06, 0x96, 0xe7, 0xac, 0x7d, 0x16,
	0x40, 0x3a, 0x00, 0x72, 0x15, 0x5f, 0x39, 0x9c, 0x30, 0x49, 0x6c, 0x83, 0x44, 0x2a, 0x6a, 0x88,
	0xb3, 0xb6, 0x71, 0xb2, 0x0a, 0x5e, 0x4f, 0x79, 0xce, 0x3a, 0x9f, 0x2e, 0xa0, 0xd5, 0x43, 0xcd,
	0x2d, 0x1b, 0xd2, 0xf4, 0x05, 0x4e, 0x50, 0xab, 0xd0, 0xfc, 0x88, 0x5a, 0x36, 0x78, 0xc1, 0x4e,
	0xda, 0xcb, 0x80, 0xb8, 0x0d, 0x88, 0x5f, 0xc5, 0x37, 0xe6, 0x64, 0x05, 0x3b, 0xf2, 0x82, 0x9d,
	0x10, 0x2e, 0xc9, 0xfe, 0x83, 0x0f, 0x09, 0x93, 0xa9, 0xca, 0x40, 0x20, 0x0a, 0xbb, 0x1f, 0xb0,
	0x13, 0xfc, 0x3d, 0x74, 0x69, 0x52, 0x4a, 0x3b, 0x10, 0xd4, 0x58, 0x10, 0x6a, 0x2c, 0xcd, 0x8b,
	0xf6, 0x1a, 0x89, 0x36, 0x16, 0x77, 0xb6, 0x00, 0xfb, 0x2d, 0xbc, 0xe1, 0xb0, 0x9d, 0x05, 0x71,
	0xb6, 0xa4, 0x31, 0x23, 0x76, 0xc2, 0x4d, 0x1d, 0x81, 0xa6, 0x32, 0x4e, 0x2e, 0x3a, 0x83, 0x3d,
	0x6a, 0xec, 0xd3, 0xda, 0x06, 0xff, 0x2d, 0x42, 0x5f, 0x00, 0x74, 0xc3, 0xf4, 0x11, 0xd3, 0xee,
	0x1f, 0xa7, 0x62, 0x20, 0xcb, 0x7c, 0xc8, 0x74, 0x7b, 0x1d, 0x88, 0x3e, 0x8d, 0x80, 0xe9, 0xb7,
	0x11, 0xfe, 0x55, 0xd4, 0x70, 0xa5, 0x4c, 0x5b, 0x3e, 0xe2, 0xa9, 0x8b, 0xc3, 0x3b, 0x11, 0xef,
	0x44, 0x2a, 0x46, 0x0c, 0xad, 0xc8, 0x48, 0xab, 0x1c, 0xce, 0xd0, 0x23, 0xc7, 0xa4, 0x0f, 0x4a,
	0x0c, 0xd1, 0x6c, 0x54, 0x1a, 0x46, 0xac, 0x22, 0xa9, 0x92, 0x92, 0xa5, 0xd6, 0xfd, 0xf4, 0x46,
	0x86, 0x54, 0xdc, 0x4e, 0x88, 0x12, 0x19, 0xd3, 0xf3, 0xa8, 0x86, 0x50, 0x43, 0x0a, 0xaa, 0x2d,
	0x51, 0xa3, 0x60, 0x0c, 0xc7, 0xa7, 0x95, 0xa5, 0x90, 0x87, 0x50, 0x05, 0xa9, 0x12, 0x71, 0x72,
	0xd9, 0xe9, 0x7b, 0x02, 0x26, 0x4f, 0x00, 0xe2, 0x31, 0x20, 0x74, 0xfe, 0xbe, 0x84, 0xce, 0x79,
	0x0d, 0x7d, 0x28, 0x5d, 0xfc, 0x83, 0x08, 0x2d, 0x09, 0x3a, 0x64, 0xc2, 0xb4, 0x97, 0xc8, 0xc2,
	0xc6, 0xea, 0x0e, 0x87, 0x38, 0x53, 0x4c, 0x7b, 0x44, 0x70, 0x03, 0x54, 0x7e, 0x7f, 0x36, 0x17,
	0x26, 0xd4, 0xc4, 0xe4, 0xa9, 0x3b, 0x5a, 0x2a, 0x84, 0xaa, 0x0c, 0x31, 0x4c, 0xb0, 0xd4, 0xb2,
	0x8c, 0x8c, 0xb5, 0x2a, 0x0b, 0xe3, 0xbc, 0xd2, 0x10, 0xaa, 0x55, 0x64, 0xc8, 0x88, 0xa5, 0x7a,
	0xcc, 0xac, 0xb3, 0xe0, 0x12, 0xee, 0xc8, 0xc4, 0x49, 0x20, 0xc6, 0x14, 0xb5, 0xc2, 0xc9, 0x97,
	0x5a, 0x98, 0xf6, 0x0a, 0xe8, 0x78, 0x1f, 0x74, 0xdc, 0xc5, 0xef, 0x4e, 0x75, 0x84, 0x90, 0x0f,
	0x92, 0xbd, 0x39, 0x31, 0x15, 0x17, 0x82, 0x58, 0x7d, 0x32, 0x7f, 0x9a, 0x71, 0x82, 0xbc, 0xfd,
	0x81, 0x16, 0x06, 0xff, 0x38, 0x42, 0xeb, 0x29, 0x1d, 0xcc, 0x5c, 0x58, 0xbb, 0x05, 0xc9, 0x39,
	0x04, 0x9a, 0xef, 0xe0, 0x8f, 0xdd, 0xa5, 0xf6, 0x7b, 0xd7, 0xcd, 0xdc, 0xa5, 0x42, 0x46, 0x7a,
	0xcd, 0xfb, 0x0f, 0x3e, 0x74, 0x21, 0x9f, 0x66, 0x2d, 0x8d, 0x25, 0x54, 0x9e, 0xd4, 0xda, 0x0c,
	0x1f, 0x4b, 0x96, 0xf9, 0x1b, 0x84, 0xd4, 0xeb, 0xf7, 0xe2, 0x64, 0x2d, 0xa5, 0xfd, 0x29, 0x28,
	0xfe, 0x43, 0x84, 0xce, 0x4a, 0x25, 0x53, 0xd6, 0x3e, 0x07, 0x12, 0x7e, 0xe3, 0x53, 0xeb, 0x97,
	0x11, 0xfe, 0x45, 0xd4, 0x23, 0x66, 0x42, 0x35, 0xcb, 0x08, 0x18, 0x7c, 0x26, 0xca, 0x42, 0x33,
	0xc3, 0xa4, 0xf5, 0x42, 0x02, 0x25, 0x6c, 0x68, 0xf6, 0xdc, 0x85, 0x5d, 0x9f, 0x79, 0x35, 0xe1,
	0xe9, 0x84, 0x64, 0x8a, 0x48, 0x65, 0x6b, 0x27, 0xaf, 0xc7, 0xe5, 0x8b, 0x51, 0x84, 0x5b, 0x92,
	0x3b, 0xe9, 0x43, 0x46, 0x58, 0x3e, 0x64, 0x59, 0x08, 0xd2, 0xce, 0x56, 0xa8, 0x7f, 0xdc, 0x4b,
	0x0d, 0xb9, 0x15, 0x27, 0x5e, 0x33, 0x4e, 0xd1, 0xf9, 0xaa, 0xae, 0xf7, 0x81, 0xe0, 0xb2, 0x3c,
	0x6e, 0xaf, 0x42, 0x18, 0x77, 0x21, 0x8a, 0x5b, 0xb8, 0xdb, 0x23, 0x05, 0xb5, 0x13, 0x52, 0x4d,
	0x98, 0x66, 0x04, 0x2c, 0xa6, 0xba, 0x9c, 0x56, 0x70, 0x27, 0x42, 0xa5, 0x54, 0x10, 0x63, 0xa9,
	0x65, 0x71, 0xb2, 0xde, 0x40, 0xee, 0x39, 0x7b, 0xcc, 0xd1, 0xc5, 0x29, 0x49, 0xc5, 0x65, 0xa6,
	0x2a, 0xd3, 0x46, 0x40, 0xf3, 0x75, 0xa0, 0xb9, 0x8d, 0x6f, 0xcd, 0xd1, 0x04, 0x9b, 0xff, 0x4a,
	0x74, 0xa1, 0x81, 0x3d, 0xf4, 0x1e, 0xf8, 0xdb, 0x68, 0x25, 0xa7, 0xc7, 0x83, 0x42, 0x09, 0xd1,
	0x3e, 0x0f, 0xa5, 0x5e, 0x67, 0xde, 0x4d, 0x77, 0xc8, 0x39, 0x3d, 0xe6, 0x79, 0x99, 0xd7, 0x75,
	0x0d, 0x59, 0x98, 0x2a, 0x99, 0x19, 0x32, 0x64, 0xb6, 0x62, 0x4c, 0xd6, 0xd7, 0xe0, 0x00, 0x4c,
	0xdc, 0x5d, 0xb8, 0xbd, 0xb5, 0x95, 0x2c, 0xe7, 0xf4, 0x78, 0x5f, 0x09, 0xd1, 0xf9, 0x73, 0x84,
	0x56, 0x7b, 0xfb, 0xbb, 0xa1, 0xd6, 0x7e, 0x1e, 0xa1, 0x73, 0x43, 0x2e, 0xb3, 0x01, 0xcd, 0x32,
	0xcd, 0x8c, 0x09, 0xbd, 0xe9, 0x08, 0xf8, 0x0a, 0x2c, 0x7b, 0x7e, 0x19, 0x2a, 0x86, 0xcb, 0x8c,
	0x8c, 0x93, 0xfd, 0x3e, 0x61, 0x32, 0x2b, 0x14, 0xf7, 0x77, 0xce, 0x0d, 0x31, 0x13, 0x55, 0x8a,
	0x8c, 0x94, 0xa6, 0xa4, 0x42, 0x9c, 0x10, 0x25, 0xc5, 0x89, 0xbb, 0xc4, 0xed, 0xee, 0xd7, 0xe2,
	0xad, 0x78, 0x2b, 0xde, 0x7e, 0x9b, 0x28, 0x3b, 0x61, 0xba, 0xe2, 0x86, 0xb9, 0x75, 0x53, 0x6a,
	0x78, 0x65, 0x0a, 0xad, 0x0a, 0xa6, 0x85, 0xcb, 0xd3, 0xd4, 0x2d, 0x71, 0x1b, 0x27, 0x2d, 0x47,
	0x12, 0x38, 0xf1, 0x3b, 0x68, 0x15, 0xa4, 0x15, 0x4a, 0x5b, 0x68, 0x7e, 0x6b, 0x3b, 0x6d, 0xd0,
	0x85, 0xf1, 0x85, 0x7d, 0xa5, 0x6d, 0x23, 0xca, 0x55, 0xd6, 0x8a, 0xfb, 0xe5, 0x56, 0x3b, 0x3f,
	0x5c, 0x44, 0xab, 0x8f, 0x0e, 0xea, 0x00, 0x7f, 0xf6, 0xf2, 0x00, 0x4b, 0x00, 0x52, 0x38, 0x3f,
	0x1d, 0xe0, 0xa3, 0x83, 0xdd, 0xff, 0xef, 0xf8, 0xf0, 0x4f, 0x23, 0xb4, 0xc6, 0xa5, 0x65, 0x5a,
	0x52, 0x31, 0x48, 0x79, 0xa6, 0xdb, 0x0b, 0xf0, 0x3a, 0x69, 0xf0, 0x15, 0xf8, 0x79, 0x7f, 0xf7,
	0x7e, 0x42, 0x42, 0xb8, 0x0c, 0xde, 0xbd, 0xda, 0x9c, 0x48, 0x66, 0x2b, 0xa5, 0x5f, 0x18, 0xb2,
	0xc1, 0xe2, 0x71, 0x4c, 0xb6, 0xef, 0x74, 0xe3, 0xed, 0xdb, 0xef, 0xba, 0x30, 0x36, 0xb7, 0x6f,
	0xdf, 0x88, 0xc9, 0x21, 0x23, 0xd0, 0x03, 0x5c, 0xd8, 0xee, 0xf5, 0x9f, 0xa8, 0x0a, 0x0a, 0xb0,
	0x06, 0xd8, 0x64, 0xc7, 0x01, 0x89, 0xa7, 0xae, 0x00, 0xcf, 0xd5, 0x1b, 0x7d, 0x9e, 0x69, 0xfc,
	0xa3, 0x08, 0xad, 0x1c, 0x15, 0xd2, 0x8b, 0x5a, 0x04, 0x51, 0x39, 0x88, 0x1a, 0x63, 0xf6, 0x59,
	0x51, 0x47, 0x85, 0xfc, 0xdc, 0xf5, 0x2c, 0x1f, 0x15, 0xd2, 0x49, 0xe9, 0xfc, 0x3a, 0x42, 0x2b,
	0xfd, 0x5e, 0xc8, 0x81, 0x9f, 0x44, 0xf3, 0x33, 0xc0, 0xa9, 0x14, 0x70, 0x35, 0x35, 0xdb, 0xfa,
	0xd5, 0x08, 0x38, 0xfa, 0xbd, 0x97, 0xbc, 0xb5, 0xdc, 0xf8, 0x47, 0x2a, 0x55, 0x5a, 0x33, 0x53,
	0x28, 0xd9, 0x3c, 0xac, 0x6c, 0xee, 0x95, 0xe6, 0x32, 0xf4, 0xd5, 0x78, 0xfe, 0x89, 0x9f, 0x9b,
	0x23, 0x3a, 0xff, 0x5c, 0x44, 0xeb, 0x0f, 0xb5, 0x92, 0x96, 0xc9, 0x2c, 0x68, 0xfd, 0xfe, 0xcb,
	0xf3, 0xf5, 0xbb, 0x20, 0xf6, 0x10, 0x1f, 0x9c, 0xce, 0xd7, 0x51, 0x70, 0x9f, 0x49, 0xda, 0xba,
	0xa1, 0xcf, 0xb4, 0x71, 0x38, 0xc0, 0xda, 0x02, 0x92, 0x53, 0x09, 0x41, 0x46, 0x4a, 0x93, 0xe7,
	0x6a, 0x68, 0x3e, 0x9f, 0xbc, 0x7c, 0x8c, 0x5a, 0xb3, 0xbd, 0x6c, 0x61, 0x7e, 0x5a, 0xfd, 0xd6,
	0x3b, 0x5b, 0x77, 0xc8, 0x4c, 0xcb, 0x71, 0xa7, 0xdc, 0x68, 0x0f, 0xa3, 0x48, 0x32, 0x0b, 0x80,
	0x47, 0xf3, 0x97, 0xe6, 0xe7, 0xc9, 0x07, 0x80, 0x77, 0x0f, 0xbf, 0xf7, 0x1f, 0x2e, 0xed, 0x14,
	0xe4, 0xa9, 0x1b, 0x74, 0x11, 0xe7, 0xd4, 0xce, 0x0f, 0x73, 0xcf, 0xd0, 0x45, 0xff, 0x44, 0x0f,
	0x04, 0xa3, 0x86, 0x4d, 0x07, 0xcf, 0xb5, 0x9d, 0xb7, 0x80, 0xed, 0x4d, 0xdc, 0xf9, 0x86, 0xaa,
	0xfc, 0x88, 0x6d, 0x15, 0x01, 0xab, 0xba, 0x05, 0xe6, 0xcc, 0x18, 0x3a, 0x66, 0x26, 0x4e, 0xce,
	0xfb, 0x95, 0x3d, 0xb7, 0xeb, 0xe6, 0x38, 0xfc, 0x3e, 0x5a, 0xc9, 0xa4, 0x19, 0xc0, 0xc4, 0xbf,
	0x04, 0xe2, 0xbf, 0x0c, 0x70, 0xd7, 0xf0, 0xeb, 0x4e, 0xfc, 0xfd, 0xc7, 0x4f, 0x60, 0xd8, 0x3f,
	0xad, 0x3c, 0x4e, 0x96, 0x33, 0x69, 0x1e, 0xbb, 0xf9, 0xff, 0x09, 0x5a, 0xa7, 0xee, 0x3c, 0x68,
	0x6a, 0xcd, 0xc0, 0x75, 0x96, 0x30, 0xbd, 0x36, 0x87, 0xba, 0xef, 0xba, 0x8d, 0x55, 0xae, 0xae,
	0xb8, 0xeb, 0x88, 0x54, 0x90, 0xc6, 0x01, 0xa4, 0x2a, 0x9a, 0x25, 0x6b, 0xcd, 0x92, 0x33, 0xef,
	0xfc, 0xfe, 0x0c, 0x3a, 0x7f, 0x9f, 0x5a, 0x6a, 0xac, 0xd2, 0x2c, 0x24, 0x9d, 0x41, 0xeb, 0x3c,
	0x2f, 0x04, 0xcb, 0x99, 0xf4, 0x63, 0x5b, 0xc8, 0xba, 0x0f, 0x80, 0xe8, 0x01, 0xde, 0x72, 0x82,
	0x67, 0xc5, 0x66, 0x35, 0x00, 0x99, 0xf7, 0x73, 0xa4, 0xa5, 0x61, 0x71, 0xf7, 0xe2, 0x43, 0x2e,
	0xd8, 0x0e, 0x35, 0xcc, 0x51, 0x3d, 0x71, 0x96, 0xc9, 0x29, 0x0a, 0xbc, 0x87, 0x56, 0x5c, 0x1f,
	0x9c, 0xf9, 0xb4, 0x99, 0x9f, 0x9c, 0xc3, 0x1e, 0xd9, 0x50, 0x1a, 0xda, 0xea, 0x0d, 0x9f, 0xc8,
	0x33, 0xe4, 0x71, 0xd2, 0x20, 0xe0, 0x8f, 0xd1, 0xa5, 0x11, 0x17, 0x0c, 0xd6, 0x07, 0x19, 0xd7,
	0x2c, 0xb5, 0x4a, 0x9f, 0x84, 0x2c, 0xbc, 0x01, 0xc0, 0x5f, 0xc2, 0x6f, 0x40, 0xd6, 0x84, 0x43,
	0xf3, 0xfa, 0xcb, 0xc2, 0x1d, 0x12, 0xcb, 0x08, 0x78, 0xc7, 0x09, 0x6e, 0x50, 0xee, 0xd7, 0x20,
	0x9d, 0xdf, 0x45, 0xa8, 0xf5, 0xd0, 0xcd, 0x94, 0xd3, 0x9e, 0xf2, 0x45, 0x78, 0x81, 0xb4, 0x1a,
	0xbb, 0xf4, 0x9c, 0x1e, 0xff, 0xe0, 0x93, 0x92, 0x69, 0xce, 0x7c, 0xd5, 0xb6, 0xba, 0xaf, 0xf9,
	0x8f, 0xc0, 0xf8, 0xd9, 0x47, 0x7b, 0x7d, 0x25, 0x04, 0xc0, 0xf5, 0xf4, 0xd8, 0xec, 0xdc, 0x01,
	0x41, 0x37, 0xf1, 0x76, 0x6f, 0x7a, 0x73, 0xc1, 0xd5, 0x49, 0xe3, 0xc6, 0x94, 0xd0, 0x43, 0x76,
	0xa7, 0x2c, 0x64, 0xe4, 0x14, 0xc4, 0xc9, 0xd5, 0x19, 0xe6, 0xa9, 0xf7, 0x47, 0xde, 0xb9, 0xf3,
	0xc7, 0x45, 0xb4, 0x14, 0x54, 0x3e, 0x9c, 0x7e, 0xed, 0xad, 0x80, 0x9a, 0xf5, 0x5a, 0x8d, 0x5f,
	0xdd, 0xb9, 0x0a, 0x22, 0x2e, 0xe3, 0x57, 0xc2, 0x02, 0xe1, 0xd2, 0xd7, 0x07, 0xf7, 0x4f, 0x69,
	0xf8, 0xa4, 0xfb, 0x26, 0x5a, 0xf2, 0x2f, 0x4a, 0x08, 0xea, 0x52, 0x80, 0x99, 0x9d, 0xd9, 0x77,
	0x5e, 0x07, 0xac, 0xd7, 0xf0, 0xab, 0x7e, 0xf5, 0xf4, 0xa0, 0x16, 0x10, 0xf0, 0x3e, 0x5a, 0xe8,
	0xed, 0xef, 0xc2, 0x75, 0xb7, 0xba, 0x17, 0x02, 0x50, 0x33, 0x8d, 0x4c, 0x13, 0xbb, 0x3f, 0xeb,
	0x0e, 0xef, 0x14, 0x0c, 0x1e, 0xbd, 0xfd, 0x99, 0xe6, 0x9c, 0x38, 0x28, 0xdc, 0x41, 0x0b, 0x8f,
	0x0e, 0x76, 0xe1, 0x9e, 0xa7, 0x88, 0x4d, 0xfb, 0x4f, 0xdc, 0x26, 0xbe, 0x86, 0xce, 0xf4, 0x7b,
	0xf0, 0x80, 0xb4, 0xba, 0xe7, 0x6b, 0xf5, 0xa1, 0x39, 0x24, 0x67, 0xfa, 0x3d, 0xbc, 0x8d, 0x56,
	0xea, 0x67, 0x18, 0x2a, 0xbf, 0xd5, 0x7d, 0x35, 0x98, 0xcd, 0xbf, 0xce, 0x49, 0x63, 0x86, 0x6f,
	0xa1, 0xd5, 0xa6, 0x8a, 0xa0, 0xbc, 0x5b, 0xdd, 0xcb, 0xc1, 0xe7, 0x54, 0x75, 0x25, 0x53, 0x43,
	0xbc, 0x81, 0xce, 0x42, 0x22, 0x41, 0x21, 0xb7, 0xba, 0xb8, 0x66, 0x99, 0x26, 0x57, 0xe2, 0x0d,
	0x70, 0x85, 0x56, 0x9b, 0xb9, 0x10, 0xa6, 0xd9, 0x69, 0x74, 0xcd, 0xb7, 0xed, 0xf4, 0xfb, 0xbd,
	0x0f, 0xaa, 0xac, 0xa9, 0xeb, 0xb3, 0x19, 0x98, 0x61, 0xc6, 0x74, 0xdf, 0x68, 0xc0, 0xdf, 0x0c,
	0xd4, 0x0d, 0x34, 0xa4, 0x7d, 0x9c, 0x4c, 0xb9, 0x86, 0x4b, 0x40, 0x72, 0xf3, 0xdf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x44, 0xaa, 0xc1, 0x88, 0x49, 0x11, 0x00, 0x00,
}
