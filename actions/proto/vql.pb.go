// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vql.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "www.velocidex.com/golang/velociraptor/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type VQLCollectorArgs struct {
	Query            *string `protobuf:"bytes,1,opt,name=Query,def=select * from client_info()" json:"Query,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *VQLCollectorArgs) Reset()                    { *m = VQLCollectorArgs{} }
func (m *VQLCollectorArgs) String() string            { return proto1.CompactTextString(m) }
func (*VQLCollectorArgs) ProtoMessage()               {}
func (*VQLCollectorArgs) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

const Default_VQLCollectorArgs_Query string = "select * from client_info()"

func (m *VQLCollectorArgs) GetQuery() string {
	if m != nil && m.Query != nil {
		return *m.Query
	}
	return Default_VQLCollectorArgs_Query
}

type VQLResponse struct {
	Response         *string `protobuf:"bytes,1,opt,name=Response" json:"Response,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *VQLResponse) Reset()                    { *m = VQLResponse{} }
func (m *VQLResponse) String() string            { return proto1.CompactTextString(m) }
func (*VQLResponse) ProtoMessage()               {}
func (*VQLResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *VQLResponse) GetResponse() string {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return ""
}

func init() {
	proto1.RegisterType((*VQLCollectorArgs)(nil), "proto.VQLCollectorArgs")
	proto1.RegisterType((*VQLResponse)(nil), "proto.VQLResponse")
}

func init() { proto1.RegisterFile("vql.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8d, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x95, 0xa1, 0x12, 0x35, 0x0b, 0xf2, 0x80, 0x2a, 0x90, 0xd0, 0xa9, 0x0b, 0x2d, 0x83,
	0xbd, 0x67, 0xa3, 0x4c, 0xa0, 0x08, 0x94, 0x80, 0xb2, 0xa2, 0xe0, 0x5c, 0xd3, 0x48, 0x8e, 0x2f,
	0xb5, 0xaf, 0x49, 0x79, 0x3f, 0x9e, 0x04, 0x5e, 0x83, 0x01, 0x35, 0x29, 0x9d, 0xee, 0x74, 0xf7,
	0xfd, 0xdf, 0x2f, 0xa6, 0xdd, 0xd6, 0xaa, 0xd6, 0x13, 0x93, 0x9c, 0x0c, 0xe3, 0x2a, 0xee, 0xfb,
	0x5e, 0x75, 0x68, 0xc9, 0xd4, 0x25, 0xee, 0x95, 0xa1, 0x46, 0x57, 0x64, 0x0b, 0x57, 0xe9, 0xf1,
	0xe8, 0x8b, 0x96, 0xc9, 0xeb, 0x01, 0xd6, 0x01, 0x9b, 0xc2, 0x71, 0x6d, 0x46, 0xc5, 0xbc, 0x13,
	0x17, 0x79, 0x9a, 0x3c, 0x90, 0xb5, 0x68, 0x98, 0xfc, 0xbd, 0xaf, 0x82, 0xfc, 0x10, 0x93, 0x74,
	0x87, 0xfe, 0x73, 0x16, 0x41, 0xb4, 0x98, 0xc6, 0xd7, 0x01, 0x0f, 0x4f, 0xb8, 0x83, 0xb5, 0xa7,
	0x06, 0x8c, 0xad, 0xd1, 0xf1, 0x7b, 0xed, 0xd6, 0xb4, 0x58, 0xae, 0xf4, 0xf7, 0xef, 0xcf, 0x57,
	0xb4, 0x94, 0xb7, 0x6f, 0x1b, 0x84, 0x3c, 0x4d, 0x60, 0x7b, 0x48, 0x02, 0x13, 0xe0, 0x1e, 0xcd,
	0x8e, 0x11, 0xc8, 0x01, 0x6f, 0xf0, 0x18, 0x53, 0xd9, 0xa8, 0x9e, 0x3f, 0x8a, 0xf3, 0x3c, 0x4d,
	0x32, 0x0c, 0x2d, 0xb9, 0x80, 0x32, 0x16, 0x67, 0xff, 0xfb, 0xd8, 0xba, 0xba, 0x19, 0xc4, 0x33,
	0x79, 0xf9, 0xf4, 0xfa, 0xf2, 0x0c, 0xe8, 0x0c, 0x95, 0x58, 0x82, 0x3f, 0x42, 0x2a, 0x3b, 0xf1,
	0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x7b, 0x19, 0xf4, 0x11, 0x01, 0x00, 0x00,
}
